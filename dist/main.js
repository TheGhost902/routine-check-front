!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=27)}([function(e,t,n){"use strict";e.exports=n(14)},function(e,t,n){e.exports=n(18)()},function(e,t,n){"use strict";e.exports=function(e,t,n,r,o,a,i,l){if(!e){var u;if(void 0===t)u=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var c=[n,r,o,a,i,l],s=0;(u=new Error(t.replace(/%s/g,(function(){return c[s++]})))).name="Invariant Violation"}throw u.framesToPop=1,u}}},function(e,t,n){"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE){0;try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}}(),e.exports=n(15)},function(e,t,n){"use strict";var r=n(5),o={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},a={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},i={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},l={};function u(e){return r.isMemo(e)?i:l[e.$$typeof]||o}l[r.ForwardRef]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},l[r.Memo]=i;var c=Object.defineProperty,s=Object.getOwnPropertyNames,f=Object.getOwnPropertySymbols,d=Object.getOwnPropertyDescriptor,p=Object.getPrototypeOf,m=Object.prototype;e.exports=function e(t,n,r){if("string"!=typeof n){if(m){var o=p(n);o&&o!==m&&e(t,o,r)}var i=s(n);f&&(i=i.concat(f(n)));for(var l=u(t),h=u(n),v=0;v<i.length;++v){var y=i[v];if(!(a[y]||r&&r[y]||h&&h[y]||l&&l[y])){var g=d(n,y);try{c(t,y,g)}catch(e){}}}}return t}},function(e,t,n){"use strict";e.exports=n(20)},,function(e,t,n){"use strict";(function(e,r){var o,a=n(12);o="undefined"!=typeof self?self:"undefined"!=typeof window?window:void 0!==e?e:r;var i=Object(a.a)(o);t.a=i}).call(this,n(11),n(21)(e))},function(e,t){e.exports=function(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e.__proto__=t}},function(e,t,n){var r=n(26);e.exports=p,e.exports.parse=a,e.exports.compile=function(e,t){return l(a(e,t),t)},e.exports.tokensToFunction=l,e.exports.tokensToRegExp=d;var o=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function a(e,t){for(var n,r=[],a=0,i=0,l="",s=t&&t.delimiter||"/";null!=(n=o.exec(e));){var f=n[0],d=n[1],p=n.index;if(l+=e.slice(i,p),i=p+f.length,d)l+=d[1];else{var m=e[i],h=n[2],v=n[3],y=n[4],g=n[5],b=n[6],w=n[7];l&&(r.push(l),l="");var E=null!=h&&null!=m&&m!==h,x="+"===b||"*"===b,k="?"===b||"*"===b,T=n[2]||s,S=y||g;r.push({name:v||a++,prefix:h||"",delimiter:T,optional:k,repeat:x,partial:E,asterisk:!!w,pattern:S?c(S):w?".*":"[^"+u(T)+"]+?"})}}return i<e.length&&(l+=e.substr(i)),l&&r.push(l),r}function i(e){return encodeURI(e).replace(/[\/?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function l(e,t){for(var n=new Array(e.length),o=0;o<e.length;o++)"object"==typeof e[o]&&(n[o]=new RegExp("^(?:"+e[o].pattern+")$",f(t)));return function(t,o){for(var a="",l=t||{},u=(o||{}).pretty?i:encodeURIComponent,c=0;c<e.length;c++){var s=e[c];if("string"!=typeof s){var f,d=l[s.name];if(null==d){if(s.optional){s.partial&&(a+=s.prefix);continue}throw new TypeError('Expected "'+s.name+'" to be defined')}if(r(d)){if(!s.repeat)throw new TypeError('Expected "'+s.name+'" to not repeat, but received `'+JSON.stringify(d)+"`");if(0===d.length){if(s.optional)continue;throw new TypeError('Expected "'+s.name+'" to not be empty')}for(var p=0;p<d.length;p++){if(f=u(d[p]),!n[c].test(f))throw new TypeError('Expected all "'+s.name+'" to match "'+s.pattern+'", but received `'+JSON.stringify(f)+"`");a+=(0===p?s.prefix:s.delimiter)+f}}else{if(f=s.asterisk?encodeURI(d).replace(/[?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})):u(d),!n[c].test(f))throw new TypeError('Expected "'+s.name+'" to match "'+s.pattern+'", but received "'+f+'"');a+=s.prefix+f}}else a+=s}return a}}function u(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function c(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function s(e,t){return e.keys=t,e}function f(e){return e&&e.sensitive?"":"i"}function d(e,t,n){r(t)||(n=t||n,t=[]);for(var o=(n=n||{}).strict,a=!1!==n.end,i="",l=0;l<e.length;l++){var c=e[l];if("string"==typeof c)i+=u(c);else{var d=u(c.prefix),p="(?:"+c.pattern+")";t.push(c),c.repeat&&(p+="(?:"+d+p+")*"),i+=p=c.optional?c.partial?d+"("+p+")?":"(?:"+d+"("+p+"))?":d+"("+p+")"}}var m=u(n.delimiter||"/"),h=i.slice(-m.length)===m;return o||(i=(h?i.slice(0,-m.length):i)+"(?:"+m+"(?=$))?"),i+=a?"$":o&&h?"":"(?="+m+"|$)",s(new RegExp("^"+i,f(n)),t)}function p(e,t,n){return r(t)||(n=t||n,t=[]),n=n||{},e instanceof RegExp?function(e,t){var n=e.source.match(/\((?!\?)/g);if(n)for(var r=0;r<n.length;r++)t.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return s(e,t)}(e,t):r(e)?function(e,t,n){for(var r=[],o=0;o<e.length;o++)r.push(p(e[o],t,n).source);return s(new RegExp("(?:"+r.join("|")+")",f(n)),t)}(e,t,n):function(e,t,n){return d(a(e,n),t,n)}(e,t,n)}},function(e,t,n){"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/var r=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable;function i(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(e){r[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,t){for(var n,l,u=i(e),c=1;c<arguments.length;c++){for(var s in n=Object(arguments[c]))o.call(n,s)&&(u[s]=n[s]);if(r){l=r(n);for(var f=0;f<l.length;f++)a.call(n,l[f])&&(u[l[f]]=n[l[f]])}}return u}},function(e,t){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(e){"object"==typeof window&&(n=window)}e.exports=n},function(e,t,n){"use strict";function r(e){var t,n=e.Symbol;return"function"==typeof n?n.observable?t=n.observable:(t=n("observable"),n.observable=t):t="@@observable",t}n.d(t,"a",(function(){return r}))},function(e,t,n){"use strict";(function(t){var n="__global_unique_id__";e.exports=function(){return t[n]=(t[n]||0)+1}}).call(this,n(11))},function(e,t,n){"use strict";
/** @license React v16.12.0
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(10),o="function"==typeof Symbol&&Symbol.for,a=o?Symbol.for("react.element"):60103,i=o?Symbol.for("react.portal"):60106,l=o?Symbol.for("react.fragment"):60107,u=o?Symbol.for("react.strict_mode"):60108,c=o?Symbol.for("react.profiler"):60114,s=o?Symbol.for("react.provider"):60109,f=o?Symbol.for("react.context"):60110,d=o?Symbol.for("react.forward_ref"):60112,p=o?Symbol.for("react.suspense"):60113;o&&Symbol.for("react.suspense_list");var m=o?Symbol.for("react.memo"):60115,h=o?Symbol.for("react.lazy"):60116;o&&Symbol.for("react.fundamental"),o&&Symbol.for("react.responder"),o&&Symbol.for("react.scope");var v="function"==typeof Symbol&&Symbol.iterator;function y(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var g={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},b={};function w(e,t,n){this.props=e,this.context=t,this.refs=b,this.updater=n||g}function E(){}function x(e,t,n){this.props=e,this.context=t,this.refs=b,this.updater=n||g}w.prototype.isReactComponent={},w.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(y(85));this.updater.enqueueSetState(this,e,t,"setState")},w.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},E.prototype=w.prototype;var k=x.prototype=new E;k.constructor=x,r(k,w.prototype),k.isPureReactComponent=!0;var T={current:null},S={current:null},C=Object.prototype.hasOwnProperty,_={key:!0,ref:!0,__self:!0,__source:!0};function P(e,t,n){var r,o={},i=null,l=null;if(null!=t)for(r in void 0!==t.ref&&(l=t.ref),void 0!==t.key&&(i=""+t.key),t)C.call(t,r)&&!_.hasOwnProperty(r)&&(o[r]=t[r]);var u=arguments.length-2;if(1===u)o.children=n;else if(1<u){for(var c=Array(u),s=0;s<u;s++)c[s]=arguments[s+2];o.children=c}if(e&&e.defaultProps)for(r in u=e.defaultProps)void 0===o[r]&&(o[r]=u[r]);return{$$typeof:a,type:e,key:i,ref:l,props:o,_owner:S.current}}function O(e){return"object"==typeof e&&null!==e&&e.$$typeof===a}var N=/\/+/g,R=[];function M(e,t,n,r){if(R.length){var o=R.pop();return o.result=e,o.keyPrefix=t,o.func=n,o.context=r,o.count=0,o}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function j(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>R.length&&R.push(e)}function I(e,t,n){return null==e?0:function e(t,n,r,o){var l=typeof t;"undefined"!==l&&"boolean"!==l||(t=null);var u=!1;if(null===t)u=!0;else switch(l){case"string":case"number":u=!0;break;case"object":switch(t.$$typeof){case a:case i:u=!0}}if(u)return r(o,t,""===n?"."+z(t,0):n),1;if(u=0,n=""===n?".":n+":",Array.isArray(t))for(var c=0;c<t.length;c++){var s=n+z(l=t[c],c);u+=e(l,s,r,o)}else if(null===t||"object"!=typeof t?s=null:s="function"==typeof(s=v&&t[v]||t["@@iterator"])?s:null,"function"==typeof s)for(t=s.call(t),c=0;!(l=t.next()).done;)u+=e(l=l.value,s=n+z(l,c++),r,o);else if("object"===l)throw r=""+t,Error(y(31,"[object Object]"===r?"object with keys {"+Object.keys(t).join(", ")+"}":r,""));return u}(e,"",t,n)}function z(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,(function(e){return t[e]}))}(e.key):t.toString(36)}function F(e,t){e.func.call(e.context,t,e.count++)}function D(e,t,n){var r=e.result,o=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?L(e,r,n,(function(e){return e})):null!=e&&(O(e)&&(e=function(e,t){return{$$typeof:a,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(e,o+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(N,"$&/")+"/")+n)),r.push(e))}function L(e,t,n,r,o){var a="";null!=n&&(a=(""+n).replace(N,"$&/")+"/"),I(e,D,t=M(t,a,r,o)),j(t)}function U(){var e=T.current;if(null===e)throw Error(y(321));return e}var A={Children:{map:function(e,t,n){if(null==e)return e;var r=[];return L(e,r,null,t,n),r},forEach:function(e,t,n){if(null==e)return e;I(e,F,t=M(null,null,t,n)),j(t)},count:function(e){return I(e,(function(){return null}),null)},toArray:function(e){var t=[];return L(e,t,null,(function(e){return e})),t},only:function(e){if(!O(e))throw Error(y(143));return e}},createRef:function(){return{current:null}},Component:w,PureComponent:x,createContext:function(e,t){return void 0===t&&(t=null),(e={$$typeof:f,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:s,_context:e},e.Consumer=e},forwardRef:function(e){return{$$typeof:d,render:e}},lazy:function(e){return{$$typeof:h,_ctor:e,_status:-1,_result:null}},memo:function(e,t){return{$$typeof:m,type:e,compare:void 0===t?null:t}},useCallback:function(e,t){return U().useCallback(e,t)},useContext:function(e,t){return U().useContext(e,t)},useEffect:function(e,t){return U().useEffect(e,t)},useImperativeHandle:function(e,t,n){return U().useImperativeHandle(e,t,n)},useDebugValue:function(){},useLayoutEffect:function(e,t){return U().useLayoutEffect(e,t)},useMemo:function(e,t){return U().useMemo(e,t)},useReducer:function(e,t,n){return U().useReducer(e,t,n)},useRef:function(e){return U().useRef(e)},useState:function(e){return U().useState(e)},Fragment:l,Profiler:c,StrictMode:u,Suspense:p,createElement:P,cloneElement:function(e,t,n){if(null==e)throw Error(y(267,e));var o=r({},e.props),i=e.key,l=e.ref,u=e._owner;if(null!=t){if(void 0!==t.ref&&(l=t.ref,u=S.current),void 0!==t.key&&(i=""+t.key),e.type&&e.type.defaultProps)var c=e.type.defaultProps;for(s in t)C.call(t,s)&&!_.hasOwnProperty(s)&&(o[s]=void 0===t[s]&&void 0!==c?c[s]:t[s])}var s=arguments.length-2;if(1===s)o.children=n;else if(1<s){c=Array(s);for(var f=0;f<s;f++)c[f]=arguments[f+2];o.children=c}return{$$typeof:a,type:e.type,key:i,ref:l,props:o,_owner:u}},createFactory:function(e){var t=P.bind(null,e);return t.type=e,t},isValidElement:O,version:"16.12.0",__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentDispatcher:T,ReactCurrentBatchConfig:{suspense:null},ReactCurrentOwner:S,IsSomeRendererActing:{current:!1},assign:r}},$={default:A},W=$&&A||$;e.exports=W.default||W},function(e,t,n){"use strict";
/** @license React v16.12.0
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(0),o=n(10),a=n(16);function i(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!r)throw Error(i(227));var l=null,u={};function c(){if(l)for(var e in u){var t=u[e],n=l.indexOf(e);if(!(-1<n))throw Error(i(96,e));if(!f[n]){if(!t.extractEvents)throw Error(i(97,e));for(var r in f[n]=t,n=t.eventTypes){var o=void 0,a=n[r],c=t,p=r;if(d.hasOwnProperty(p))throw Error(i(99,p));d[p]=a;var m=a.phasedRegistrationNames;if(m){for(o in m)m.hasOwnProperty(o)&&s(m[o],c,p);o=!0}else a.registrationName?(s(a.registrationName,c,p),o=!0):o=!1;if(!o)throw Error(i(98,r,e))}}}}function s(e,t,n){if(p[e])throw Error(i(100,e));p[e]=t,m[e]=t.eventTypes[n].dependencies}var f=[],d={},p={},m={};function h(e,t,n,r,o,a,i,l,u){var c=Array.prototype.slice.call(arguments,3);try{t.apply(n,c)}catch(e){this.onError(e)}}var v=!1,y=null,g=!1,b=null,w={onError:function(e){v=!0,y=e}};function E(e,t,n,r,o,a,i,l,u){v=!1,y=null,h.apply(w,arguments)}var x=null,k=null,T=null;function S(e,t,n){var r=e.type||"unknown-event";e.currentTarget=T(n),function(e,t,n,r,o,a,l,u,c){if(E.apply(this,arguments),v){if(!v)throw Error(i(198));var s=y;v=!1,y=null,g||(g=!0,b=s)}}(r,t,void 0,e),e.currentTarget=null}function C(e,t){if(null==t)throw Error(i(30));return null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}function _(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)}var P=null;function O(e){if(e){var t=e._dispatchListeners,n=e._dispatchInstances;if(Array.isArray(t))for(var r=0;r<t.length&&!e.isPropagationStopped();r++)S(e,t[r],n[r]);else t&&S(e,t,n);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}}function N(e){if(null!==e&&(P=C(P,e)),e=P,P=null,e){if(_(e,O),P)throw Error(i(95));if(g)throw e=b,g=!1,b=null,e}}var R={injectEventPluginOrder:function(e){if(l)throw Error(i(101));l=Array.prototype.slice.call(e),c()},injectEventPluginsByName:function(e){var t,n=!1;for(t in e)if(e.hasOwnProperty(t)){var r=e[t];if(!u.hasOwnProperty(t)||u[t]!==r){if(u[t])throw Error(i(102,t));u[t]=r,n=!0}}n&&c()}};function M(e,t){var n=e.stateNode;if(!n)return null;var r=x(n);if(!r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw Error(i(231,t,typeof n));return n}var j=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;j.hasOwnProperty("ReactCurrentDispatcher")||(j.ReactCurrentDispatcher={current:null}),j.hasOwnProperty("ReactCurrentBatchConfig")||(j.ReactCurrentBatchConfig={suspense:null});var I=/^(.*)[\\\/]/,z="function"==typeof Symbol&&Symbol.for,F=z?Symbol.for("react.element"):60103,D=z?Symbol.for("react.portal"):60106,L=z?Symbol.for("react.fragment"):60107,U=z?Symbol.for("react.strict_mode"):60108,A=z?Symbol.for("react.profiler"):60114,$=z?Symbol.for("react.provider"):60109,W=z?Symbol.for("react.context"):60110,B=z?Symbol.for("react.concurrent_mode"):60111,H=z?Symbol.for("react.forward_ref"):60112,V=z?Symbol.for("react.suspense"):60113,q=z?Symbol.for("react.suspense_list"):60120,K=z?Symbol.for("react.memo"):60115,Q=z?Symbol.for("react.lazy"):60116;z&&Symbol.for("react.fundamental"),z&&Symbol.for("react.responder"),z&&Symbol.for("react.scope");var Y="function"==typeof Symbol&&Symbol.iterator;function G(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=Y&&e[Y]||e["@@iterator"])?e:null}function X(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case L:return"Fragment";case D:return"Portal";case A:return"Profiler";case U:return"StrictMode";case V:return"Suspense";case q:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case W:return"Context.Consumer";case $:return"Context.Provider";case H:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case K:return X(e.type);case Q:if(e=1===e._status?e._result:null)return X(e)}return null}function J(e){var t="";do{e:switch(e.tag){case 3:case 4:case 6:case 7:case 10:case 9:var n="";break e;default:var r=e._debugOwner,o=e._debugSource,a=X(e.type);n=null,r&&(n=X(r.type)),r=a,a="",o?a=" (at "+o.fileName.replace(I,"")+":"+o.lineNumber+")":n&&(a=" (created by "+n+")"),n="\n    in "+(r||"Unknown")+a}t+=n,e=e.return}while(e);return t}var Z=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),ee=null,te=null,ne=null;function re(e){if(e=k(e)){if("function"!=typeof ee)throw Error(i(280));var t=x(e.stateNode);ee(e.stateNode,e.type,t)}}function oe(e){te?ne?ne.push(e):ne=[e]:te=e}function ae(){if(te){var e=te,t=ne;if(ne=te=null,re(e),t)for(e=0;e<t.length;e++)re(t[e])}}function ie(e,t){return e(t)}function le(e,t,n,r){return e(t,n,r)}function ue(){}var ce=ie,se=!1,fe=!1;function de(){null===te&&null===ne||(ue(),ae())}new Map;var pe=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,me=Object.prototype.hasOwnProperty,he={},ve={};function ye(e,t,n,r,o,a){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=o,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=a}var ge={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){ge[e]=new ye(e,0,!1,e,null,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];ge[t]=new ye(t,1,!1,e[1],null,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){ge[e]=new ye(e,2,!1,e.toLowerCase(),null,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){ge[e]=new ye(e,2,!1,e,null,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){ge[e]=new ye(e,3,!1,e.toLowerCase(),null,!1)})),["checked","multiple","muted","selected"].forEach((function(e){ge[e]=new ye(e,3,!0,e,null,!1)})),["capture","download"].forEach((function(e){ge[e]=new ye(e,4,!1,e,null,!1)})),["cols","rows","size","span"].forEach((function(e){ge[e]=new ye(e,6,!1,e,null,!1)})),["rowSpan","start"].forEach((function(e){ge[e]=new ye(e,5,!1,e.toLowerCase(),null,!1)}));var be=/[\-:]([a-z])/g;function we(e){return e[1].toUpperCase()}function Ee(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function xe(e,t,n,r){var o=ge.hasOwnProperty(t)?ge[t]:null;(null!==o?0===o.type:!r&&(2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1])))||(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,o,r)&&(n=null),r||null===o?function(e){return!!me.call(ve,e)||!me.call(he,e)&&(pe.test(e)?ve[e]=!0:(he[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):o.mustUseProperty?e[o.propertyName]=null===n?3!==o.type&&"":n:(t=o.attributeName,r=o.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(o=o.type)||4===o&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}function ke(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function Te(e){e._valueTracker||(e._valueTracker=function(e){var t=ke(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var o=n.get,a=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return o.call(this)},set:function(e){r=""+e,a.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function Se(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=ke(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function Ce(e,t){var n=t.checked;return o({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function _e(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=Ee(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function Pe(e,t){null!=(t=t.checked)&&xe(e,"checked",t,!1)}function Oe(e,t){Pe(e,t);var n=Ee(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?Re(e,t.type,n):t.hasOwnProperty("defaultValue")&&Re(e,t.type,Ee(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function Ne(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!e.defaultChecked,e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function Re(e,t,n){"number"===t&&e.ownerDocument.activeElement===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}function Me(e,t){return e=o({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,(function(e){null!=e&&(t+=e)})),t}(t.children))&&(e.children=t),e}function je(e,t,n,r){if(e=e.options,t){t={};for(var o=0;o<n.length;o++)t["$"+n[o]]=!0;for(n=0;n<e.length;n++)o=t.hasOwnProperty("$"+e[n].value),e[n].selected!==o&&(e[n].selected=o),o&&r&&(e[n].defaultSelected=!0)}else{for(n=""+Ee(n),t=null,o=0;o<e.length;o++){if(e[o].value===n)return e[o].selected=!0,void(r&&(e[o].defaultSelected=!0));null!==t||e[o].disabled||(t=e[o])}null!==t&&(t.selected=!0)}}function Ie(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(i(91));return o({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function ze(e,t){var n=t.value;if(null==n){if(n=t.defaultValue,null!=(t=t.children)){if(null!=n)throw Error(i(92));if(Array.isArray(t)){if(!(1>=t.length))throw Error(i(93));t=t[0]}n=t}null==n&&(n="")}e._wrapperState={initialValue:Ee(n)}}function Fe(e,t){var n=Ee(t.value),r=Ee(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function De(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(be,we);ge[t]=new ye(t,1,!1,e,null,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(be,we);ge[t]=new ye(t,1,!1,e,"http://www.w3.org/1999/xlink",!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(be,we);ge[t]=new ye(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1)})),["tabIndex","crossOrigin"].forEach((function(e){ge[e]=new ye(e,1,!1,e.toLowerCase(),null,!1)})),ge.xlinkHref=new ye("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0),["src","href","action","formAction"].forEach((function(e){ge[e]=new ye(e,1,!1,e.toLowerCase(),null,!0)}));var Le="http://www.w3.org/1999/xhtml",Ue="http://www.w3.org/2000/svg";function Ae(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function $e(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?Ae(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var We,Be=function(e){return"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(t,n,r,o){MSApp.execUnsafeLocalFunction((function(){return e(t,n)}))}:e}((function(e,t){if(e.namespaceURI!==Ue||"innerHTML"in e)e.innerHTML=t;else{for((We=We||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=We.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}}));function He(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}function Ve(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var qe={animationend:Ve("Animation","AnimationEnd"),animationiteration:Ve("Animation","AnimationIteration"),animationstart:Ve("Animation","AnimationStart"),transitionend:Ve("Transition","TransitionEnd")},Ke={},Qe={};function Ye(e){if(Ke[e])return Ke[e];if(!qe[e])return e;var t,n=qe[e];for(t in n)if(n.hasOwnProperty(t)&&t in Qe)return Ke[e]=n[t];return e}Z&&(Qe=document.createElement("div").style,"AnimationEvent"in window||(delete qe.animationend.animation,delete qe.animationiteration.animation,delete qe.animationstart.animation),"TransitionEvent"in window||delete qe.transitionend.transition);var Ge=Ye("animationend"),Xe=Ye("animationiteration"),Je=Ye("animationstart"),Ze=Ye("transitionend"),et="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" ");function tt(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(1026&(t=e).effectTag)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function nt(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&(null!==(e=e.alternate)&&(t=e.memoizedState)),null!==t)return t.dehydrated}return null}function rt(e){if(tt(e)!==e)throw Error(i(188))}function ot(e){if(!(e=function(e){var t=e.alternate;if(!t){if(null===(t=tt(e)))throw Error(i(188));return t!==e?null:e}for(var n=e,r=t;;){var o=n.return;if(null===o)break;var a=o.alternate;if(null===a){if(null!==(r=o.return)){n=r;continue}break}if(o.child===a.child){for(a=o.child;a;){if(a===n)return rt(o),e;if(a===r)return rt(o),t;a=a.sibling}throw Error(i(188))}if(n.return!==r.return)n=o,r=a;else{for(var l=!1,u=o.child;u;){if(u===n){l=!0,n=o,r=a;break}if(u===r){l=!0,r=o,n=a;break}u=u.sibling}if(!l){for(u=a.child;u;){if(u===n){l=!0,n=a,r=o;break}if(u===r){l=!0,r=a,n=o;break}u=u.sibling}if(!l)throw Error(i(189))}}if(n.alternate!==r)throw Error(i(190))}if(3!==n.tag)throw Error(i(188));return n.stateNode.current===n?e:t}(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}var at,it,lt,ut=!1,ct=[],st=null,ft=null,dt=null,pt=new Map,mt=new Map,ht=[],vt="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput close cancel copy cut paste click change contextmenu reset submit".split(" "),yt="focus blur dragenter dragleave mouseover mouseout pointerover pointerout gotpointercapture lostpointercapture".split(" ");function gt(e,t,n,r){return{blockedOn:e,topLevelType:t,eventSystemFlags:32|n,nativeEvent:r}}function bt(e,t){switch(e){case"focus":case"blur":st=null;break;case"dragenter":case"dragleave":ft=null;break;case"mouseover":case"mouseout":dt=null;break;case"pointerover":case"pointerout":pt.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":mt.delete(t.pointerId)}}function wt(e,t,n,r,o){return null===e||e.nativeEvent!==o?(e=gt(t,n,r,o),null!==t&&(null!==(t=cr(t))&&it(t)),e):(e.eventSystemFlags|=r,e)}function Et(e){var t=ur(e.target);if(null!==t){var n=tt(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=nt(n)))return e.blockedOn=t,void a.unstable_runWithPriority(e.priority,(function(){lt(n)}))}else if(3===t&&n.stateNode.hydrate)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function xt(e){if(null!==e.blockedOn)return!1;var t=Rn(e.topLevelType,e.eventSystemFlags,e.nativeEvent);if(null!==t){var n=cr(t);return null!==n&&it(n),e.blockedOn=t,!1}return!0}function kt(e,t,n){xt(e)&&n.delete(t)}function Tt(){for(ut=!1;0<ct.length;){var e=ct[0];if(null!==e.blockedOn){null!==(e=cr(e.blockedOn))&&at(e);break}var t=Rn(e.topLevelType,e.eventSystemFlags,e.nativeEvent);null!==t?e.blockedOn=t:ct.shift()}null!==st&&xt(st)&&(st=null),null!==ft&&xt(ft)&&(ft=null),null!==dt&&xt(dt)&&(dt=null),pt.forEach(kt),mt.forEach(kt)}function St(e,t){e.blockedOn===t&&(e.blockedOn=null,ut||(ut=!0,a.unstable_scheduleCallback(a.unstable_NormalPriority,Tt)))}function Ct(e){function t(t){return St(t,e)}if(0<ct.length){St(ct[0],e);for(var n=1;n<ct.length;n++){var r=ct[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==st&&St(st,e),null!==ft&&St(ft,e),null!==dt&&St(dt,e),pt.forEach(t),mt.forEach(t),n=0;n<ht.length;n++)(r=ht[n]).blockedOn===e&&(r.blockedOn=null);for(;0<ht.length&&null===(n=ht[0]).blockedOn;)Et(n),null===n.blockedOn&&ht.shift()}function _t(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}function Pt(e){do{e=e.return}while(e&&5!==e.tag);return e||null}function Ot(e,t,n){(t=M(e,n.dispatchConfig.phasedRegistrationNames[t]))&&(n._dispatchListeners=C(n._dispatchListeners,t),n._dispatchInstances=C(n._dispatchInstances,e))}function Nt(e){if(e&&e.dispatchConfig.phasedRegistrationNames){for(var t=e._targetInst,n=[];t;)n.push(t),t=Pt(t);for(t=n.length;0<t--;)Ot(n[t],"captured",e);for(t=0;t<n.length;t++)Ot(n[t],"bubbled",e)}}function Rt(e,t,n){e&&n&&n.dispatchConfig.registrationName&&(t=M(e,n.dispatchConfig.registrationName))&&(n._dispatchListeners=C(n._dispatchListeners,t),n._dispatchInstances=C(n._dispatchInstances,e))}function Mt(e){e&&e.dispatchConfig.registrationName&&Rt(e._targetInst,null,e)}function jt(e){_(e,Nt)}function It(){return!0}function zt(){return!1}function Ft(e,t,n,r){for(var o in this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n,e=this.constructor.Interface)e.hasOwnProperty(o)&&((t=e[o])?this[o]=t(n):"target"===o?this.target=r:this[o]=n[o]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?It:zt,this.isPropagationStopped=zt,this}function Dt(e,t,n,r){if(this.eventPool.length){var o=this.eventPool.pop();return this.call(o,e,t,n,r),o}return new this(e,t,n,r)}function Lt(e){if(!(e instanceof this))throw Error(i(279));e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function Ut(e){e.eventPool=[],e.getPooled=Dt,e.release=Lt}o(Ft.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=It)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=It)},persist:function(){this.isPersistent=It},isPersistent:zt,destructor:function(){var e,t=this.constructor.Interface;for(e in t)this[e]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null,this.isPropagationStopped=this.isDefaultPrevented=zt,this._dispatchInstances=this._dispatchListeners=null}}),Ft.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null},Ft.extend=function(e){function t(){}function n(){return r.apply(this,arguments)}var r=this;t.prototype=r.prototype;var a=new t;return o(a,n.prototype),n.prototype=a,n.prototype.constructor=n,n.Interface=o({},r.Interface,e),n.extend=r.extend,Ut(n),n},Ut(Ft);var At=Ft.extend({animationName:null,elapsedTime:null,pseudoElement:null}),$t=Ft.extend({clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),Wt=Ft.extend({view:null,detail:null}),Bt=Wt.extend({relatedTarget:null});function Ht(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}var Vt={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},qt={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Kt={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Qt(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Kt[e])&&!!t[e]}function Yt(){return Qt}for(var Gt=Wt.extend({key:function(e){if(e.key){var t=Vt[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=Ht(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?qt[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Yt,charCode:function(e){return"keypress"===e.type?Ht(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?Ht(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),Xt=0,Jt=0,Zt=!1,en=!1,tn=Wt.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Yt,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)},movementX:function(e){if("movementX"in e)return e.movementX;var t=Xt;return Xt=e.screenX,Zt?"mousemove"===e.type?e.screenX-t:0:(Zt=!0,0)},movementY:function(e){if("movementY"in e)return e.movementY;var t=Jt;return Jt=e.screenY,en?"mousemove"===e.type?e.screenY-t:0:(en=!0,0)}}),nn=tn.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),rn=tn.extend({dataTransfer:null}),on=Wt.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Yt}),an=Ft.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),ln=tn.extend({deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null}),un=[["blur","blur",0],["cancel","cancel",0],["click","click",0],["close","close",0],["contextmenu","contextMenu",0],["copy","copy",0],["cut","cut",0],["auxclick","auxClick",0],["dblclick","doubleClick",0],["dragend","dragEnd",0],["dragstart","dragStart",0],["drop","drop",0],["focus","focus",0],["input","input",0],["invalid","invalid",0],["keydown","keyDown",0],["keypress","keyPress",0],["keyup","keyUp",0],["mousedown","mouseDown",0],["mouseup","mouseUp",0],["paste","paste",0],["pause","pause",0],["play","play",0],["pointercancel","pointerCancel",0],["pointerdown","pointerDown",0],["pointerup","pointerUp",0],["ratechange","rateChange",0],["reset","reset",0],["seeked","seeked",0],["submit","submit",0],["touchcancel","touchCancel",0],["touchend","touchEnd",0],["touchstart","touchStart",0],["volumechange","volumeChange",0],["drag","drag",1],["dragenter","dragEnter",1],["dragexit","dragExit",1],["dragleave","dragLeave",1],["dragover","dragOver",1],["mousemove","mouseMove",1],["mouseout","mouseOut",1],["mouseover","mouseOver",1],["pointermove","pointerMove",1],["pointerout","pointerOut",1],["pointerover","pointerOver",1],["scroll","scroll",1],["toggle","toggle",1],["touchmove","touchMove",1],["wheel","wheel",1],["abort","abort",2],[Ge,"animationEnd",2],[Xe,"animationIteration",2],[Je,"animationStart",2],["canplay","canPlay",2],["canplaythrough","canPlayThrough",2],["durationchange","durationChange",2],["emptied","emptied",2],["encrypted","encrypted",2],["ended","ended",2],["error","error",2],["gotpointercapture","gotPointerCapture",2],["load","load",2],["loadeddata","loadedData",2],["loadedmetadata","loadedMetadata",2],["loadstart","loadStart",2],["lostpointercapture","lostPointerCapture",2],["playing","playing",2],["progress","progress",2],["seeking","seeking",2],["stalled","stalled",2],["suspend","suspend",2],["timeupdate","timeUpdate",2],[Ze,"transitionEnd",2],["waiting","waiting",2]],cn={},sn={},fn=0;fn<un.length;fn++){var dn=un[fn],pn=dn[0],mn=dn[1],hn=dn[2],vn="on"+(mn[0].toUpperCase()+mn.slice(1)),yn={phasedRegistrationNames:{bubbled:vn,captured:vn+"Capture"},dependencies:[pn],eventPriority:hn};cn[mn]=yn,sn[pn]=yn}var gn={eventTypes:cn,getEventPriority:function(e){return void 0!==(e=sn[e])?e.eventPriority:2},extractEvents:function(e,t,n,r){var o=sn[e];if(!o)return null;switch(e){case"keypress":if(0===Ht(n))return null;case"keydown":case"keyup":e=Gt;break;case"blur":case"focus":e=Bt;break;case"click":if(2===n.button)return null;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":e=tn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":e=rn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":e=on;break;case Ge:case Xe:case Je:e=At;break;case Ze:e=an;break;case"scroll":e=Wt;break;case"wheel":e=ln;break;case"copy":case"cut":case"paste":e=$t;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":e=nn;break;default:e=Ft}return jt(t=e.getPooled(o,t,n,r)),t}},bn=a.unstable_UserBlockingPriority,wn=a.unstable_runWithPriority,En=gn.getEventPriority,xn=[];function kn(e){var t=e.targetInst,n=t;do{if(!n){e.ancestors.push(n);break}var r=n;if(3===r.tag)r=r.stateNode.containerInfo;else{for(;r.return;)r=r.return;r=3!==r.tag?null:r.stateNode.containerInfo}if(!r)break;5!==(t=n.tag)&&6!==t||e.ancestors.push(n),n=ur(r)}while(n);for(n=0;n<e.ancestors.length;n++){t=e.ancestors[n];var o=_t(e.nativeEvent);r=e.topLevelType;for(var a=e.nativeEvent,i=e.eventSystemFlags,l=null,u=0;u<f.length;u++){var c=f[u];c&&(c=c.extractEvents(r,t,a,o,i))&&(l=C(l,c))}N(l)}}var Tn=!0;function Sn(e,t){Cn(t,e,!1)}function Cn(e,t,n){switch(En(t)){case 0:var r=_n.bind(null,t,1);break;case 1:r=Pn.bind(null,t,1);break;default:r=Nn.bind(null,t,1)}n?e.addEventListener(t,r,!0):e.addEventListener(t,r,!1)}function _n(e,t,n){se||ue();var r=Nn,o=se;se=!0;try{le(r,e,t,n)}finally{(se=o)||de()}}function Pn(e,t,n){wn(bn,Nn.bind(null,e,t,n))}function On(e,t,n,r){if(xn.length){var o=xn.pop();o.topLevelType=e,o.eventSystemFlags=t,o.nativeEvent=n,o.targetInst=r,e=o}else e={topLevelType:e,eventSystemFlags:t,nativeEvent:n,targetInst:r,ancestors:[]};try{if(t=kn,n=e,fe)t(n,void 0);else{fe=!0;try{ce(t,n,void 0)}finally{fe=!1,de()}}}finally{e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,xn.length<10&&xn.push(e)}}function Nn(e,t,n){if(Tn)if(0<ct.length&&-1<vt.indexOf(e))e=gt(null,e,t,n),ct.push(e);else{var r=Rn(e,t,n);null===r?bt(e,n):-1<vt.indexOf(e)?(e=gt(r,e,t,n),ct.push(e)):function(e,t,n,r){switch(t){case"focus":return st=wt(st,e,t,n,r),!0;case"dragenter":return ft=wt(ft,e,t,n,r),!0;case"mouseover":return dt=wt(dt,e,t,n,r),!0;case"pointerover":var o=r.pointerId;return pt.set(o,wt(pt.get(o)||null,e,t,n,r)),!0;case"gotpointercapture":return o=r.pointerId,mt.set(o,wt(mt.get(o)||null,e,t,n,r)),!0}return!1}(r,e,t,n)||(bt(e,n),On(e,t,n,null))}}function Rn(e,t,n){var r=_t(n);if(null!==(r=ur(r))){var o=tt(r);if(null===o)r=null;else{var a=o.tag;if(13===a){if(null!==(r=nt(o)))return r;r=null}else if(3===a){if(o.stateNode.hydrate)return 3===o.tag?o.stateNode.containerInfo:null;r=null}else o!==r&&(r=null)}}return On(e,t,n,r),null}function Mn(e){if(!Z)return!1;var t=(e="on"+e)in document;return t||((t=document.createElement("div")).setAttribute(e,"return;"),t="function"==typeof t[e]),t}var jn=new("function"==typeof WeakMap?WeakMap:Map);function In(e){var t=jn.get(e);return void 0===t&&(t=new Set,jn.set(e,t)),t}function zn(e,t,n){if(!n.has(e)){switch(e){case"scroll":Cn(t,"scroll",!0);break;case"focus":case"blur":Cn(t,"focus",!0),Cn(t,"blur",!0),n.add("blur"),n.add("focus");break;case"cancel":case"close":Mn(e)&&Cn(t,e,!0);break;case"invalid":case"submit":case"reset":break;default:-1===et.indexOf(e)&&Sn(e,t)}n.add(e)}}var Fn={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},Dn=["Webkit","ms","Moz","O"];function Ln(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||Fn.hasOwnProperty(e)&&Fn[e]?(""+t).trim():t+"px"}function Un(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),o=Ln(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,o):e[n]=o}}Object.keys(Fn).forEach((function(e){Dn.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),Fn[t]=Fn[e]}))}));var An=o({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function $n(e,t){if(t){if(An[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(i(137,e,""));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(i(60));if(!("object"==typeof t.dangerouslySetInnerHTML&&"__html"in t.dangerouslySetInnerHTML))throw Error(i(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(i(62,""))}}function Wn(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function Bn(e,t){var n=In(e=9===e.nodeType||11===e.nodeType?e:e.ownerDocument);t=m[t];for(var r=0;r<t.length;r++)zn(t[r],e,n)}function Hn(){}function Vn(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function qn(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function Kn(e,t){var n,r=qn(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=qn(r)}}function Qn(){for(var e=window,t=Vn();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=Vn((e=t.contentWindow).document)}return t}function Yn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var Gn=null,Xn=null;function Jn(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function Zn(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var er="function"==typeof setTimeout?setTimeout:void 0,tr="function"==typeof clearTimeout?clearTimeout:void 0;function nr(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break}return e}function rr(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var or=Math.random().toString(36).slice(2),ar="__reactInternalInstance$"+or,ir="__reactEventHandlers$"+or,lr="__reactContainere$"+or;function ur(e){var t=e[ar];if(t)return t;for(var n=e.parentNode;n;){if(t=n[lr]||n[ar]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=rr(e);null!==e;){if(n=e[ar])return n;e=rr(e)}return t}n=(e=n).parentNode}return null}function cr(e){return!(e=e[ar]||e[lr])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function sr(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(i(33))}function fr(e){return e[ir]||null}var dr=null,pr=null,mr=null;function hr(){if(mr)return mr;var e,t,n=pr,r=n.length,o="value"in dr?dr.value:dr.textContent,a=o.length;for(e=0;e<r&&n[e]===o[e];e++);var i=r-e;for(t=1;t<=i&&n[r-t]===o[a-t];t++);return mr=o.slice(e,1<t?1-t:void 0)}var vr=Ft.extend({data:null}),yr=Ft.extend({data:null}),gr=[9,13,27,32],br=Z&&"CompositionEvent"in window,wr=null;Z&&"documentMode"in document&&(wr=document.documentMode);var Er=Z&&"TextEvent"in window&&!wr,xr=Z&&(!br||wr&&8<wr&&11>=wr),kr=String.fromCharCode(32),Tr={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},Sr=!1;function Cr(e,t){switch(e){case"keyup":return-1!==gr.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function _r(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var Pr=!1;var Or={eventTypes:Tr,extractEvents:function(e,t,n,r){var o;if(br)e:{switch(e){case"compositionstart":var a=Tr.compositionStart;break e;case"compositionend":a=Tr.compositionEnd;break e;case"compositionupdate":a=Tr.compositionUpdate;break e}a=void 0}else Pr?Cr(e,n)&&(a=Tr.compositionEnd):"keydown"===e&&229===n.keyCode&&(a=Tr.compositionStart);return a?(xr&&"ko"!==n.locale&&(Pr||a!==Tr.compositionStart?a===Tr.compositionEnd&&Pr&&(o=hr()):(pr="value"in(dr=r)?dr.value:dr.textContent,Pr=!0)),a=vr.getPooled(a,t,n,r),o?a.data=o:null!==(o=_r(n))&&(a.data=o),jt(a),o=a):o=null,(e=Er?function(e,t){switch(e){case"compositionend":return _r(t);case"keypress":return 32!==t.which?null:(Sr=!0,kr);case"textInput":return(e=t.data)===kr&&Sr?null:e;default:return null}}(e,n):function(e,t){if(Pr)return"compositionend"===e||!br&&Cr(e,t)?(e=hr(),mr=pr=dr=null,Pr=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return xr&&"ko"!==t.locale?null:t.data;default:return null}}(e,n))?((t=yr.getPooled(Tr.beforeInput,t,n,r)).data=e,jt(t)):t=null,null===o?t:null===t?o:[o,t]}},Nr={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Rr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Nr[e.type]:"textarea"===t}var Mr={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function jr(e,t,n){return(e=Ft.getPooled(Mr.change,e,t,n)).type="change",oe(n),jt(e),e}var Ir=null,zr=null;function Fr(e){N(e)}function Dr(e){if(Se(sr(e)))return e}function Lr(e,t){if("change"===e)return t}var Ur=!1;function Ar(){Ir&&(Ir.detachEvent("onpropertychange",$r),zr=Ir=null)}function $r(e){if("value"===e.propertyName&&Dr(zr))if(e=jr(zr,e,_t(e)),se)N(e);else{se=!0;try{ie(Fr,e)}finally{se=!1,de()}}}function Wr(e,t,n){"focus"===e?(Ar(),zr=n,(Ir=t).attachEvent("onpropertychange",$r)):"blur"===e&&Ar()}function Br(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Dr(zr)}function Hr(e,t){if("click"===e)return Dr(t)}function Vr(e,t){if("input"===e||"change"===e)return Dr(t)}Z&&(Ur=Mn("input")&&(!document.documentMode||9<document.documentMode));var qr,Kr={eventTypes:Mr,_isInputEventSupported:Ur,extractEvents:function(e,t,n,r){var o=t?sr(t):window,a=o.nodeName&&o.nodeName.toLowerCase();if("select"===a||"input"===a&&"file"===o.type)var i=Lr;else if(Rr(o))if(Ur)i=Vr;else{i=Br;var l=Wr}else(a=o.nodeName)&&"input"===a.toLowerCase()&&("checkbox"===o.type||"radio"===o.type)&&(i=Hr);if(i&&(i=i(e,t)))return jr(i,n,r);l&&l(e,o,t),"blur"===e&&(e=o._wrapperState)&&e.controlled&&"number"===o.type&&Re(o,"number",o.value)}},Qr={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},Yr={eventTypes:Qr,extractEvents:function(e,t,n,r,o){var a="mouseover"===e||"pointerover"===e,i="mouseout"===e||"pointerout"===e;if(a&&0==(32&o)&&(n.relatedTarget||n.fromElement)||!i&&!a)return null;if(o=r.window===r?r:(o=r.ownerDocument)?o.defaultView||o.parentWindow:window,i?(i=t,null!==(t=(t=n.relatedTarget||n.toElement)?ur(t):null)&&(t!==(a=tt(t))||5!==t.tag&&6!==t.tag)&&(t=null)):i=null,i===t)return null;if("mouseout"===e||"mouseover"===e)var l=tn,u=Qr.mouseLeave,c=Qr.mouseEnter,s="mouse";else"pointerout"!==e&&"pointerover"!==e||(l=nn,u=Qr.pointerLeave,c=Qr.pointerEnter,s="pointer");if(e=null==i?o:sr(i),o=null==t?o:sr(t),(u=l.getPooled(u,i,n,r)).type=s+"leave",u.target=e,u.relatedTarget=o,(r=l.getPooled(c,t,n,r)).type=s+"enter",r.target=o,r.relatedTarget=e,s=t,(l=i)&&s)e:{for(e=s,i=0,t=c=l;t;t=Pt(t))i++;for(t=0,o=e;o;o=Pt(o))t++;for(;0<i-t;)c=Pt(c),i--;for(;0<t-i;)e=Pt(e),t--;for(;i--;){if(c===e||c===e.alternate)break e;c=Pt(c),e=Pt(e)}c=null}else c=null;for(e=c,c=[];l&&l!==e&&(null===(i=l.alternate)||i!==e);)c.push(l),l=Pt(l);for(l=[];s&&s!==e&&(null===(i=s.alternate)||i!==e);)l.push(s),s=Pt(s);for(s=0;s<c.length;s++)Rt(c[s],"bubbled",u);for(s=l.length;0<s--;)Rt(l[s],"captured",r);return n===qr?(qr=null,[u]):(qr=n,[u,r])}};var Gr="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t},Xr=Object.prototype.hasOwnProperty;function Jr(e,t){if(Gr(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!Xr.call(t,n[r])||!Gr(e[n[r]],t[n[r]]))return!1;return!0}var Zr=Z&&"documentMode"in document&&11>=document.documentMode,eo={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},to=null,no=null,ro=null,oo=!1;function ao(e,t){var n=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;return oo||null==to||to!==Vn(n)?null:("selectionStart"in(n=to)&&Yn(n)?n={start:n.selectionStart,end:n.selectionEnd}:n={anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},ro&&Jr(ro,n)?null:(ro=n,(e=Ft.getPooled(eo.select,no,e,t)).type="select",e.target=to,jt(e),e))}var io={eventTypes:eo,extractEvents:function(e,t,n,r){var o,a=r.window===r?r.document:9===r.nodeType?r:r.ownerDocument;if(!(o=!a)){e:{a=In(a),o=m.onSelect;for(var i=0;i<o.length;i++)if(!a.has(o[i])){a=!1;break e}a=!0}o=!a}if(o)return null;switch(a=t?sr(t):window,e){case"focus":(Rr(a)||"true"===a.contentEditable)&&(to=a,no=t,ro=null);break;case"blur":ro=no=to=null;break;case"mousedown":oo=!0;break;case"contextmenu":case"mouseup":case"dragend":return oo=!1,ao(n,r);case"selectionchange":if(Zr)break;case"keydown":case"keyup":return ao(n,r)}return null}};R.injectEventPluginOrder("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),x=fr,k=cr,T=sr,R.injectEventPluginsByName({SimpleEventPlugin:gn,EnterLeaveEventPlugin:Yr,ChangeEventPlugin:Kr,SelectEventPlugin:io,BeforeInputEventPlugin:Or}),new Set;var lo=[],uo=-1;function co(e){0>uo||(e.current=lo[uo],lo[uo]=null,uo--)}function so(e,t){uo++,lo[uo]=e.current,e.current=t}var fo={},po={current:fo},mo={current:!1},ho=fo;function vo(e,t){var n=e.type.contextTypes;if(!n)return fo;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var o,a={};for(o in n)a[o]=t[o];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=a),a}function yo(e){return null!=(e=e.childContextTypes)}function go(e){co(mo),co(po)}function bo(e){co(mo),co(po)}function wo(e,t,n){if(po.current!==fo)throw Error(i(168));so(po,t),so(mo,n)}function Eo(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var a in r=r.getChildContext())if(!(a in e))throw Error(i(108,X(t)||"Unknown",a));return o({},n,{},r)}function xo(e){var t=e.stateNode;return t=t&&t.__reactInternalMemoizedMergedChildContext||fo,ho=po.current,so(po,t),so(mo,mo.current),!0}function ko(e,t,n){var r=e.stateNode;if(!r)throw Error(i(169));n?(t=Eo(e,t,ho),r.__reactInternalMemoizedMergedChildContext=t,co(mo),co(po),so(po,t)):co(mo),so(mo,n)}var To=a.unstable_runWithPriority,So=a.unstable_scheduleCallback,Co=a.unstable_cancelCallback,_o=a.unstable_shouldYield,Po=a.unstable_requestPaint,Oo=a.unstable_now,No=a.unstable_getCurrentPriorityLevel,Ro=a.unstable_ImmediatePriority,Mo=a.unstable_UserBlockingPriority,jo=a.unstable_NormalPriority,Io=a.unstable_LowPriority,zo=a.unstable_IdlePriority,Fo={},Do=void 0!==Po?Po:function(){},Lo=null,Uo=null,Ao=!1,$o=Oo(),Wo=1e4>$o?Oo:function(){return Oo()-$o};function Bo(){switch(No()){case Ro:return 99;case Mo:return 98;case jo:return 97;case Io:return 96;case zo:return 95;default:throw Error(i(332))}}function Ho(e){switch(e){case 99:return Ro;case 98:return Mo;case 97:return jo;case 96:return Io;case 95:return zo;default:throw Error(i(332))}}function Vo(e,t){return e=Ho(e),To(e,t)}function qo(e,t,n){return e=Ho(e),So(e,t,n)}function Ko(e){return null===Lo?(Lo=[e],Uo=So(Ro,Yo)):Lo.push(e),Fo}function Qo(){if(null!==Uo){var e=Uo;Uo=null,Co(e)}Yo()}function Yo(){if(!Ao&&null!==Lo){Ao=!0;var e=0;try{var t=Lo;Vo(99,(function(){for(;e<t.length;e++){var n=t[e];do{n=n(!0)}while(null!==n)}})),Lo=null}catch(t){throw null!==Lo&&(Lo=Lo.slice(e+1)),So(Ro,Qo),t}finally{Ao=!1}}}var Go=3;function Xo(e,t,n){return 1073741821-(1+((1073741821-e+t/10)/(n/=10)|0))*n}function Jo(e,t){if(e&&e.defaultProps)for(var n in t=o({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}var Zo={current:null},ea=null,ta=null,na=null;function ra(){na=ta=ea=null}function oa(e,t){var n=e.type._context;so(Zo,n._currentValue),n._currentValue=t}function aa(e){var t=Zo.current;co(Zo),e.type._context._currentValue=t}function ia(e,t){for(;null!==e;){var n=e.alternate;if(e.childExpirationTime<t)e.childExpirationTime=t,null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t);else{if(!(null!==n&&n.childExpirationTime<t))break;n.childExpirationTime=t}e=e.return}}function la(e,t){ea=e,na=ta=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(e.expirationTime>=t&&($i=!0),e.firstContext=null)}function ua(e,t){if(na!==e&&!1!==t&&0!==t)if("number"==typeof t&&1073741823!==t||(na=e,t=1073741823),t={context:e,observedBits:t,next:null},null===ta){if(null===ea)throw Error(i(308));ta=t,ea.dependencies={expirationTime:0,firstContext:t,responders:null}}else ta=ta.next=t;return e._currentValue}var ca=!1;function sa(e){return{baseState:e,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function fa(e){return{baseState:e.baseState,firstUpdate:e.firstUpdate,lastUpdate:e.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function da(e,t){return{expirationTime:e,suspenseConfig:t,tag:0,payload:null,callback:null,next:null,nextEffect:null}}function pa(e,t){null===e.lastUpdate?e.firstUpdate=e.lastUpdate=t:(e.lastUpdate.next=t,e.lastUpdate=t)}function ma(e,t){var n=e.alternate;if(null===n){var r=e.updateQueue,o=null;null===r&&(r=e.updateQueue=sa(e.memoizedState))}else r=e.updateQueue,o=n.updateQueue,null===r?null===o?(r=e.updateQueue=sa(e.memoizedState),o=n.updateQueue=sa(n.memoizedState)):r=e.updateQueue=fa(o):null===o&&(o=n.updateQueue=fa(r));null===o||r===o?pa(r,t):null===r.lastUpdate||null===o.lastUpdate?(pa(r,t),pa(o,t)):(pa(r,t),o.lastUpdate=t)}function ha(e,t){var n=e.updateQueue;null===(n=null===n?e.updateQueue=sa(e.memoizedState):va(e,n)).lastCapturedUpdate?n.firstCapturedUpdate=n.lastCapturedUpdate=t:(n.lastCapturedUpdate.next=t,n.lastCapturedUpdate=t)}function va(e,t){var n=e.alternate;return null!==n&&t===n.updateQueue&&(t=e.updateQueue=fa(t)),t}function ya(e,t,n,r,a,i){switch(n.tag){case 1:return"function"==typeof(e=n.payload)?e.call(i,r,a):e;case 3:e.effectTag=-4097&e.effectTag|64;case 0:if(null==(a="function"==typeof(e=n.payload)?e.call(i,r,a):e))break;return o({},r,a);case 2:ca=!0}return r}function ga(e,t,n,r,o){ca=!1;for(var a=(t=va(e,t)).baseState,i=null,l=0,u=t.firstUpdate,c=a;null!==u;){var s=u.expirationTime;s<o?(null===i&&(i=u,a=c),l<s&&(l=s)):(fu(s,u.suspenseConfig),c=ya(e,0,u,c,n,r),null!==u.callback&&(e.effectTag|=32,u.nextEffect=null,null===t.lastEffect?t.firstEffect=t.lastEffect=u:(t.lastEffect.nextEffect=u,t.lastEffect=u))),u=u.next}for(s=null,u=t.firstCapturedUpdate;null!==u;){var f=u.expirationTime;f<o?(null===s&&(s=u,null===i&&(a=c)),l<f&&(l=f)):(c=ya(e,0,u,c,n,r),null!==u.callback&&(e.effectTag|=32,u.nextEffect=null,null===t.lastCapturedEffect?t.firstCapturedEffect=t.lastCapturedEffect=u:(t.lastCapturedEffect.nextEffect=u,t.lastCapturedEffect=u))),u=u.next}null===i&&(t.lastUpdate=null),null===s?t.lastCapturedUpdate=null:e.effectTag|=32,null===i&&null===s&&(a=c),t.baseState=a,t.firstUpdate=i,t.firstCapturedUpdate=s,du(l),e.expirationTime=l,e.memoizedState=c}function ba(e,t,n){null!==t.firstCapturedUpdate&&(null!==t.lastUpdate&&(t.lastUpdate.next=t.firstCapturedUpdate,t.lastUpdate=t.lastCapturedUpdate),t.firstCapturedUpdate=t.lastCapturedUpdate=null),wa(t.firstEffect,n),t.firstEffect=t.lastEffect=null,wa(t.firstCapturedEffect,n),t.firstCapturedEffect=t.lastCapturedEffect=null}function wa(e,t){for(;null!==e;){var n=e.callback;if(null!==n){e.callback=null;var r=t;if("function"!=typeof n)throw Error(i(191,n));n.call(r)}e=e.nextEffect}}var Ea=j.ReactCurrentBatchConfig,xa=(new r.Component).refs;function ka(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:o({},t,n),e.memoizedState=n,null!==(r=e.updateQueue)&&0===e.expirationTime&&(r.baseState=n)}var Ta={isMounted:function(e){return!!(e=e._reactInternalFiber)&&tt(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternalFiber;var r=Jl(),o=Ea.suspense;(o=da(r=Zl(r,e,o),o)).payload=t,null!=n&&(o.callback=n),ma(e,o),eu(e,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternalFiber;var r=Jl(),o=Ea.suspense;(o=da(r=Zl(r,e,o),o)).tag=1,o.payload=t,null!=n&&(o.callback=n),ma(e,o),eu(e,r)},enqueueForceUpdate:function(e,t){e=e._reactInternalFiber;var n=Jl(),r=Ea.suspense;(r=da(n=Zl(n,e,r),r)).tag=2,null!=t&&(r.callback=t),ma(e,r),eu(e,n)}};function Sa(e,t,n,r,o,a,i){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,a,i):!t.prototype||!t.prototype.isPureReactComponent||(!Jr(n,r)||!Jr(o,a))}function Ca(e,t,n){var r=!1,o=fo,a=t.contextType;return"object"==typeof a&&null!==a?a=ua(a):(o=yo(t)?ho:po.current,a=(r=null!=(r=t.contextTypes))?vo(e,o):fo),t=new t(n,a),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=Ta,e.stateNode=t,t._reactInternalFiber=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=o,e.__reactInternalMemoizedMaskedChildContext=a),t}function _a(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&Ta.enqueueReplaceState(t,t.state,null)}function Pa(e,t,n,r){var o=e.stateNode;o.props=n,o.state=e.memoizedState,o.refs=xa;var a=t.contextType;"object"==typeof a&&null!==a?o.context=ua(a):(a=yo(t)?ho:po.current,o.context=vo(e,a)),null!==(a=e.updateQueue)&&(ga(e,a,n,o,r),o.state=e.memoizedState),"function"==typeof(a=t.getDerivedStateFromProps)&&(ka(e,t,a,n),o.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof o.getSnapshotBeforeUpdate||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||(t=o.state,"function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount(),t!==o.state&&Ta.enqueueReplaceState(o,o.state,null),null!==(a=e.updateQueue)&&(ga(e,a,n,o,r),o.state=e.memoizedState)),"function"==typeof o.componentDidMount&&(e.effectTag|=4)}var Oa=Array.isArray;function Na(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(i(309));var r=n.stateNode}if(!r)throw Error(i(147,e));var o=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===o?t.ref:((t=function(e){var t=r.refs;t===xa&&(t=r.refs={}),null===e?delete t[o]:t[o]=e})._stringRef=o,t)}if("string"!=typeof e)throw Error(i(284));if(!n._owner)throw Error(i(290,e))}return e}function Ra(e,t){if("textarea"!==e.type)throw Error(i(31,"[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t,""))}function Ma(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function o(e,t,n){return(e=Mu(e,t)).index=0,e.sibling=null,e}function a(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.effectTag=2,n):r:(t.effectTag=2,n):n}function l(t){return e&&null===t.alternate&&(t.effectTag=2),t}function u(e,t,n,r){return null===t||6!==t.tag?((t=zu(n,e.mode,r)).return=e,t):((t=o(t,n)).return=e,t)}function c(e,t,n,r){return null!==t&&t.elementType===n.type?((r=o(t,n.props)).ref=Na(e,t,n),r.return=e,r):((r=ju(n.type,n.key,n.props,null,e.mode,r)).ref=Na(e,t,n),r.return=e,r)}function s(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Fu(n,e.mode,r)).return=e,t):((t=o(t,n.children||[])).return=e,t)}function f(e,t,n,r,a){return null===t||7!==t.tag?((t=Iu(n,e.mode,r,a)).return=e,t):((t=o(t,n)).return=e,t)}function d(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=zu(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case F:return(n=ju(t.type,t.key,t.props,null,e.mode,n)).ref=Na(e,null,t),n.return=e,n;case D:return(t=Fu(t,e.mode,n)).return=e,t}if(Oa(t)||G(t))return(t=Iu(t,e.mode,n,null)).return=e,t;Ra(e,t)}return null}function p(e,t,n,r){var o=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==o?null:u(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case F:return n.key===o?n.type===L?f(e,t,n.props.children,r,o):c(e,t,n,r):null;case D:return n.key===o?s(e,t,n,r):null}if(Oa(n)||G(n))return null!==o?null:f(e,t,n,r,null);Ra(e,n)}return null}function m(e,t,n,r,o){if("string"==typeof r||"number"==typeof r)return u(t,e=e.get(n)||null,""+r,o);if("object"==typeof r&&null!==r){switch(r.$$typeof){case F:return e=e.get(null===r.key?n:r.key)||null,r.type===L?f(t,e,r.props.children,o,r.key):c(t,e,r,o);case D:return s(t,e=e.get(null===r.key?n:r.key)||null,r,o)}if(Oa(r)||G(r))return f(t,e=e.get(n)||null,r,o,null);Ra(t,r)}return null}function h(o,i,l,u){for(var c=null,s=null,f=i,h=i=0,v=null;null!==f&&h<l.length;h++){f.index>h?(v=f,f=null):v=f.sibling;var y=p(o,f,l[h],u);if(null===y){null===f&&(f=v);break}e&&f&&null===y.alternate&&t(o,f),i=a(y,i,h),null===s?c=y:s.sibling=y,s=y,f=v}if(h===l.length)return n(o,f),c;if(null===f){for(;h<l.length;h++)null!==(f=d(o,l[h],u))&&(i=a(f,i,h),null===s?c=f:s.sibling=f,s=f);return c}for(f=r(o,f);h<l.length;h++)null!==(v=m(f,o,h,l[h],u))&&(e&&null!==v.alternate&&f.delete(null===v.key?h:v.key),i=a(v,i,h),null===s?c=v:s.sibling=v,s=v);return e&&f.forEach((function(e){return t(o,e)})),c}function v(o,l,u,c){var s=G(u);if("function"!=typeof s)throw Error(i(150));if(null==(u=s.call(u)))throw Error(i(151));for(var f=s=null,h=l,v=l=0,y=null,g=u.next();null!==h&&!g.done;v++,g=u.next()){h.index>v?(y=h,h=null):y=h.sibling;var b=p(o,h,g.value,c);if(null===b){null===h&&(h=y);break}e&&h&&null===b.alternate&&t(o,h),l=a(b,l,v),null===f?s=b:f.sibling=b,f=b,h=y}if(g.done)return n(o,h),s;if(null===h){for(;!g.done;v++,g=u.next())null!==(g=d(o,g.value,c))&&(l=a(g,l,v),null===f?s=g:f.sibling=g,f=g);return s}for(h=r(o,h);!g.done;v++,g=u.next())null!==(g=m(h,o,v,g.value,c))&&(e&&null!==g.alternate&&h.delete(null===g.key?v:g.key),l=a(g,l,v),null===f?s=g:f.sibling=g,f=g);return e&&h.forEach((function(e){return t(o,e)})),s}return function(e,r,a,u){var c="object"==typeof a&&null!==a&&a.type===L&&null===a.key;c&&(a=a.props.children);var s="object"==typeof a&&null!==a;if(s)switch(a.$$typeof){case F:e:{for(s=a.key,c=r;null!==c;){if(c.key===s){if(7===c.tag?a.type===L:c.elementType===a.type){n(e,c.sibling),(r=o(c,a.type===L?a.props.children:a.props)).ref=Na(e,c,a),r.return=e,e=r;break e}n(e,c);break}t(e,c),c=c.sibling}a.type===L?((r=Iu(a.props.children,e.mode,u,a.key)).return=e,e=r):((u=ju(a.type,a.key,a.props,null,e.mode,u)).ref=Na(e,r,a),u.return=e,e=u)}return l(e);case D:e:{for(c=a.key;null!==r;){if(r.key===c){if(4===r.tag&&r.stateNode.containerInfo===a.containerInfo&&r.stateNode.implementation===a.implementation){n(e,r.sibling),(r=o(r,a.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=Fu(a,e.mode,u)).return=e,e=r}return l(e)}if("string"==typeof a||"number"==typeof a)return a=""+a,null!==r&&6===r.tag?(n(e,r.sibling),(r=o(r,a)).return=e,e=r):(n(e,r),(r=zu(a,e.mode,u)).return=e,e=r),l(e);if(Oa(a))return h(e,r,a,u);if(G(a))return v(e,r,a,u);if(s&&Ra(e,a),void 0===a&&!c)switch(e.tag){case 1:case 0:throw e=e.type,Error(i(152,e.displayName||e.name||"Component"))}return n(e,r)}}var ja=Ma(!0),Ia=Ma(!1),za={},Fa={current:za},Da={current:za},La={current:za};function Ua(e){if(e===za)throw Error(i(174));return e}function Aa(e,t){so(La,t),so(Da,e),so(Fa,za);var n=t.nodeType;switch(n){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:$e(null,"");break;default:t=$e(t=(n=8===n?t.parentNode:t).namespaceURI||null,n=n.tagName)}co(Fa),so(Fa,t)}function $a(e){co(Fa),co(Da),co(La)}function Wa(e){Ua(La.current);var t=Ua(Fa.current),n=$e(t,e.type);t!==n&&(so(Da,e),so(Fa,n))}function Ba(e){Da.current===e&&(co(Fa),co(Da))}var Ha={current:0};function Va(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(64&t.effectTag))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}function qa(e,t){return{responder:e,props:t}}var Ka=j.ReactCurrentDispatcher,Qa=j.ReactCurrentBatchConfig,Ya=0,Ga=null,Xa=null,Ja=null,Za=null,ei=null,ti=null,ni=0,ri=null,oi=0,ai=!1,ii=null,li=0;function ui(){throw Error(i(321))}function ci(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!Gr(e[n],t[n]))return!1;return!0}function si(e,t,n,r,o,a){if(Ya=a,Ga=t,Ja=null!==e?e.memoizedState:null,Ka.current=null===Ja?Oi:Ni,t=n(r,o),ai){do{ai=!1,li+=1,Ja=null!==e?e.memoizedState:null,ti=Za,ri=ei=Xa=null,Ka.current=Ni,t=n(r,o)}while(ai);ii=null,li=0}if(Ka.current=Pi,(e=Ga).memoizedState=Za,e.expirationTime=ni,e.updateQueue=ri,e.effectTag|=oi,e=null!==Xa&&null!==Xa.next,Ya=0,ti=ei=Za=Ja=Xa=Ga=null,ni=0,ri=null,oi=0,e)throw Error(i(300));return t}function fi(){Ka.current=Pi,Ya=0,ti=ei=Za=Ja=Xa=Ga=null,ni=0,ri=null,oi=0,ai=!1,ii=null,li=0}function di(){var e={memoizedState:null,baseState:null,queue:null,baseUpdate:null,next:null};return null===ei?Za=ei=e:ei=ei.next=e,ei}function pi(){if(null!==ti)ti=(ei=ti).next,Ja=null!==(Xa=Ja)?Xa.next:null;else{if(null===Ja)throw Error(i(310));var e={memoizedState:(Xa=Ja).memoizedState,baseState:Xa.baseState,queue:Xa.queue,baseUpdate:Xa.baseUpdate,next:null};ei=null===ei?Za=e:ei.next=e,Ja=Xa.next}return ei}function mi(e,t){return"function"==typeof t?t(e):t}function hi(e){var t=pi(),n=t.queue;if(null===n)throw Error(i(311));if(n.lastRenderedReducer=e,0<li){var r=n.dispatch;if(null!==ii){var o=ii.get(n);if(void 0!==o){ii.delete(n);var a=t.memoizedState;do{a=e(a,o.action),o=o.next}while(null!==o);return Gr(a,t.memoizedState)||($i=!0),t.memoizedState=a,t.baseUpdate===n.last&&(t.baseState=a),n.lastRenderedState=a,[a,r]}}return[t.memoizedState,r]}r=n.last;var l=t.baseUpdate;if(a=t.baseState,null!==l?(null!==r&&(r.next=null),r=l.next):r=null!==r?r.next:null,null!==r){var u=o=null,c=r,s=!1;do{var f=c.expirationTime;f<Ya?(s||(s=!0,u=l,o=a),f>ni&&du(ni=f)):(fu(f,c.suspenseConfig),a=c.eagerReducer===e?c.eagerState:e(a,c.action)),l=c,c=c.next}while(null!==c&&c!==r);s||(u=l,o=a),Gr(a,t.memoizedState)||($i=!0),t.memoizedState=a,t.baseUpdate=u,t.baseState=o,n.lastRenderedState=a}return[t.memoizedState,n.dispatch]}function vi(e){var t=di();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={last:null,dispatch:null,lastRenderedReducer:mi,lastRenderedState:e}).dispatch=_i.bind(null,Ga,e),[t.memoizedState,e]}function yi(e){return hi(mi)}function gi(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===ri?(ri={lastEffect:null}).lastEffect=e.next=e:null===(t=ri.lastEffect)?ri.lastEffect=e.next=e:(n=t.next,t.next=e,e.next=n,ri.lastEffect=e),e}function bi(e,t,n,r){var o=di();oi|=e,o.memoizedState=gi(t,n,void 0,void 0===r?null:r)}function wi(e,t,n,r){var o=pi();r=void 0===r?null:r;var a=void 0;if(null!==Xa){var i=Xa.memoizedState;if(a=i.destroy,null!==r&&ci(r,i.deps))return void gi(0,n,a,r)}oi|=e,o.memoizedState=gi(t,n,a,r)}function Ei(e,t){return bi(516,192,e,t)}function xi(e,t){return wi(516,192,e,t)}function ki(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function Ti(){}function Si(e,t){return di().memoizedState=[e,void 0===t?null:t],e}function Ci(e,t){var n=pi();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&ci(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function _i(e,t,n){if(!(25>li))throw Error(i(301));var r=e.alternate;if(e===Ga||null!==r&&r===Ga)if(ai=!0,e={expirationTime:Ya,suspenseConfig:null,action:n,eagerReducer:null,eagerState:null,next:null},null===ii&&(ii=new Map),void 0===(n=ii.get(t)))ii.set(t,e);else{for(t=n;null!==t.next;)t=t.next;t.next=e}else{var o=Jl(),a=Ea.suspense;a={expirationTime:o=Zl(o,e,a),suspenseConfig:a,action:n,eagerReducer:null,eagerState:null,next:null};var l=t.last;if(null===l)a.next=a;else{var u=l.next;null!==u&&(a.next=u),l.next=a}if(t.last=a,0===e.expirationTime&&(null===r||0===r.expirationTime)&&null!==(r=t.lastRenderedReducer))try{var c=t.lastRenderedState,s=r(c,n);if(a.eagerReducer=r,a.eagerState=s,Gr(s,c))return}catch(e){}eu(e,o)}}var Pi={readContext:ua,useCallback:ui,useContext:ui,useEffect:ui,useImperativeHandle:ui,useLayoutEffect:ui,useMemo:ui,useReducer:ui,useRef:ui,useState:ui,useDebugValue:ui,useResponder:ui,useDeferredValue:ui,useTransition:ui},Oi={readContext:ua,useCallback:Si,useContext:ua,useEffect:Ei,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,bi(4,36,ki.bind(null,t,e),n)},useLayoutEffect:function(e,t){return bi(4,36,e,t)},useMemo:function(e,t){var n=di();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=di();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e=(e=r.queue={last:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=_i.bind(null,Ga,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},di().memoizedState=e},useState:vi,useDebugValue:Ti,useResponder:qa,useDeferredValue:function(e,t){var n=vi(e),r=n[0],o=n[1];return Ei((function(){a.unstable_next((function(){var n=Qa.suspense;Qa.suspense=void 0===t?null:t;try{o(e)}finally{Qa.suspense=n}}))}),[e,t]),r},useTransition:function(e){var t=vi(!1),n=t[0],r=t[1];return[Si((function(t){r(!0),a.unstable_next((function(){var n=Qa.suspense;Qa.suspense=void 0===e?null:e;try{r(!1),t()}finally{Qa.suspense=n}}))}),[e,n]),n]}},Ni={readContext:ua,useCallback:Ci,useContext:ua,useEffect:xi,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,wi(4,36,ki.bind(null,t,e),n)},useLayoutEffect:function(e,t){return wi(4,36,e,t)},useMemo:function(e,t){var n=pi();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&ci(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)},useReducer:hi,useRef:function(){return pi().memoizedState},useState:yi,useDebugValue:Ti,useResponder:qa,useDeferredValue:function(e,t){var n=yi(),r=n[0],o=n[1];return xi((function(){a.unstable_next((function(){var n=Qa.suspense;Qa.suspense=void 0===t?null:t;try{o(e)}finally{Qa.suspense=n}}))}),[e,t]),r},useTransition:function(e){var t=yi(),n=t[0],r=t[1];return[Ci((function(t){r(!0),a.unstable_next((function(){var n=Qa.suspense;Qa.suspense=void 0===e?null:e;try{r(!1),t()}finally{Qa.suspense=n}}))}),[e,n]),n]}},Ri=null,Mi=null,ji=!1;function Ii(e,t){var n=Nu(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.effectTag=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function zi(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);case 13:default:return!1}}function Fi(e){if(ji){var t=Mi;if(t){var n=t;if(!zi(e,t)){if(!(t=nr(n.nextSibling))||!zi(e,t))return e.effectTag=-1025&e.effectTag|2,ji=!1,void(Ri=e);Ii(Ri,n)}Ri=e,Mi=nr(t.firstChild)}else e.effectTag=-1025&e.effectTag|2,ji=!1,Ri=e}}function Di(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;Ri=e}function Li(e){if(e!==Ri)return!1;if(!ji)return Di(e),ji=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!Zn(t,e.memoizedProps))for(t=Mi;t;)Ii(e,t),t=nr(t.nextSibling);if(Di(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(i(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){Mi=nr(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}Mi=null}}else Mi=Ri?nr(e.stateNode.nextSibling):null;return!0}function Ui(){Mi=Ri=null,ji=!1}var Ai=j.ReactCurrentOwner,$i=!1;function Wi(e,t,n,r){t.child=null===e?Ia(t,null,n,r):ja(t,e.child,n,r)}function Bi(e,t,n,r,o){n=n.render;var a=t.ref;return la(t,o),r=si(e,t,n,r,a,o),null===e||$i?(t.effectTag|=1,Wi(e,t,r,o),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=o&&(e.expirationTime=0),al(e,t,o))}function Hi(e,t,n,r,o,a){if(null===e){var i=n.type;return"function"!=typeof i||Ru(i)||void 0!==i.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=ju(n.type,null,r,null,t.mode,a)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=i,Vi(e,t,i,r,o,a))}return i=e.child,o<a&&(o=i.memoizedProps,(n=null!==(n=n.compare)?n:Jr)(o,r)&&e.ref===t.ref)?al(e,t,a):(t.effectTag|=1,(e=Mu(i,r)).ref=t.ref,e.return=t,t.child=e)}function Vi(e,t,n,r,o,a){return null!==e&&Jr(e.memoizedProps,r)&&e.ref===t.ref&&($i=!1,o<a)?al(e,t,a):Ki(e,t,n,r,a)}function qi(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.effectTag|=128)}function Ki(e,t,n,r,o){var a=yo(n)?ho:po.current;return a=vo(t,a),la(t,o),n=si(e,t,n,r,a,o),null===e||$i?(t.effectTag|=1,Wi(e,t,n,o),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=o&&(e.expirationTime=0),al(e,t,o))}function Qi(e,t,n,r,o){if(yo(n)){var a=!0;xo(t)}else a=!1;if(la(t,o),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),Ca(t,n,r),Pa(t,n,r,o),r=!0;else if(null===e){var i=t.stateNode,l=t.memoizedProps;i.props=l;var u=i.context,c=n.contextType;"object"==typeof c&&null!==c?c=ua(c):c=vo(t,c=yo(n)?ho:po.current);var s=n.getDerivedStateFromProps,f="function"==typeof s||"function"==typeof i.getSnapshotBeforeUpdate;f||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(l!==r||u!==c)&&_a(t,i,r,c),ca=!1;var d=t.memoizedState;u=i.state=d;var p=t.updateQueue;null!==p&&(ga(t,p,r,i,o),u=t.memoizedState),l!==r||d!==u||mo.current||ca?("function"==typeof s&&(ka(t,n,s,r),u=t.memoizedState),(l=ca||Sa(t,n,l,r,d,u,c))?(f||"function"!=typeof i.UNSAFE_componentWillMount&&"function"!=typeof i.componentWillMount||("function"==typeof i.componentWillMount&&i.componentWillMount(),"function"==typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount()),"function"==typeof i.componentDidMount&&(t.effectTag|=4)):("function"==typeof i.componentDidMount&&(t.effectTag|=4),t.memoizedProps=r,t.memoizedState=u),i.props=r,i.state=u,i.context=c,r=l):("function"==typeof i.componentDidMount&&(t.effectTag|=4),r=!1)}else i=t.stateNode,l=t.memoizedProps,i.props=t.type===t.elementType?l:Jo(t.type,l),u=i.context,"object"==typeof(c=n.contextType)&&null!==c?c=ua(c):c=vo(t,c=yo(n)?ho:po.current),(f="function"==typeof(s=n.getDerivedStateFromProps)||"function"==typeof i.getSnapshotBeforeUpdate)||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(l!==r||u!==c)&&_a(t,i,r,c),ca=!1,u=t.memoizedState,d=i.state=u,null!==(p=t.updateQueue)&&(ga(t,p,r,i,o),d=t.memoizedState),l!==r||u!==d||mo.current||ca?("function"==typeof s&&(ka(t,n,s,r),d=t.memoizedState),(s=ca||Sa(t,n,l,r,u,d,c))?(f||"function"!=typeof i.UNSAFE_componentWillUpdate&&"function"!=typeof i.componentWillUpdate||("function"==typeof i.componentWillUpdate&&i.componentWillUpdate(r,d,c),"function"==typeof i.UNSAFE_componentWillUpdate&&i.UNSAFE_componentWillUpdate(r,d,c)),"function"==typeof i.componentDidUpdate&&(t.effectTag|=4),"function"==typeof i.getSnapshotBeforeUpdate&&(t.effectTag|=256)):("function"!=typeof i.componentDidUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=4),"function"!=typeof i.getSnapshotBeforeUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=256),t.memoizedProps=r,t.memoizedState=d),i.props=r,i.state=d,i.context=c,r=s):("function"!=typeof i.componentDidUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=4),"function"!=typeof i.getSnapshotBeforeUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=256),r=!1);return Yi(e,t,n,r,a,o)}function Yi(e,t,n,r,o,a){qi(e,t);var i=0!=(64&t.effectTag);if(!r&&!i)return o&&ko(t,n,!1),al(e,t,a);r=t.stateNode,Ai.current=t;var l=i&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.effectTag|=1,null!==e&&i?(t.child=ja(t,e.child,null,a),t.child=ja(t,null,l,a)):Wi(e,t,l,a),t.memoizedState=r.state,o&&ko(t,n,!0),t.child}function Gi(e){var t=e.stateNode;t.pendingContext?wo(0,t.pendingContext,t.pendingContext!==t.context):t.context&&wo(0,t.context,!1),Aa(e,t.containerInfo)}var Xi,Ji,Zi,el={dehydrated:null,retryTime:0};function tl(e,t,n){var r,o=t.mode,a=t.pendingProps,i=Ha.current,l=!1;if((r=0!=(64&t.effectTag))||(r=0!=(2&i)&&(null===e||null!==e.memoizedState)),r?(l=!0,t.effectTag&=-65):null!==e&&null===e.memoizedState||void 0===a.fallback||!0===a.unstable_avoidThisFallback||(i|=1),so(Ha,1&i),null===e){if(void 0!==a.fallback&&Fi(t),l){if(l=a.fallback,(a=Iu(null,o,0,null)).return=t,0==(2&t.mode))for(e=null!==t.memoizedState?t.child.child:t.child,a.child=e;null!==e;)e.return=a,e=e.sibling;return(n=Iu(l,o,n,null)).return=t,a.sibling=n,t.memoizedState=el,t.child=a,n}return o=a.children,t.memoizedState=null,t.child=Ia(t,null,o,n)}if(null!==e.memoizedState){if(o=(e=e.child).sibling,l){if(a=a.fallback,(n=Mu(e,e.pendingProps)).return=t,0==(2&t.mode)&&(l=null!==t.memoizedState?t.child.child:t.child)!==e.child)for(n.child=l;null!==l;)l.return=n,l=l.sibling;return(o=Mu(o,a,o.expirationTime)).return=t,n.sibling=o,n.childExpirationTime=0,t.memoizedState=el,t.child=n,o}return n=ja(t,e.child,a.children,n),t.memoizedState=null,t.child=n}if(e=e.child,l){if(l=a.fallback,(a=Iu(null,o,0,null)).return=t,a.child=e,null!==e&&(e.return=a),0==(2&t.mode))for(e=null!==t.memoizedState?t.child.child:t.child,a.child=e;null!==e;)e.return=a,e=e.sibling;return(n=Iu(l,o,n,null)).return=t,a.sibling=n,n.effectTag|=2,a.childExpirationTime=0,t.memoizedState=el,t.child=a,n}return t.memoizedState=null,t.child=ja(t,e,a.children,n)}function nl(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t),ia(e.return,t)}function rl(e,t,n,r,o,a){var i=e.memoizedState;null===i?e.memoizedState={isBackwards:t,rendering:null,last:r,tail:n,tailExpiration:0,tailMode:o,lastEffect:a}:(i.isBackwards=t,i.rendering=null,i.last=r,i.tail=n,i.tailExpiration=0,i.tailMode=o,i.lastEffect=a)}function ol(e,t,n){var r=t.pendingProps,o=r.revealOrder,a=r.tail;if(Wi(e,t,r.children,n),0!=(2&(r=Ha.current)))r=1&r|2,t.effectTag|=64;else{if(null!==e&&0!=(64&e.effectTag))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&nl(e,n);else if(19===e.tag)nl(e,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(so(Ha,r),0==(2&t.mode))t.memoizedState=null;else switch(o){case"forwards":for(n=t.child,o=null;null!==n;)null!==(e=n.alternate)&&null===Va(e)&&(o=n),n=n.sibling;null===(n=o)?(o=t.child,t.child=null):(o=n.sibling,n.sibling=null),rl(t,!1,o,n,a,t.lastEffect);break;case"backwards":for(n=null,o=t.child,t.child=null;null!==o;){if(null!==(e=o.alternate)&&null===Va(e)){t.child=o;break}e=o.sibling,o.sibling=n,n=o,o=e}rl(t,!0,n,null,a,t.lastEffect);break;case"together":rl(t,!1,null,null,void 0,t.lastEffect);break;default:t.memoizedState=null}return t.child}function al(e,t,n){null!==e&&(t.dependencies=e.dependencies);var r=t.expirationTime;if(0!==r&&du(r),t.childExpirationTime<n)return null;if(null!==e&&t.child!==e.child)throw Error(i(153));if(null!==t.child){for(n=Mu(e=t.child,e.pendingProps,e.expirationTime),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Mu(e,e.pendingProps,e.expirationTime)).return=t;n.sibling=null}return t.child}function il(e){e.effectTag|=4}function ll(e,t){switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function ul(e){switch(e.tag){case 1:yo(e.type)&&go();var t=e.effectTag;return 4096&t?(e.effectTag=-4097&t|64,e):null;case 3:if($a(),bo(),0!=(64&(t=e.effectTag)))throw Error(i(285));return e.effectTag=-4097&t|64,e;case 5:return Ba(e),null;case 13:return co(Ha),4096&(t=e.effectTag)?(e.effectTag=-4097&t|64,e):null;case 19:return co(Ha),null;case 4:return $a(),null;case 10:return aa(e),null;default:return null}}function cl(e,t){return{value:e,source:t,stack:J(t)}}Xi=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Ji=function(e,t,n,r,a){var i=e.memoizedProps;if(i!==r){var l,u,c=t.stateNode;switch(Ua(Fa.current),e=null,n){case"input":i=Ce(c,i),r=Ce(c,r),e=[];break;case"option":i=Me(c,i),r=Me(c,r),e=[];break;case"select":i=o({},i,{value:void 0}),r=o({},r,{value:void 0}),e=[];break;case"textarea":i=Ie(c,i),r=Ie(c,r),e=[];break;default:"function"!=typeof i.onClick&&"function"==typeof r.onClick&&(c.onclick=Hn)}for(l in $n(n,r),n=null,i)if(!r.hasOwnProperty(l)&&i.hasOwnProperty(l)&&null!=i[l])if("style"===l)for(u in c=i[l])c.hasOwnProperty(u)&&(n||(n={}),n[u]="");else"dangerouslySetInnerHTML"!==l&&"children"!==l&&"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(p.hasOwnProperty(l)?e||(e=[]):(e=e||[]).push(l,null));for(l in r){var s=r[l];if(c=null!=i?i[l]:void 0,r.hasOwnProperty(l)&&s!==c&&(null!=s||null!=c))if("style"===l)if(c){for(u in c)!c.hasOwnProperty(u)||s&&s.hasOwnProperty(u)||(n||(n={}),n[u]="");for(u in s)s.hasOwnProperty(u)&&c[u]!==s[u]&&(n||(n={}),n[u]=s[u])}else n||(e||(e=[]),e.push(l,n)),n=s;else"dangerouslySetInnerHTML"===l?(s=s?s.__html:void 0,c=c?c.__html:void 0,null!=s&&c!==s&&(e=e||[]).push(l,""+s)):"children"===l?c===s||"string"!=typeof s&&"number"!=typeof s||(e=e||[]).push(l,""+s):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&(p.hasOwnProperty(l)?(null!=s&&Bn(a,l),e||c===s||(e=[])):(e=e||[]).push(l,s))}n&&(e=e||[]).push("style",n),a=e,(t.updateQueue=a)&&il(t)}},Zi=function(e,t,n,r){n!==r&&il(t)};var sl="function"==typeof WeakSet?WeakSet:Set;function fl(e,t){var n=t.source,r=t.stack;null===r&&null!==n&&(r=J(n)),null!==n&&X(n.type),t=t.value,null!==e&&1===e.tag&&X(e.type);try{console.error(t)}catch(e){setTimeout((function(){throw e}))}}function dl(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){Tu(e,t)}else t.current=null}function pl(e,t){switch(t.tag){case 0:case 11:case 15:ml(2,0,t);break;case 1:if(256&t.effectTag&&null!==e){var n=e.memoizedProps,r=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?n:Jo(t.type,n),r),e.__reactInternalSnapshotBeforeUpdate=t}break;case 3:case 5:case 6:case 4:case 17:break;default:throw Error(i(163))}}function ml(e,t,n){if(null!==(n=null!==(n=n.updateQueue)?n.lastEffect:null)){var r=n=n.next;do{if(0!=(r.tag&e)){var o=r.destroy;r.destroy=void 0,void 0!==o&&o()}0!=(r.tag&t)&&(o=r.create,r.destroy=o()),r=r.next}while(r!==n)}}function hl(e,t,n){switch("function"==typeof Pu&&Pu(t),t.tag){case 0:case 11:case 14:case 15:if(null!==(e=t.updateQueue)&&null!==(e=e.lastEffect)){var r=e.next;Vo(97<n?97:n,(function(){var e=r;do{var n=e.destroy;if(void 0!==n){var o=t;try{n()}catch(e){Tu(o,e)}}e=e.next}while(e!==r)}))}break;case 1:dl(t),"function"==typeof(n=t.stateNode).componentWillUnmount&&function(e,t){try{t.props=e.memoizedProps,t.state=e.memoizedState,t.componentWillUnmount()}catch(t){Tu(e,t)}}(t,n);break;case 5:dl(t);break;case 4:bl(e,t,n)}}function vl(e){var t=e.alternate;e.return=null,e.child=null,e.memoizedState=null,e.updateQueue=null,e.dependencies=null,e.alternate=null,e.firstEffect=null,e.lastEffect=null,e.pendingProps=null,e.memoizedProps=null,null!==t&&vl(t)}function yl(e){return 5===e.tag||3===e.tag||4===e.tag}function gl(e){e:{for(var t=e.return;null!==t;){if(yl(t)){var n=t;break e}t=t.return}throw Error(i(160))}switch(t=n.stateNode,n.tag){case 5:var r=!1;break;case 3:case 4:t=t.containerInfo,r=!0;break;default:throw Error(i(161))}16&n.effectTag&&(He(t,""),n.effectTag&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||yl(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.effectTag)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break e}}for(var o=e;;){var a=5===o.tag||6===o.tag;if(a){var l=a?o.stateNode:o.stateNode.instance;if(n)if(r){var u=l;l=n,8===(a=t).nodeType?a.parentNode.insertBefore(u,l):a.insertBefore(u,l)}else t.insertBefore(l,n);else r?(8===(u=t).nodeType?(a=u.parentNode).insertBefore(l,u):(a=u).appendChild(l),null!=(u=u._reactRootContainer)||null!==a.onclick||(a.onclick=Hn)):t.appendChild(l)}else if(4!==o.tag&&null!==o.child){o.child.return=o,o=o.child;continue}if(o===e)break;for(;null===o.sibling;){if(null===o.return||o.return===e)return;o=o.return}o.sibling.return=o.return,o=o.sibling}}function bl(e,t,n){for(var r,o,a=t,l=!1;;){if(!l){l=a.return;e:for(;;){if(null===l)throw Error(i(160));switch(r=l.stateNode,l.tag){case 5:o=!1;break e;case 3:case 4:r=r.containerInfo,o=!0;break e}l=l.return}l=!0}if(5===a.tag||6===a.tag){e:for(var u=e,c=a,s=n,f=c;;)if(hl(u,f,s),null!==f.child&&4!==f.tag)f.child.return=f,f=f.child;else{if(f===c)break;for(;null===f.sibling;){if(null===f.return||f.return===c)break e;f=f.return}f.sibling.return=f.return,f=f.sibling}o?(u=r,c=a.stateNode,8===u.nodeType?u.parentNode.removeChild(c):u.removeChild(c)):r.removeChild(a.stateNode)}else if(4===a.tag){if(null!==a.child){r=a.stateNode.containerInfo,o=!0,a.child.return=a,a=a.child;continue}}else if(hl(e,a,n),null!==a.child){a.child.return=a,a=a.child;continue}if(a===t)break;for(;null===a.sibling;){if(null===a.return||a.return===t)return;4===(a=a.return).tag&&(l=!1)}a.sibling.return=a.return,a=a.sibling}}function wl(e,t){switch(t.tag){case 0:case 11:case 14:case 15:ml(4,8,t);break;case 1:break;case 5:var n=t.stateNode;if(null!=n){var r=t.memoizedProps,o=null!==e?e.memoizedProps:r;e=t.type;var a=t.updateQueue;if(t.updateQueue=null,null!==a){for(n[ir]=r,"input"===e&&"radio"===r.type&&null!=r.name&&Pe(n,r),Wn(e,o),t=Wn(e,r),o=0;o<a.length;o+=2){var l=a[o],u=a[o+1];"style"===l?Un(n,u):"dangerouslySetInnerHTML"===l?Be(n,u):"children"===l?He(n,u):xe(n,l,u,t)}switch(e){case"input":Oe(n,r);break;case"textarea":Fe(n,r);break;case"select":t=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!r.multiple,null!=(e=r.value)?je(n,!!r.multiple,e,!1):t!==!!r.multiple&&(null!=r.defaultValue?je(n,!!r.multiple,r.defaultValue,!0):je(n,!!r.multiple,r.multiple?[]:"",!1))}}}break;case 6:if(null===t.stateNode)throw Error(i(162));t.stateNode.nodeValue=t.memoizedProps;break;case 3:(t=t.stateNode).hydrate&&(t.hydrate=!1,Ct(t.containerInfo));break;case 12:break;case 13:if(n=t,null===t.memoizedState?r=!1:(r=!0,n=t.child,Al=Wo()),null!==n)e:for(e=n;;){if(5===e.tag)a=e.stateNode,r?"function"==typeof(a=a.style).setProperty?a.setProperty("display","none","important"):a.display="none":(a=e.stateNode,o=null!=(o=e.memoizedProps.style)&&o.hasOwnProperty("display")?o.display:null,a.style.display=Ln("display",o));else if(6===e.tag)e.stateNode.nodeValue=r?"":e.memoizedProps;else{if(13===e.tag&&null!==e.memoizedState&&null===e.memoizedState.dehydrated){(a=e.child.sibling).return=e,e=a;continue}if(null!==e.child){e.child.return=e,e=e.child;continue}}if(e===n)break e;for(;null===e.sibling;){if(null===e.return||e.return===n)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}El(t);break;case 19:El(t);break;case 17:case 20:case 21:break;default:throw Error(i(163))}}function El(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new sl),t.forEach((function(t){var r=Cu.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}var xl="function"==typeof WeakMap?WeakMap:Map;function kl(e,t,n){(n=da(n,null)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Wl||(Wl=!0,Bl=r),fl(e,t)},n}function Tl(e,t,n){(n=da(n,null)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var o=t.value;n.payload=function(){return fl(e,t),r(o)}}var a=e.stateNode;return null!==a&&"function"==typeof a.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===Hl?Hl=new Set([this]):Hl.add(this),fl(e,t));var n=t.stack;this.componentDidCatch(t.value,{componentStack:null!==n?n:""})}),n}var Sl,Cl=Math.ceil,_l=j.ReactCurrentDispatcher,Pl=j.ReactCurrentOwner,Ol=0,Nl=null,Rl=null,Ml=0,jl=0,Il=null,zl=1073741823,Fl=1073741823,Dl=null,Ll=0,Ul=!1,Al=0,$l=null,Wl=!1,Bl=null,Hl=null,Vl=!1,ql=null,Kl=90,Ql=null,Yl=0,Gl=null,Xl=0;function Jl(){return 0!=(48&Ol)?1073741821-(Wo()/10|0):0!==Xl?Xl:Xl=1073741821-(Wo()/10|0)}function Zl(e,t,n){if(0==(2&(t=t.mode)))return 1073741823;var r=Bo();if(0==(4&t))return 99===r?1073741823:1073741822;if(0!=(16&Ol))return Ml;if(null!==n)e=Xo(e,0|n.timeoutMs||5e3,250);else switch(r){case 99:e=1073741823;break;case 98:e=Xo(e,150,100);break;case 97:case 96:e=Xo(e,5e3,250);break;case 95:e=2;break;default:throw Error(i(326))}return null!==Nl&&e===Ml&&--e,e}function eu(e,t){if(50<Yl)throw Yl=0,Gl=null,Error(i(185));if(null!==(e=tu(e,t))){var n=Bo();1073741823===t?0!=(8&Ol)&&0==(48&Ol)?au(e):(ru(e),0===Ol&&Qo()):ru(e),0==(4&Ol)||98!==n&&99!==n||(null===Ql?Ql=new Map([[e,t]]):(void 0===(n=Ql.get(e))||n>t)&&Ql.set(e,t))}}function tu(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t);var r=e.return,o=null;if(null===r&&3===e.tag)o=e.stateNode;else for(;null!==r;){if(n=r.alternate,r.childExpirationTime<t&&(r.childExpirationTime=t),null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t),null===r.return&&3===r.tag){o=r.stateNode;break}r=r.return}return null!==o&&(Nl===o&&(du(t),4===jl&&Uu(o,Ml)),Au(o,t)),o}function nu(e){var t=e.lastExpiredTime;return 0!==t?t:Lu(e,t=e.firstPendingTime)?(t=e.lastPingedTime)>(e=e.nextKnownPendingLevel)?t:e:t}function ru(e){if(0!==e.lastExpiredTime)e.callbackExpirationTime=1073741823,e.callbackPriority=99,e.callbackNode=Ko(au.bind(null,e));else{var t=nu(e),n=e.callbackNode;if(0===t)null!==n&&(e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90);else{var r=Jl();if(1073741823===t?r=99:1===t||2===t?r=95:r=0>=(r=10*(1073741821-t)-10*(1073741821-r))?99:250>=r?98:5250>=r?97:95,null!==n){var o=e.callbackPriority;if(e.callbackExpirationTime===t&&o>=r)return;n!==Fo&&Co(n)}e.callbackExpirationTime=t,e.callbackPriority=r,t=1073741823===t?Ko(au.bind(null,e)):qo(r,ou.bind(null,e),{timeout:10*(1073741821-t)-Wo()}),e.callbackNode=t}}}function ou(e,t){if(Xl=0,t)return $u(e,t=Jl()),ru(e),null;var n=nu(e);if(0!==n){if(t=e.callbackNode,0!=(48&Ol))throw Error(i(327));if(Eu(),e===Nl&&n===Ml||uu(e,n),null!==Rl){var r=Ol;Ol|=16;for(var o=su();;)try{mu();break}catch(t){cu(e,t)}if(ra(),Ol=r,_l.current=o,1===jl)throw t=Il,uu(e,n),Uu(e,n),ru(e),t;if(null===Rl)switch(o=e.finishedWork=e.current.alternate,e.finishedExpirationTime=n,r=jl,Nl=null,r){case 0:case 1:throw Error(i(345));case 2:$u(e,2<n?2:n);break;case 3:if(Uu(e,n),n===(r=e.lastSuspendedTime)&&(e.nextKnownPendingLevel=yu(o)),1073741823===zl&&10<(o=Al+500-Wo())){if(Ul){var a=e.lastPingedTime;if(0===a||a>=n){e.lastPingedTime=n,uu(e,n);break}}if(0!==(a=nu(e))&&a!==n)break;if(0!==r&&r!==n){e.lastPingedTime=r;break}e.timeoutHandle=er(gu.bind(null,e),o);break}gu(e);break;case 4:if(Uu(e,n),n===(r=e.lastSuspendedTime)&&(e.nextKnownPendingLevel=yu(o)),Ul&&(0===(o=e.lastPingedTime)||o>=n)){e.lastPingedTime=n,uu(e,n);break}if(0!==(o=nu(e))&&o!==n)break;if(0!==r&&r!==n){e.lastPingedTime=r;break}if(1073741823!==Fl?r=10*(1073741821-Fl)-Wo():1073741823===zl?r=0:(r=10*(1073741821-zl)-5e3,0>(r=(o=Wo())-r)&&(r=0),(n=10*(1073741821-n)-o)<(r=(120>r?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*Cl(r/1960))-r)&&(r=n)),10<r){e.timeoutHandle=er(gu.bind(null,e),r);break}gu(e);break;case 5:if(1073741823!==zl&&null!==Dl){a=zl;var l=Dl;if(0>=(r=0|l.busyMinDurationMs)?r=0:(o=0|l.busyDelayMs,r=(a=Wo()-(10*(1073741821-a)-(0|l.timeoutMs||5e3)))<=o?0:o+r-a),10<r){Uu(e,n),e.timeoutHandle=er(gu.bind(null,e),r);break}}gu(e);break;default:throw Error(i(329))}if(ru(e),e.callbackNode===t)return ou.bind(null,e)}}return null}function au(e){var t=e.lastExpiredTime;if(t=0!==t?t:1073741823,e.finishedExpirationTime===t)gu(e);else{if(0!=(48&Ol))throw Error(i(327));if(Eu(),e===Nl&&t===Ml||uu(e,t),null!==Rl){var n=Ol;Ol|=16;for(var r=su();;)try{pu();break}catch(t){cu(e,t)}if(ra(),Ol=n,_l.current=r,1===jl)throw n=Il,uu(e,t),Uu(e,t),ru(e),n;if(null!==Rl)throw Error(i(261));e.finishedWork=e.current.alternate,e.finishedExpirationTime=t,Nl=null,gu(e),ru(e)}}return null}function iu(e,t){var n=Ol;Ol|=1;try{return e(t)}finally{0===(Ol=n)&&Qo()}}function lu(e,t){var n=Ol;Ol&=-2,Ol|=8;try{return e(t)}finally{0===(Ol=n)&&Qo()}}function uu(e,t){e.finishedWork=null,e.finishedExpirationTime=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,tr(n)),null!==Rl)for(n=Rl.return;null!==n;){var r=n;switch(r.tag){case 1:var o=r.type.childContextTypes;null!=o&&go();break;case 3:$a(),bo();break;case 5:Ba(r);break;case 4:$a();break;case 13:case 19:co(Ha);break;case 10:aa(r)}n=n.return}Nl=e,Rl=Mu(e.current,null),Ml=t,jl=0,Il=null,Fl=zl=1073741823,Dl=null,Ll=0,Ul=!1}function cu(e,t){for(;;){try{if(ra(),fi(),null===Rl||null===Rl.return)return jl=1,Il=t,null;e:{var n=e,r=Rl.return,o=Rl,a=t;if(t=Ml,o.effectTag|=2048,o.firstEffect=o.lastEffect=null,null!==a&&"object"==typeof a&&"function"==typeof a.then){var i=a,l=0!=(1&Ha.current),u=r;do{var c;if(c=13===u.tag){var s=u.memoizedState;if(null!==s)c=null!==s.dehydrated;else{var f=u.memoizedProps;c=void 0!==f.fallback&&(!0!==f.unstable_avoidThisFallback||!l)}}if(c){var d=u.updateQueue;if(null===d){var p=new Set;p.add(i),u.updateQueue=p}else d.add(i);if(0==(2&u.mode)){if(u.effectTag|=64,o.effectTag&=-2981,1===o.tag)if(null===o.alternate)o.tag=17;else{var m=da(1073741823,null);m.tag=2,ma(o,m)}o.expirationTime=1073741823;break e}a=void 0,o=t;var h=n.pingCache;if(null===h?(h=n.pingCache=new xl,a=new Set,h.set(i,a)):void 0===(a=h.get(i))&&(a=new Set,h.set(i,a)),!a.has(o)){a.add(o);var v=Su.bind(null,n,i,o);i.then(v,v)}u.effectTag|=4096,u.expirationTime=t;break e}u=u.return}while(null!==u);a=Error((X(o.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+J(o))}5!==jl&&(jl=2),a=cl(a,o),u=r;do{switch(u.tag){case 3:i=a,u.effectTag|=4096,u.expirationTime=t,ha(u,kl(u,i,t));break e;case 1:i=a;var y=u.type,g=u.stateNode;if(0==(64&u.effectTag)&&("function"==typeof y.getDerivedStateFromError||null!==g&&"function"==typeof g.componentDidCatch&&(null===Hl||!Hl.has(g)))){u.effectTag|=4096,u.expirationTime=t,ha(u,Tl(u,i,t));break e}}u=u.return}while(null!==u)}Rl=vu(Rl)}catch(e){t=e;continue}break}}function su(){var e=_l.current;return _l.current=Pi,null===e?Pi:e}function fu(e,t){e<zl&&2<e&&(zl=e),null!==t&&e<Fl&&2<e&&(Fl=e,Dl=t)}function du(e){e>Ll&&(Ll=e)}function pu(){for(;null!==Rl;)Rl=hu(Rl)}function mu(){for(;null!==Rl&&!_o();)Rl=hu(Rl)}function hu(e){var t=Sl(e.alternate,e,Ml);return e.memoizedProps=e.pendingProps,null===t&&(t=vu(e)),Pl.current=null,t}function vu(e){Rl=e;do{var t=Rl.alternate;if(e=Rl.return,0==(2048&Rl.effectTag)){e:{var n=t,r=Ml,a=(t=Rl).pendingProps;switch(t.tag){case 2:case 16:break;case 15:case 0:break;case 1:yo(t.type)&&go();break;case 3:$a(),bo(),(a=t.stateNode).pendingContext&&(a.context=a.pendingContext,a.pendingContext=null),(null===n||null===n.child)&&Li(t)&&il(t);break;case 5:Ba(t),r=Ua(La.current);var l=t.type;if(null!==n&&null!=t.stateNode)Ji(n,t,l,a,r),n.ref!==t.ref&&(t.effectTag|=128);else if(a){var u=Ua(Fa.current);if(Li(t)){var c=(a=t).stateNode;n=a.type;var s=a.memoizedProps,f=r;switch(c[ar]=a,c[ir]=s,l=void 0,r=c,n){case"iframe":case"object":case"embed":Sn("load",r);break;case"video":case"audio":for(c=0;c<et.length;c++)Sn(et[c],r);break;case"source":Sn("error",r);break;case"img":case"image":case"link":Sn("error",r),Sn("load",r);break;case"form":Sn("reset",r),Sn("submit",r);break;case"details":Sn("toggle",r);break;case"input":_e(r,s),Sn("invalid",r),Bn(f,"onChange");break;case"select":r._wrapperState={wasMultiple:!!s.multiple},Sn("invalid",r),Bn(f,"onChange");break;case"textarea":ze(r,s),Sn("invalid",r),Bn(f,"onChange")}for(l in $n(n,s),c=null,s)s.hasOwnProperty(l)&&(u=s[l],"children"===l?"string"==typeof u?r.textContent!==u&&(c=["children",u]):"number"==typeof u&&r.textContent!==""+u&&(c=["children",""+u]):p.hasOwnProperty(l)&&null!=u&&Bn(f,l));switch(n){case"input":Te(r),Ne(r,s,!0);break;case"textarea":Te(r),De(r);break;case"select":case"option":break;default:"function"==typeof s.onClick&&(r.onclick=Hn)}l=c,a.updateQueue=l,(a=null!==l)&&il(t)}else{n=t,f=l,s=a,c=9===r.nodeType?r:r.ownerDocument,u===Le&&(u=Ae(f)),u===Le?"script"===f?((s=c.createElement("div")).innerHTML="<script><\/script>",c=s.removeChild(s.firstChild)):"string"==typeof s.is?c=c.createElement(f,{is:s.is}):(c=c.createElement(f),"select"===f&&(f=c,s.multiple?f.multiple=!0:s.size&&(f.size=s.size))):c=c.createElementNS(u,f),(s=c)[ar]=n,s[ir]=a,Xi(s,t),t.stateNode=s;var d=r,m=Wn(f=l,n=a);switch(f){case"iframe":case"object":case"embed":Sn("load",s),r=n;break;case"video":case"audio":for(r=0;r<et.length;r++)Sn(et[r],s);r=n;break;case"source":Sn("error",s),r=n;break;case"img":case"image":case"link":Sn("error",s),Sn("load",s),r=n;break;case"form":Sn("reset",s),Sn("submit",s),r=n;break;case"details":Sn("toggle",s),r=n;break;case"input":_e(s,n),r=Ce(s,n),Sn("invalid",s),Bn(d,"onChange");break;case"option":r=Me(s,n);break;case"select":s._wrapperState={wasMultiple:!!n.multiple},r=o({},n,{value:void 0}),Sn("invalid",s),Bn(d,"onChange");break;case"textarea":ze(s,n),r=Ie(s,n),Sn("invalid",s),Bn(d,"onChange");break;default:r=n}$n(f,r),c=void 0,u=f;var h=s,v=r;for(c in v)if(v.hasOwnProperty(c)){var y=v[c];"style"===c?Un(h,y):"dangerouslySetInnerHTML"===c?null!=(y=y?y.__html:void 0)&&Be(h,y):"children"===c?"string"==typeof y?("textarea"!==u||""!==y)&&He(h,y):"number"==typeof y&&He(h,""+y):"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&"autoFocus"!==c&&(p.hasOwnProperty(c)?null!=y&&Bn(d,c):null!=y&&xe(h,c,y,m))}switch(f){case"input":Te(s),Ne(s,n,!1);break;case"textarea":Te(s),De(s);break;case"option":null!=n.value&&s.setAttribute("value",""+Ee(n.value));break;case"select":(r=s).multiple=!!n.multiple,null!=(s=n.value)?je(r,!!n.multiple,s,!1):null!=n.defaultValue&&je(r,!!n.multiple,n.defaultValue,!0);break;default:"function"==typeof r.onClick&&(s.onclick=Hn)}(a=Jn(l,a))&&il(t)}null!==t.ref&&(t.effectTag|=128)}else if(null===t.stateNode)throw Error(i(166));break;case 6:if(n&&null!=t.stateNode)Zi(0,t,n.memoizedProps,a);else{if("string"!=typeof a&&null===t.stateNode)throw Error(i(166));r=Ua(La.current),Ua(Fa.current),Li(t)?(l=(a=t).stateNode,r=a.memoizedProps,l[ar]=a,(a=l.nodeValue!==r)&&il(t)):(l=t,(a=(9===r.nodeType?r:r.ownerDocument).createTextNode(a))[ar]=l,t.stateNode=a)}break;case 11:break;case 13:if(co(Ha),a=t.memoizedState,0!=(64&t.effectTag)){t.expirationTime=r;break e}a=null!==a,l=!1,null===n?void 0!==t.memoizedProps.fallback&&Li(t):(l=null!==(r=n.memoizedState),a||null===r||null!==(r=n.child.sibling)&&(null!==(s=t.firstEffect)?(t.firstEffect=r,r.nextEffect=s):(t.firstEffect=t.lastEffect=r,r.nextEffect=null),r.effectTag=8)),a&&!l&&0!=(2&t.mode)&&(null===n&&!0!==t.memoizedProps.unstable_avoidThisFallback||0!=(1&Ha.current)?0===jl&&(jl=3):(0!==jl&&3!==jl||(jl=4),0!==Ll&&null!==Nl&&(Uu(Nl,Ml),Au(Nl,Ll)))),(a||l)&&(t.effectTag|=4);break;case 7:case 8:case 12:break;case 4:$a();break;case 10:aa(t);break;case 9:case 14:break;case 17:yo(t.type)&&go();break;case 19:if(co(Ha),null===(a=t.memoizedState))break;if(l=0!=(64&t.effectTag),null===(s=a.rendering)){if(l)ll(a,!1);else if(0!==jl||null!==n&&0!=(64&n.effectTag))for(n=t.child;null!==n;){if(null!==(s=Va(n))){for(t.effectTag|=64,ll(a,!1),null!==(l=s.updateQueue)&&(t.updateQueue=l,t.effectTag|=4),null===a.lastEffect&&(t.firstEffect=null),t.lastEffect=a.lastEffect,a=r,l=t.child;null!==l;)n=a,(r=l).effectTag&=2,r.nextEffect=null,r.firstEffect=null,r.lastEffect=null,null===(s=r.alternate)?(r.childExpirationTime=0,r.expirationTime=n,r.child=null,r.memoizedProps=null,r.memoizedState=null,r.updateQueue=null,r.dependencies=null):(r.childExpirationTime=s.childExpirationTime,r.expirationTime=s.expirationTime,r.child=s.child,r.memoizedProps=s.memoizedProps,r.memoizedState=s.memoizedState,r.updateQueue=s.updateQueue,n=s.dependencies,r.dependencies=null===n?null:{expirationTime:n.expirationTime,firstContext:n.firstContext,responders:n.responders}),l=l.sibling;so(Ha,1&Ha.current|2),t=t.child;break e}n=n.sibling}}else{if(!l)if(null!==(n=Va(s))){if(t.effectTag|=64,l=!0,null!==(r=n.updateQueue)&&(t.updateQueue=r,t.effectTag|=4),ll(a,!0),null===a.tail&&"hidden"===a.tailMode&&!s.alternate){null!==(t=t.lastEffect=a.lastEffect)&&(t.nextEffect=null);break}}else Wo()>a.tailExpiration&&1<r&&(t.effectTag|=64,l=!0,ll(a,!1),t.expirationTime=t.childExpirationTime=r-1);a.isBackwards?(s.sibling=t.child,t.child=s):(null!==(r=a.last)?r.sibling=s:t.child=s,a.last=s)}if(null!==a.tail){0===a.tailExpiration&&(a.tailExpiration=Wo()+500),r=a.tail,a.rendering=r,a.tail=r.sibling,a.lastEffect=t.lastEffect,r.sibling=null,a=Ha.current,so(Ha,a=l?1&a|2:1&a),t=r;break e}break;case 20:case 21:break;default:throw Error(i(156,t.tag))}t=null}if(a=Rl,1===Ml||1!==a.childExpirationTime){for(l=0,r=a.child;null!==r;)(n=r.expirationTime)>l&&(l=n),(s=r.childExpirationTime)>l&&(l=s),r=r.sibling;a.childExpirationTime=l}if(null!==t)return t;null!==e&&0==(2048&e.effectTag)&&(null===e.firstEffect&&(e.firstEffect=Rl.firstEffect),null!==Rl.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=Rl.firstEffect),e.lastEffect=Rl.lastEffect),1<Rl.effectTag&&(null!==e.lastEffect?e.lastEffect.nextEffect=Rl:e.firstEffect=Rl,e.lastEffect=Rl))}else{if(null!==(t=ul(Rl)))return t.effectTag&=2047,t;null!==e&&(e.firstEffect=e.lastEffect=null,e.effectTag|=2048)}if(null!==(t=Rl.sibling))return t;Rl=e}while(null!==Rl);return 0===jl&&(jl=5),null}function yu(e){var t=e.expirationTime;return t>(e=e.childExpirationTime)?t:e}function gu(e){var t=Bo();return Vo(99,bu.bind(null,e,t)),null}function bu(e,t){do{Eu()}while(null!==ql);if(0!=(48&Ol))throw Error(i(327));var n=e.finishedWork,r=e.finishedExpirationTime;if(null===n)return null;if(e.finishedWork=null,e.finishedExpirationTime=0,n===e.current)throw Error(i(177));e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90,e.nextKnownPendingLevel=0;var o=yu(n);if(e.firstPendingTime=o,r<=e.lastSuspendedTime?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:r<=e.firstSuspendedTime&&(e.firstSuspendedTime=r-1),r<=e.lastPingedTime&&(e.lastPingedTime=0),r<=e.lastExpiredTime&&(e.lastExpiredTime=0),e===Nl&&(Rl=Nl=null,Ml=0),1<n.effectTag?null!==n.lastEffect?(n.lastEffect.nextEffect=n,o=n.firstEffect):o=n:o=n.firstEffect,null!==o){var a=Ol;Ol|=32,Pl.current=null,Gn=Tn;var l=Qn();if(Yn(l)){if("selectionStart"in l)var u={start:l.selectionStart,end:l.selectionEnd};else e:{var c=(u=(u=l.ownerDocument)&&u.defaultView||window).getSelection&&u.getSelection();if(c&&0!==c.rangeCount){u=c.anchorNode;var s=c.anchorOffset,f=c.focusNode;c=c.focusOffset;try{u.nodeType,f.nodeType}catch(e){u=null;break e}var d=0,p=-1,m=-1,h=0,v=0,y=l,g=null;t:for(;;){for(var b;y!==u||0!==s&&3!==y.nodeType||(p=d+s),y!==f||0!==c&&3!==y.nodeType||(m=d+c),3===y.nodeType&&(d+=y.nodeValue.length),null!==(b=y.firstChild);)g=y,y=b;for(;;){if(y===l)break t;if(g===u&&++h===s&&(p=d),g===f&&++v===c&&(m=d),null!==(b=y.nextSibling))break;g=(y=g).parentNode}y=b}u=-1===p||-1===m?null:{start:p,end:m}}else u=null}u=u||{start:0,end:0}}else u=null;Xn={focusedElem:l,selectionRange:u},Tn=!1,$l=o;do{try{wu()}catch(e){if(null===$l)throw Error(i(330));Tu($l,e),$l=$l.nextEffect}}while(null!==$l);$l=o;do{try{for(l=e,u=t;null!==$l;){var w=$l.effectTag;if(16&w&&He($l.stateNode,""),128&w){var E=$l.alternate;if(null!==E){var x=E.ref;null!==x&&("function"==typeof x?x(null):x.current=null)}}switch(1038&w){case 2:gl($l),$l.effectTag&=-3;break;case 6:gl($l),$l.effectTag&=-3,wl($l.alternate,$l);break;case 1024:$l.effectTag&=-1025;break;case 1028:$l.effectTag&=-1025,wl($l.alternate,$l);break;case 4:wl($l.alternate,$l);break;case 8:bl(l,s=$l,u),vl(s)}$l=$l.nextEffect}}catch(e){if(null===$l)throw Error(i(330));Tu($l,e),$l=$l.nextEffect}}while(null!==$l);if(x=Xn,E=Qn(),w=x.focusedElem,u=x.selectionRange,E!==w&&w&&w.ownerDocument&&function e(t,n){return!(!t||!n)&&(t===n||(!t||3!==t.nodeType)&&(n&&3===n.nodeType?e(t,n.parentNode):"contains"in t?t.contains(n):!!t.compareDocumentPosition&&!!(16&t.compareDocumentPosition(n))))}(w.ownerDocument.documentElement,w)){null!==u&&Yn(w)&&(E=u.start,void 0===(x=u.end)&&(x=E),"selectionStart"in w?(w.selectionStart=E,w.selectionEnd=Math.min(x,w.value.length)):(x=(E=w.ownerDocument||document)&&E.defaultView||window).getSelection&&(x=x.getSelection(),s=w.textContent.length,l=Math.min(u.start,s),u=void 0===u.end?l:Math.min(u.end,s),!x.extend&&l>u&&(s=u,u=l,l=s),s=Kn(w,l),f=Kn(w,u),s&&f&&(1!==x.rangeCount||x.anchorNode!==s.node||x.anchorOffset!==s.offset||x.focusNode!==f.node||x.focusOffset!==f.offset)&&((E=E.createRange()).setStart(s.node,s.offset),x.removeAllRanges(),l>u?(x.addRange(E),x.extend(f.node,f.offset)):(E.setEnd(f.node,f.offset),x.addRange(E))))),E=[];for(x=w;x=x.parentNode;)1===x.nodeType&&E.push({element:x,left:x.scrollLeft,top:x.scrollTop});for("function"==typeof w.focus&&w.focus(),w=0;w<E.length;w++)(x=E[w]).element.scrollLeft=x.left,x.element.scrollTop=x.top}Xn=null,Tn=!!Gn,Gn=null,e.current=n,$l=o;do{try{for(w=r;null!==$l;){var k=$l.effectTag;if(36&k){var T=$l.alternate;switch(x=w,(E=$l).tag){case 0:case 11:case 15:ml(16,32,E);break;case 1:var S=E.stateNode;if(4&E.effectTag)if(null===T)S.componentDidMount();else{var C=E.elementType===E.type?T.memoizedProps:Jo(E.type,T.memoizedProps);S.componentDidUpdate(C,T.memoizedState,S.__reactInternalSnapshotBeforeUpdate)}var _=E.updateQueue;null!==_&&ba(0,_,S);break;case 3:var P=E.updateQueue;if(null!==P){if(l=null,null!==E.child)switch(E.child.tag){case 5:l=E.child.stateNode;break;case 1:l=E.child.stateNode}ba(0,P,l)}break;case 5:var O=E.stateNode;null===T&&4&E.effectTag&&Jn(E.type,E.memoizedProps)&&O.focus();break;case 6:case 4:case 12:break;case 13:if(null===E.memoizedState){var N=E.alternate;if(null!==N){var R=N.memoizedState;if(null!==R){var M=R.dehydrated;null!==M&&Ct(M)}}}break;case 19:case 17:case 20:case 21:break;default:throw Error(i(163))}}if(128&k){E=void 0;var j=$l.ref;if(null!==j){var I=$l.stateNode;switch($l.tag){case 5:E=I;break;default:E=I}"function"==typeof j?j(E):j.current=E}}$l=$l.nextEffect}}catch(e){if(null===$l)throw Error(i(330));Tu($l,e),$l=$l.nextEffect}}while(null!==$l);$l=null,Do(),Ol=a}else e.current=n;if(Vl)Vl=!1,ql=e,Kl=t;else for($l=o;null!==$l;)t=$l.nextEffect,$l.nextEffect=null,$l=t;if(0===(t=e.firstPendingTime)&&(Hl=null),1073741823===t?e===Gl?Yl++:(Yl=0,Gl=e):Yl=0,"function"==typeof _u&&_u(n.stateNode,r),ru(e),Wl)throw Wl=!1,e=Bl,Bl=null,e;return 0!=(8&Ol)?null:(Qo(),null)}function wu(){for(;null!==$l;){var e=$l.effectTag;0!=(256&e)&&pl($l.alternate,$l),0==(512&e)||Vl||(Vl=!0,qo(97,(function(){return Eu(),null}))),$l=$l.nextEffect}}function Eu(){if(90!==Kl){var e=97<Kl?97:Kl;return Kl=90,Vo(e,xu)}}function xu(){if(null===ql)return!1;var e=ql;if(ql=null,0!=(48&Ol))throw Error(i(331));var t=Ol;for(Ol|=32,e=e.current.firstEffect;null!==e;){try{var n=e;if(0!=(512&n.effectTag))switch(n.tag){case 0:case 11:case 15:ml(128,0,n),ml(0,64,n)}}catch(t){if(null===e)throw Error(i(330));Tu(e,t)}n=e.nextEffect,e.nextEffect=null,e=n}return Ol=t,Qo(),!0}function ku(e,t,n){ma(e,t=kl(e,t=cl(n,t),1073741823)),null!==(e=tu(e,1073741823))&&ru(e)}function Tu(e,t){if(3===e.tag)ku(e,e,t);else for(var n=e.return;null!==n;){if(3===n.tag){ku(n,e,t);break}if(1===n.tag){var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Hl||!Hl.has(r))){ma(n,e=Tl(n,e=cl(t,e),1073741823)),null!==(n=tu(n,1073741823))&&ru(n);break}}n=n.return}}function Su(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),Nl===e&&Ml===n?4===jl||3===jl&&1073741823===zl&&Wo()-Al<500?uu(e,Ml):Ul=!0:Lu(e,n)&&(0!==(t=e.lastPingedTime)&&t<n||(e.lastPingedTime=n,e.finishedExpirationTime===n&&(e.finishedExpirationTime=0,e.finishedWork=null),ru(e)))}function Cu(e,t){var n=e.stateNode;null!==n&&n.delete(t),0===(t=0)&&(t=Zl(t=Jl(),e,null)),null!==(e=tu(e,t))&&ru(e)}Sl=function(e,t,n){var r=t.expirationTime;if(null!==e){var o=t.pendingProps;if(e.memoizedProps!==o||mo.current)$i=!0;else{if(r<n){switch($i=!1,t.tag){case 3:Gi(t),Ui();break;case 5:if(Wa(t),4&t.mode&&1!==n&&o.hidden)return t.expirationTime=t.childExpirationTime=1,null;break;case 1:yo(t.type)&&xo(t);break;case 4:Aa(t,t.stateNode.containerInfo);break;case 10:oa(t,t.memoizedProps.value);break;case 13:if(null!==t.memoizedState)return 0!==(r=t.child.childExpirationTime)&&r>=n?tl(e,t,n):(so(Ha,1&Ha.current),null!==(t=al(e,t,n))?t.sibling:null);so(Ha,1&Ha.current);break;case 19:if(r=t.childExpirationTime>=n,0!=(64&e.effectTag)){if(r)return ol(e,t,n);t.effectTag|=64}if(null!==(o=t.memoizedState)&&(o.rendering=null,o.tail=null),so(Ha,Ha.current),!r)return null}return al(e,t,n)}$i=!1}}else $i=!1;switch(t.expirationTime=0,t.tag){case 2:if(r=t.type,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps,o=vo(t,po.current),la(t,n),o=si(null,t,r,e,o,n),t.effectTag|=1,"object"==typeof o&&null!==o&&"function"==typeof o.render&&void 0===o.$$typeof){if(t.tag=1,fi(),yo(r)){var a=!0;xo(t)}else a=!1;t.memoizedState=null!==o.state&&void 0!==o.state?o.state:null;var l=r.getDerivedStateFromProps;"function"==typeof l&&ka(t,r,l,e),o.updater=Ta,t.stateNode=o,o._reactInternalFiber=t,Pa(t,r,e,n),t=Yi(null,t,r,!0,a,n)}else t.tag=0,Wi(null,t,o,n),t=t.child;return t;case 16:if(o=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps,function(e){if(-1===e._status){e._status=0;var t=e._ctor;t=t(),e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}}(o),1!==o._status)throw o._result;switch(o=o._result,t.type=o,a=t.tag=function(e){if("function"==typeof e)return Ru(e)?1:0;if(null!=e){if((e=e.$$typeof)===H)return 11;if(e===K)return 14}return 2}(o),e=Jo(o,e),a){case 0:t=Ki(null,t,o,e,n);break;case 1:t=Qi(null,t,o,e,n);break;case 11:t=Bi(null,t,o,e,n);break;case 14:t=Hi(null,t,o,Jo(o.type,e),r,n);break;default:throw Error(i(306,o,""))}return t;case 0:return r=t.type,o=t.pendingProps,Ki(e,t,r,o=t.elementType===r?o:Jo(r,o),n);case 1:return r=t.type,o=t.pendingProps,Qi(e,t,r,o=t.elementType===r?o:Jo(r,o),n);case 3:if(Gi(t),null===(r=t.updateQueue))throw Error(i(282));if(o=null!==(o=t.memoizedState)?o.element:null,ga(t,r,t.pendingProps,null,n),(r=t.memoizedState.element)===o)Ui(),t=al(e,t,n);else{if((o=t.stateNode.hydrate)&&(Mi=nr(t.stateNode.containerInfo.firstChild),Ri=t,o=ji=!0),o)for(n=Ia(t,null,r,n),t.child=n;n;)n.effectTag=-3&n.effectTag|1024,n=n.sibling;else Wi(e,t,r,n),Ui();t=t.child}return t;case 5:return Wa(t),null===e&&Fi(t),r=t.type,o=t.pendingProps,a=null!==e?e.memoizedProps:null,l=o.children,Zn(r,o)?l=null:null!==a&&Zn(r,a)&&(t.effectTag|=16),qi(e,t),4&t.mode&&1!==n&&o.hidden?(t.expirationTime=t.childExpirationTime=1,t=null):(Wi(e,t,l,n),t=t.child),t;case 6:return null===e&&Fi(t),null;case 13:return tl(e,t,n);case 4:return Aa(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=ja(t,null,r,n):Wi(e,t,r,n),t.child;case 11:return r=t.type,o=t.pendingProps,Bi(e,t,r,o=t.elementType===r?o:Jo(r,o),n);case 7:return Wi(e,t,t.pendingProps,n),t.child;case 8:case 12:return Wi(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(r=t.type._context,o=t.pendingProps,l=t.memoizedProps,oa(t,a=o.value),null!==l){var u=l.value;if(0===(a=Gr(u,a)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(u,a):1073741823))){if(l.children===o.children&&!mo.current){t=al(e,t,n);break e}}else for(null!==(u=t.child)&&(u.return=t);null!==u;){var c=u.dependencies;if(null!==c){l=u.child;for(var s=c.firstContext;null!==s;){if(s.context===r&&0!=(s.observedBits&a)){1===u.tag&&((s=da(n,null)).tag=2,ma(u,s)),u.expirationTime<n&&(u.expirationTime=n),null!==(s=u.alternate)&&s.expirationTime<n&&(s.expirationTime=n),ia(u.return,n),c.expirationTime<n&&(c.expirationTime=n);break}s=s.next}}else l=10===u.tag&&u.type===t.type?null:u.child;if(null!==l)l.return=u;else for(l=u;null!==l;){if(l===t){l=null;break}if(null!==(u=l.sibling)){u.return=l.return,l=u;break}l=l.return}u=l}}Wi(e,t,o.children,n),t=t.child}return t;case 9:return o=t.type,r=(a=t.pendingProps).children,la(t,n),r=r(o=ua(o,a.unstable_observedBits)),t.effectTag|=1,Wi(e,t,r,n),t.child;case 14:return a=Jo(o=t.type,t.pendingProps),Hi(e,t,o,a=Jo(o.type,a),r,n);case 15:return Vi(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,o=t.pendingProps,o=t.elementType===r?o:Jo(r,o),null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),t.tag=1,yo(r)?(e=!0,xo(t)):e=!1,la(t,n),Ca(t,r,o),Pa(t,r,o,n),Yi(null,t,r,!0,e,n);case 19:return ol(e,t,n)}throw Error(i(156,t.tag))};var _u=null,Pu=null;function Ou(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childExpirationTime=this.expirationTime=0,this.alternate=null}function Nu(e,t,n,r){return new Ou(e,t,n,r)}function Ru(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Mu(e,t){var n=e.alternate;return null===n?((n=Nu(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.effectTag=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childExpirationTime=e.childExpirationTime,n.expirationTime=e.expirationTime,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{expirationTime:t.expirationTime,firstContext:t.firstContext,responders:t.responders},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function ju(e,t,n,r,o,a){var l=2;if(r=e,"function"==typeof e)Ru(e)&&(l=1);else if("string"==typeof e)l=5;else e:switch(e){case L:return Iu(n.children,o,a,t);case B:l=8,o|=7;break;case U:l=8,o|=1;break;case A:return(e=Nu(12,n,t,8|o)).elementType=A,e.type=A,e.expirationTime=a,e;case V:return(e=Nu(13,n,t,o)).type=V,e.elementType=V,e.expirationTime=a,e;case q:return(e=Nu(19,n,t,o)).elementType=q,e.expirationTime=a,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case $:l=10;break e;case W:l=9;break e;case H:l=11;break e;case K:l=14;break e;case Q:l=16,r=null;break e}throw Error(i(130,null==e?e:typeof e,""))}return(t=Nu(l,n,t,o)).elementType=e,t.type=r,t.expirationTime=a,t}function Iu(e,t,n,r){return(e=Nu(7,e,r,t)).expirationTime=n,e}function zu(e,t,n){return(e=Nu(6,e,null,t)).expirationTime=n,e}function Fu(e,t,n){return(t=Nu(4,null!==e.children?e.children:[],e.key,t)).expirationTime=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Du(e,t,n){this.tag=t,this.current=null,this.containerInfo=e,this.pingCache=this.pendingChildren=null,this.finishedExpirationTime=0,this.finishedWork=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=n,this.callbackNode=null,this.callbackPriority=90,this.lastExpiredTime=this.lastPingedTime=this.nextKnownPendingLevel=this.lastSuspendedTime=this.firstSuspendedTime=this.firstPendingTime=0}function Lu(e,t){var n=e.firstSuspendedTime;return e=e.lastSuspendedTime,0!==n&&n>=t&&e<=t}function Uu(e,t){var n=e.firstSuspendedTime,r=e.lastSuspendedTime;n<t&&(e.firstSuspendedTime=t),(r>t||0===n)&&(e.lastSuspendedTime=t),t<=e.lastPingedTime&&(e.lastPingedTime=0),t<=e.lastExpiredTime&&(e.lastExpiredTime=0)}function Au(e,t){t>e.firstPendingTime&&(e.firstPendingTime=t);var n=e.firstSuspendedTime;0!==n&&(t>=n?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:t>=e.lastSuspendedTime&&(e.lastSuspendedTime=t+1),t>e.nextKnownPendingLevel&&(e.nextKnownPendingLevel=t))}function $u(e,t){var n=e.lastExpiredTime;(0===n||n>t)&&(e.lastExpiredTime=t)}function Wu(e,t,n,r){var o=t.current,a=Jl(),l=Ea.suspense;a=Zl(a,o,l);e:if(n){t:{if(tt(n=n._reactInternalFiber)!==n||1!==n.tag)throw Error(i(170));var u=n;do{switch(u.tag){case 3:u=u.stateNode.context;break t;case 1:if(yo(u.type)){u=u.stateNode.__reactInternalMemoizedMergedChildContext;break t}}u=u.return}while(null!==u);throw Error(i(171))}if(1===n.tag){var c=n.type;if(yo(c)){n=Eo(n,c,u);break e}}n=u}else n=fo;return null===t.context?t.context=n:t.pendingContext=n,(t=da(a,l)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),ma(o,t),eu(o,a),a}function Bu(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function Hu(e,t){null!==(e=e.memoizedState)&&null!==e.dehydrated&&e.retryTime<t&&(e.retryTime=t)}function Vu(e,t){Hu(e,t),(e=e.alternate)&&Hu(e,t)}function qu(e,t,n){var r=new Du(e,t,n=null!=n&&!0===n.hydrate),o=Nu(3,null,null,2===t?7:1===t?3:0);r.current=o,o.stateNode=r,e[lr]=r.current,n&&0!==t&&function(e){var t=In(e);vt.forEach((function(n){zn(n,e,t)})),yt.forEach((function(n){zn(n,e,t)}))}(9===e.nodeType?e:e.ownerDocument),this._internalRoot=r}function Ku(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Qu(e,t,n,r,o){var a=n._reactRootContainer;if(a){var i=a._internalRoot;if("function"==typeof o){var l=o;o=function(){var e=Bu(i);l.call(e)}}Wu(t,i,e,o)}else{if(a=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new qu(e,0,t?{hydrate:!0}:void 0)}(n,r),i=a._internalRoot,"function"==typeof o){var u=o;o=function(){var e=Bu(i);u.call(e)}}lu((function(){Wu(t,i,e,o)}))}return Bu(i)}function Yu(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:D,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}function Gu(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Ku(t))throw Error(i(200));return Yu(e,t,null,n)}qu.prototype.render=function(e,t){Wu(e,this._internalRoot,null,void 0===t?null:t)},qu.prototype.unmount=function(e){var t=this._internalRoot,n=void 0===e?null:e,r=t.containerInfo;Wu(null,t,null,(function(){r[lr]=null,null!==n&&n()}))},at=function(e){if(13===e.tag){var t=Xo(Jl(),150,100);eu(e,t),Vu(e,t)}},it=function(e){if(13===e.tag){Jl();var t=Go++;eu(e,t),Vu(e,t)}},lt=function(e){if(13===e.tag){var t=Jl();eu(e,t=Zl(t,e,null)),Vu(e,t)}},ee=function(e,t,n){switch(t){case"input":if(Oe(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var o=fr(r);if(!o)throw Error(i(90));Se(r),Oe(r,o)}}}break;case"textarea":Fe(e,n);break;case"select":null!=(t=n.value)&&je(e,!!n.multiple,t,!1)}},ie=iu,le=function(e,t,n,r){var o=Ol;Ol|=4;try{return Vo(98,e.bind(null,t,n,r))}finally{0===(Ol=o)&&Qo()}},ue=function(){0==(49&Ol)&&(function(){if(null!==Ql){var e=Ql;Ql=null,e.forEach((function(e,t){$u(t,e),ru(t)})),Qo()}}(),Eu())},ce=function(e,t){var n=Ol;Ol|=2;try{return e(t)}finally{0===(Ol=n)&&Qo()}};var Xu,Ju,Zu={createPortal:Gu,findDOMNode:function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternalFiber;if(void 0===t){if("function"==typeof e.render)throw Error(i(188));throw Error(i(268,Object.keys(e)))}return e=null===(e=ot(t))?null:e.stateNode},hydrate:function(e,t,n){if(!Ku(t))throw Error(i(200));return Qu(null,e,t,!0,n)},render:function(e,t,n){if(!Ku(t))throw Error(i(200));return Qu(null,e,t,!1,n)},unstable_renderSubtreeIntoContainer:function(e,t,n,r){if(!Ku(n))throw Error(i(200));if(null==e||void 0===e._reactInternalFiber)throw Error(i(38));return Qu(e,t,n,!1,r)},unmountComponentAtNode:function(e){if(!Ku(e))throw Error(i(40));return!!e._reactRootContainer&&(lu((function(){Qu(null,null,e,!1,(function(){e._reactRootContainer=null,e[lr]=null}))})),!0)},unstable_createPortal:function(){return Gu.apply(void 0,arguments)},unstable_batchedUpdates:iu,flushSync:function(e,t){if(0!=(48&Ol))throw Error(i(187));var n=Ol;Ol|=1;try{return Vo(99,e.bind(null,t))}finally{Ol=n,Qo()}},__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{Events:[cr,sr,fr,R.injectEventPluginsByName,d,jt,function(e){_(e,Mt)},oe,ae,Nn,N,Eu,{current:!1}]}};Ju=(Xu={findFiberByHostInstance:ur,bundleType:0,version:"16.12.0",rendererPackageName:"react-dom"}).findFiberByHostInstance,function(e){if("undefined"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(t.isDisabled||!t.supportsFiber)return!0;try{var n=t.inject(e);_u=function(e){try{t.onCommitFiberRoot(n,e,void 0,64==(64&e.current.effectTag))}catch(e){}},Pu=function(e){try{t.onCommitFiberUnmount(n,e)}catch(e){}}}catch(e){}}(o({},Xu,{overrideHookState:null,overrideProps:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:j.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=ot(e))?null:e.stateNode},findFiberByHostInstance:function(e){return Ju?Ju(e):null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null}));var ec={default:Zu},tc=ec&&Zu||ec;e.exports=tc.default||tc},function(e,t,n){"use strict";e.exports=n(17)},function(e,t,n){"use strict";
/** @license React v0.18.0
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r,o,a,i,l;if(Object.defineProperty(t,"__esModule",{value:!0}),"undefined"==typeof window||"function"!=typeof MessageChannel){var u=null,c=null,s=function(){if(null!==u)try{var e=t.unstable_now();u(!0,e),u=null}catch(e){throw setTimeout(s,0),e}},f=Date.now();t.unstable_now=function(){return Date.now()-f},r=function(e){null!==u?setTimeout(r,0,e):(u=e,setTimeout(s,0))},o=function(e,t){c=setTimeout(e,t)},a=function(){clearTimeout(c)},i=function(){return!1},l=t.unstable_forceFrameRate=function(){}}else{var d=window.performance,p=window.Date,m=window.setTimeout,h=window.clearTimeout;if("undefined"!=typeof console){var v=window.cancelAnimationFrame;"function"!=typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"),"function"!=typeof v&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills")}if("object"==typeof d&&"function"==typeof d.now)t.unstable_now=function(){return d.now()};else{var y=p.now();t.unstable_now=function(){return p.now()-y}}var g=!1,b=null,w=-1,E=5,x=0;i=function(){return t.unstable_now()>=x},l=function(){},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing framerates higher than 125 fps is not unsupported"):E=0<e?Math.floor(1e3/e):5};var k=new MessageChannel,T=k.port2;k.port1.onmessage=function(){if(null!==b){var e=t.unstable_now();x=e+E;try{b(!0,e)?T.postMessage(null):(g=!1,b=null)}catch(e){throw T.postMessage(null),e}}else g=!1},r=function(e){b=e,g||(g=!0,T.postMessage(null))},o=function(e,n){w=m((function(){e(t.unstable_now())}),n)},a=function(){h(w),w=-1}}function S(e,t){var n=e.length;e.push(t);e:for(;;){var r=Math.floor((n-1)/2),o=e[r];if(!(void 0!==o&&0<P(o,t)))break e;e[r]=t,e[n]=o,n=r}}function C(e){return void 0===(e=e[0])?null:e}function _(e){var t=e[0];if(void 0!==t){var n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,o=e.length;r<o;){var a=2*(r+1)-1,i=e[a],l=a+1,u=e[l];if(void 0!==i&&0>P(i,n))void 0!==u&&0>P(u,i)?(e[r]=u,e[l]=n,r=l):(e[r]=i,e[a]=n,r=a);else{if(!(void 0!==u&&0>P(u,n)))break e;e[r]=u,e[l]=n,r=l}}}return t}return null}function P(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}var O=[],N=[],R=1,M=null,j=3,I=!1,z=!1,F=!1;function D(e){for(var t=C(N);null!==t;){if(null===t.callback)_(N);else{if(!(t.startTime<=e))break;_(N),t.sortIndex=t.expirationTime,S(O,t)}t=C(N)}}function L(e){if(F=!1,D(e),!z)if(null!==C(O))z=!0,r(U);else{var t=C(N);null!==t&&o(L,t.startTime-e)}}function U(e,n){z=!1,F&&(F=!1,a()),I=!0;var r=j;try{for(D(n),M=C(O);null!==M&&(!(M.expirationTime>n)||e&&!i());){var l=M.callback;if(null!==l){M.callback=null,j=M.priorityLevel;var u=l(M.expirationTime<=n);n=t.unstable_now(),"function"==typeof u?M.callback=u:M===C(O)&&_(O),D(n)}else _(O);M=C(O)}if(null!==M)var c=!0;else{var s=C(N);null!==s&&o(L,s.startTime-n),c=!1}return c}finally{M=null,j=r,I=!1}}function A(e){switch(e){case 1:return-1;case 2:return 250;case 5:return 1073741823;case 4:return 1e4;default:return 5e3}}var $=l;t.unstable_ImmediatePriority=1,t.unstable_UserBlockingPriority=2,t.unstable_NormalPriority=3,t.unstable_IdlePriority=5,t.unstable_LowPriority=4,t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=j;j=e;try{return t()}finally{j=n}},t.unstable_next=function(e){switch(j){case 1:case 2:case 3:var t=3;break;default:t=j}var n=j;j=t;try{return e()}finally{j=n}},t.unstable_scheduleCallback=function(e,n,i){var l=t.unstable_now();if("object"==typeof i&&null!==i){var u=i.delay;u="number"==typeof u&&0<u?l+u:l,i="number"==typeof i.timeout?i.timeout:A(e)}else i=A(e),u=l;return e={id:R++,callback:n,priorityLevel:e,startTime:u,expirationTime:i=u+i,sortIndex:-1},u>l?(e.sortIndex=u,S(N,e),null===C(O)&&e===C(N)&&(F?a():F=!0,o(L,u-l))):(e.sortIndex=i,S(O,e),z||I||(z=!0,r(U))),e},t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_wrapCallback=function(e){var t=j;return function(){var n=j;j=t;try{return e.apply(this,arguments)}finally{j=n}}},t.unstable_getCurrentPriorityLevel=function(){return j},t.unstable_shouldYield=function(){var e=t.unstable_now();D(e);var n=C(O);return n!==M&&null!==M&&null!==n&&null!==n.callback&&n.startTime<=e&&n.expirationTime<M.expirationTime||i()},t.unstable_requestPaint=$,t.unstable_continueExecution=function(){z||I||(z=!0,r(U))},t.unstable_pauseExecution=function(){},t.unstable_getFirstCallbackNode=function(){return C(O)},t.unstable_Profiling=null},function(e,t,n){"use strict";var r=n(19);function o(){}function a(){}a.resetWarningCache=o,e.exports=function(){function e(e,t,n,o,a,i){if(i!==r){var l=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw l.name="Invariant Violation",l}}function t(){return e}e.isRequired=e;var n={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:a,resetWarningCache:o};return n.PropTypes=n,n}},function(e,t,n){"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},function(e,t,n){"use strict";
/** @license React v16.12.0
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */Object.defineProperty(t,"__esModule",{value:!0});var r="function"==typeof Symbol&&Symbol.for,o=r?Symbol.for("react.element"):60103,a=r?Symbol.for("react.portal"):60106,i=r?Symbol.for("react.fragment"):60107,l=r?Symbol.for("react.strict_mode"):60108,u=r?Symbol.for("react.profiler"):60114,c=r?Symbol.for("react.provider"):60109,s=r?Symbol.for("react.context"):60110,f=r?Symbol.for("react.async_mode"):60111,d=r?Symbol.for("react.concurrent_mode"):60111,p=r?Symbol.for("react.forward_ref"):60112,m=r?Symbol.for("react.suspense"):60113,h=r?Symbol.for("react.suspense_list"):60120,v=r?Symbol.for("react.memo"):60115,y=r?Symbol.for("react.lazy"):60116,g=r?Symbol.for("react.fundamental"):60117,b=r?Symbol.for("react.responder"):60118,w=r?Symbol.for("react.scope"):60119;function E(e){if("object"==typeof e&&null!==e){var t=e.$$typeof;switch(t){case o:switch(e=e.type){case f:case d:case i:case u:case l:case m:return e;default:switch(e=e&&e.$$typeof){case s:case p:case y:case v:case c:return e;default:return t}}case a:return t}}}function x(e){return E(e)===d}t.typeOf=E,t.AsyncMode=f,t.ConcurrentMode=d,t.ContextConsumer=s,t.ContextProvider=c,t.Element=o,t.ForwardRef=p,t.Fragment=i,t.Lazy=y,t.Memo=v,t.Portal=a,t.Profiler=u,t.StrictMode=l,t.Suspense=m,t.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===i||e===d||e===u||e===l||e===m||e===h||"object"==typeof e&&null!==e&&(e.$$typeof===y||e.$$typeof===v||e.$$typeof===c||e.$$typeof===s||e.$$typeof===p||e.$$typeof===g||e.$$typeof===b||e.$$typeof===w)},t.isAsyncMode=function(e){return x(e)||E(e)===f},t.isConcurrentMode=x,t.isContextConsumer=function(e){return E(e)===s},t.isContextProvider=function(e){return E(e)===c},t.isElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===o},t.isForwardRef=function(e){return E(e)===p},t.isFragment=function(e){return E(e)===i},t.isLazy=function(e){return E(e)===y},t.isMemo=function(e){return E(e)===v},t.isPortal=function(e){return E(e)===a},t.isProfiler=function(e){return E(e)===u},t.isStrictMode=function(e){return E(e)===l},t.isSuspense=function(e){return E(e)===m}},function(e,t){e.exports=function(e){if(!e.webpackPolyfill){var t=Object.create(e);t.children||(t.children=[]),Object.defineProperty(t,"loaded",{enumerable:!0,get:function(){return t.l}}),Object.defineProperty(t,"id",{enumerable:!0,get:function(){return t.i}}),Object.defineProperty(t,"exports",{enumerable:!0}),t.webpackPolyfill=1}return t}},function(e,t,n){var r=n(23),o=n(24);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var a={insert:"head",singleton:!1},i=(r(o,a),o.locals?o.locals:{});e.exports=i},function(e,t,n){"use strict";var r,o=function(){return void 0===r&&(r=Boolean(window&&document&&document.all&&!window.atob)),r},a=function(){var e={};return function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}e[t]=n}return e[t]}}(),i=[];function l(e){for(var t=-1,n=0;n<i.length;n++)if(i[n].identifier===e){t=n;break}return t}function u(e,t){for(var n={},r=[],o=0;o<e.length;o++){var a=e[o],u=t.base?a[0]+t.base:a[0],c=n[u]||0,s="".concat(u," ").concat(c);n[u]=c+1;var f=l(s),d={css:a[1],media:a[2],sourceMap:a[3]};-1!==f?(i[f].references++,i[f].updater(d)):i.push({identifier:s,updater:v(d,t),references:1}),r.push(s)}return r}function c(e){var t=document.createElement("style"),r=e.attributes||{};if(void 0===r.nonce){var o=n.nc;o&&(r.nonce=o)}if(Object.keys(r).forEach((function(e){t.setAttribute(e,r[e])})),"function"==typeof e.insert)e.insert(t);else{var i=a(e.insert||"head");if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(t)}return t}var s,f=(s=[],function(e,t){return s[e]=t,s.filter(Boolean).join("\n")});function d(e,t,n,r){var o=n?"":r.media?"@media ".concat(r.media," {").concat(r.css,"}"):r.css;if(e.styleSheet)e.styleSheet.cssText=f(t,o);else{var a=document.createTextNode(o),i=e.childNodes;i[t]&&e.removeChild(i[t]),i.length?e.insertBefore(a,i[t]):e.appendChild(a)}}function p(e,t,n){var r=n.css,o=n.media,a=n.sourceMap;if(o?e.setAttribute("media",o):e.removeAttribute("media"),a&&btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleSheet)e.styleSheet.cssText=r;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(r))}}var m=null,h=0;function v(e,t){var n,r,o;if(t.singleton){var a=h++;n=m||(m=c(t)),r=d.bind(null,n,a,!1),o=d.bind(null,n,a,!0)}else n=c(t),r=p.bind(null,n,t),o=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)};return r(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;r(e=t)}else o()}}e.exports=function(e,t){(t=t||{}).singleton||"boolean"==typeof t.singleton||(t.singleton=o());var n=u(e=e||[],t);return function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){for(var r=0;r<n.length;r++){var o=l(n[r]);i[o].references--}for(var a=u(e,t),c=0;c<n.length;c++){var s=l(n[c]);0===i[s].references&&(i[s].updater(),i.splice(s,1))}n=a}}}},function(e,t,n){(t=n(25)(!1)).push([e.i,"/* Global */\r\nbody {\r\n    margin: 0;\r\n\r\n    font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\r\n}\r\nbutton:focus, a:focus, input:focus {\r\n    outline: #4d90fe auto 1px;\r\n}\r\nhr {\r\n    margin: 0;\r\n}\r\nul {\r\n    margin: 0;\r\n    padding: 0;\r\n\r\n    list-style: none;\r\n}\r\n/* button */\r\n.std-button {\r\n    padding: 10px;\r\n\r\n    border: solid 2px #e2e2e2;\r\n    box-sizing: border-box;\r\n\r\n    background-color: #e2e2e2;\r\n\r\n    transition: all .15s ease-in-out;\r\n}\r\n.std-button:hover, .std-button:focus {\r\n    background-color: #fff;\r\n}\r\n/* main title */\r\n.std-title {\r\n    margin: 0 20px 10px 20px;\r\n\r\n    font-size: 2rem;\r\n}\r\n/* markers */\r\n.std-markers {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n}\r\n.std-markers__item {\r\n    width: 10px;\r\n    height: 10px;\r\n\r\n    margin: 5px;\r\n\r\n    border: 3px solid black;\r\n}\r\n/* list */\r\n.std-list {\r\n    margin: 20px;\r\n}\r\n.std-list__element {\r\n    font-size: 1.5rem;\r\n}\r\n.std-list__element::before {\r\n    content: \"\";\r\n\r\n    margin-right: 0.3rem;\r\n\r\n    min-width: 0.8rem;\r\n    height: 0.8rem;\r\n\r\n    display: inline-block;\r\n\r\n    box-sizing: border-box;\r\n    border: 2px solid black;\r\n    border-radius: 50%;\r\n}\r\n.std-list__element a {\r\n    word-break: break-all;\r\n}\r\n/* link */\r\n.std-styled-link {\r\n    text-decoration: none;\r\n    color: #4d90fe;\r\n\r\n    border-bottom: solid 2px transparent;\r\n\r\n    transition: all .15s ease-in-out;\r\n}\r\n.std-styled-link:hover, .std-styled-link:focus {\r\n    border-bottom: solid 2px #4d90fe;\r\n}\r\n\r\n\r\n/* Navigation.jsx */\r\n.navigation {\r\n    min-width: 300px;\r\n\r\n    display: flex;\r\n\r\n    padding: 10px;\r\n\r\n    background-color: #e2e2e2;\r\n}\r\n.navigation__active-link {\r\n    background-color: #ffffff;\r\n}\r\n.navigation a {\r\n    margin-right: 15px;\r\n    padding: 10px;\r\n    \r\n    text-decoration: none;\r\n    text-align: center;\r\n    color: inherit;\r\n\r\n    transition: background-color .15s ease-in-out;\r\n}\r\n.navigation a:last-child {\r\n    margin-right: 0;\r\n}\r\n.navigation a:hover {\r\n    background-color: #ffffff;\r\n}\r\n\r\n\r\n/* LoginForm.jsx */\r\n.login-form {\r\n    padding: 10px;\r\n\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n}\r\n.login-form__input {\r\n    margin-top: 10px;\r\n    padding: 5px;\r\n\r\n    height: 1.6rem;\r\n\r\n    border: none;\r\n    border-bottom: solid 2px #e2e2e2;\r\n\r\n    font-size: 1.2rem;\r\n\r\n    transition: border .15s ease-in-out;\r\n}\r\n.login-form__input:hover, .login-form__input:focus {\r\n    border-bottom: solid 2px black;\r\n}\r\n.login-form__button {\r\n    font-size: 1.2rem;\r\n\r\n    min-width: 120px; \r\n}\r\n\r\n\r\n/* Toggle.jsx */\r\n.toggle {\r\n    padding: 10px;\r\n\r\n    display: inline-flex;\r\n    align-items: center;\r\n\r\n    border: none;\r\n}\r\n.toggle__button {\r\n    margin: 0;\r\n    padding: 0;\r\n\r\n    border: none;\r\n    background: none;\r\n}\r\n.toggle__rail {\r\n    width: 40px;\r\n    height: 20px;\r\n\r\n    margin: 10px;\r\n    position: relative;\r\n\r\n    background-color: #bbb;\r\n    border-radius: 10px;\r\n    box-shadow: inset 0 0 5px rgba(0,0,0,.3);\r\n}\r\n.toggle__switch {\r\n    width: 20px;\r\n    height: 20px;\r\n\r\n    position: absolute;\r\n    left: 0;\r\n\r\n    background-color: black;\r\n    border-radius: 50%;\r\n\r\n    transition: all .15s ease-in-out;\r\n}\r\n.toggle__switch_active {\r\n    left: 20px;\r\n}\r\n.toggle__label {\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\n\r\n/* MainScreen.jsx */\r\n.main-screen {\r\n    padding: 10px;\r\n}\r\n.main-screen__no-routines {\r\n    margin:  20px;\r\n\r\n    font-size: 1.5rem;\r\n}\r\n.main-screen__no-routines span {\r\n    white-space: nowrap;\r\n}\r\n.main-screen__refresh-button {\r\n    margin: 20px;\r\n}\r\n\r\n\r\n/* Routine.jsx */\r\n.routine {\r\n    padding: 10px;\r\n\r\n    font-size: 1.2rem;\r\n}\r\n.routine__markers {\r\n    margin-bottom: 10px;\r\n}\r\n.routine__title {\r\n    margin-top: 10px;\r\n\r\n    word-break: break-all;\r\n}\r\n.routine p {\r\n    margin: 10px 0;\r\n}\r\n.routine__done {\r\n    background-color: #82ff6996;\r\n}\r\n.routine__fail {\r\n    background-color: #ff7a7a96;\r\n}\r\n.routine__delete-button {\r\n    margin-top: 10px;\r\n}\r\n\r\n\r\n/* FailScreen.jsx */\r\n.fail-screen {\r\n    padding: 10px;\r\n}\r\n.fail-screen__list {\r\n    margin: 20px;\r\n}\r\n.fail-screen__list-element {\r\n    margin: 10px 0;\r\n}\r\n.fail-screen__done-button {\r\n    margin-right: 10px;\r\n}\r\n.fail-screen__all-is-done {\r\n    font-size: 1.3rem;\r\n\r\n    margin: 20px 0;\r\n}\r\n\r\n\r\n/* AddPage.jsx */\r\n.add-page {\r\n    padding: 10px;\r\n}\r\n.add-page__input {\r\n    margin: 20px;\r\n    padding: 10px;\r\n\r\n    border: 1px solid black;\r\n\r\n    font-size: 1.2rem;\r\n}\r\n.add-page__fieldset {\r\n    margin: 0 20px 20px 20px;\r\n\r\n    max-width: fit-content;\r\n\r\n    border: 1px solid black;\r\n}\r\n.add-screen__submit-button {\r\n    margin-left: 20px;\r\n}",""]),e.exports=t},function(e,t,n){"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n=function(e,t){var n=e[1]||"",r=e[3];if(!r)return n;if(t&&"function"==typeof btoa){var o=(i=r,l=btoa(unescape(encodeURIComponent(JSON.stringify(i)))),u="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(l),"/*# ".concat(u," */")),a=r.sources.map((function(e){return"/*# sourceURL=".concat(r.sourceRoot||"").concat(e," */")}));return[n].concat(a).concat([o]).join("\n")}var i,l,u;return[n].join("\n")}(t,e);return t[2]?"@media ".concat(t[2]," {").concat(n,"}"):n})).join("")},t.i=function(e,n,r){"string"==typeof e&&(e=[[null,e,""]]);var o={};if(r)for(var a=0;a<this.length;a++){var i=this[a][0];null!=i&&(o[i]=!0)}for(var l=0;l<e.length;l++){var u=[].concat(e[l]);r&&o[u[0]]||(n&&(u[2]?u[2]="".concat(n," and ").concat(u[2]):u[2]=n),t.push(u))}},t}},function(e,t){e.exports=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)}},function(e,t,n){"use strict";n.r(t);var r=n(0),o=n.n(r),a=n(3),i=n.n(a);function l(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e.__proto__=t}var u=n(1),c=n.n(u);function s(){return(s=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function f(e){return"/"===e.charAt(0)}function d(e,t){for(var n=t,r=n+1,o=e.length;r<o;n+=1,r+=1)e[n]=e[r];e.pop()}var p=function(e,t){void 0===t&&(t="");var n,r=e&&e.split("/")||[],o=t&&t.split("/")||[],a=e&&f(e),i=t&&f(t),l=a||i;if(e&&f(e)?o=r:r.length&&(o.pop(),o=o.concat(r)),!o.length)return"/";if(o.length){var u=o[o.length-1];n="."===u||".."===u||""===u}else n=!1;for(var c=0,s=o.length;s>=0;s--){var p=o[s];"."===p?d(o,s):".."===p?(d(o,s),c++):c&&(d(o,s),c--)}if(!l)for(;c--;c)o.unshift("..");!l||""===o[0]||o[0]&&f(o[0])||o.unshift("");var m=o.join("/");return n&&"/"!==m.substr(-1)&&(m+="/"),m};var m=function(e,t){if(!e)throw new Error("Invariant failed")};function h(e){return"/"===e.charAt(0)?e:"/"+e}function v(e){return"/"===e.charAt(0)?e.substr(1):e}function y(e,t){return function(e,t){return 0===e.toLowerCase().indexOf(t.toLowerCase())&&-1!=="/?#".indexOf(e.charAt(t.length))}(e,t)?e.substr(t.length):e}function g(e){return"/"===e.charAt(e.length-1)?e.slice(0,-1):e}function b(e){var t=e.pathname,n=e.search,r=e.hash,o=t||"/";return n&&"?"!==n&&(o+="?"===n.charAt(0)?n:"?"+n),r&&"#"!==r&&(o+="#"===r.charAt(0)?r:"#"+r),o}function w(e,t,n,r){var o;"string"==typeof e?(o=function(e){var t=e||"/",n="",r="",o=t.indexOf("#");-1!==o&&(r=t.substr(o),t=t.substr(0,o));var a=t.indexOf("?");return-1!==a&&(n=t.substr(a),t=t.substr(0,a)),{pathname:t,search:"?"===n?"":n,hash:"#"===r?"":r}}(e)).state=t:(void 0===(o=s({},e)).pathname&&(o.pathname=""),o.search?"?"!==o.search.charAt(0)&&(o.search="?"+o.search):o.search="",o.hash?"#"!==o.hash.charAt(0)&&(o.hash="#"+o.hash):o.hash="",void 0!==t&&void 0===o.state&&(o.state=t));try{o.pathname=decodeURI(o.pathname)}catch(e){throw e instanceof URIError?new URIError('Pathname "'+o.pathname+'" could not be decoded. This is likely caused by an invalid percent-encoding.'):e}return n&&(o.key=n),r?o.pathname?"/"!==o.pathname.charAt(0)&&(o.pathname=p(o.pathname,r.pathname)):o.pathname=r.pathname:o.pathname||(o.pathname="/"),o}function E(){var e=null;var t=[];return{setPrompt:function(t){return e=t,function(){e===t&&(e=null)}},confirmTransitionTo:function(t,n,r,o){if(null!=e){var a="function"==typeof e?e(t,n):e;"string"==typeof a?"function"==typeof r?r(a,o):o(!0):o(!1!==a)}else o(!0)},appendListener:function(e){var n=!0;function r(){n&&e.apply(void 0,arguments)}return t.push(r),function(){n=!1,t=t.filter((function(e){return e!==r}))}},notifyListeners:function(){for(var e=arguments.length,n=new Array(e),r=0;r<e;r++)n[r]=arguments[r];t.forEach((function(e){return e.apply(void 0,n)}))}}}var x=!("undefined"==typeof window||!window.document||!window.document.createElement);function k(e,t){t(window.confirm(e))}function T(){try{return window.history.state||{}}catch(e){return{}}}function S(e){void 0===e&&(e={}),x||m(!1);var t,n=window.history,r=(-1===(t=window.navigator.userAgent).indexOf("Android 2.")&&-1===t.indexOf("Android 4.0")||-1===t.indexOf("Mobile Safari")||-1!==t.indexOf("Chrome")||-1!==t.indexOf("Windows Phone"))&&window.history&&"pushState"in window.history,o=!(-1===window.navigator.userAgent.indexOf("Trident")),a=e,i=a.forceRefresh,l=void 0!==i&&i,u=a.getUserConfirmation,c=void 0===u?k:u,f=a.keyLength,d=void 0===f?6:f,p=e.basename?g(h(e.basename)):"";function v(e){var t=e||{},n=t.key,r=t.state,o=window.location,a=o.pathname+o.search+o.hash;return p&&(a=y(a,p)),w(a,r,n)}function S(){return Math.random().toString(36).substr(2,d)}var C=E();function _(e){s(U,e),U.length=n.length,C.notifyListeners(U.location,U.action)}function P(e){(function(e){return void 0===e.state&&-1===navigator.userAgent.indexOf("CriOS")})(e)||R(v(e.state))}function O(){R(v(T()))}var N=!1;function R(e){if(N)N=!1,_();else{C.confirmTransitionTo(e,"POP",c,(function(t){t?_({action:"POP",location:e}):function(e){var t=U.location,n=j.indexOf(t.key);-1===n&&(n=0);var r=j.indexOf(e.key);-1===r&&(r=0);var o=n-r;o&&(N=!0,z(o))}(e)}))}}var M=v(T()),j=[M.key];function I(e){return p+b(e)}function z(e){n.go(e)}var F=0;function D(e){1===(F+=e)&&1===e?(window.addEventListener("popstate",P),o&&window.addEventListener("hashchange",O)):0===F&&(window.removeEventListener("popstate",P),o&&window.removeEventListener("hashchange",O))}var L=!1;var U={length:n.length,action:"POP",location:M,createHref:I,push:function(e,t){var o=w(e,t,S(),U.location);C.confirmTransitionTo(o,"PUSH",c,(function(e){if(e){var t=I(o),a=o.key,i=o.state;if(r)if(n.pushState({key:a,state:i},null,t),l)window.location.href=t;else{var u=j.indexOf(U.location.key),c=j.slice(0,u+1);c.push(o.key),j=c,_({action:"PUSH",location:o})}else window.location.href=t}}))},replace:function(e,t){var o=w(e,t,S(),U.location);C.confirmTransitionTo(o,"REPLACE",c,(function(e){if(e){var t=I(o),a=o.key,i=o.state;if(r)if(n.replaceState({key:a,state:i},null,t),l)window.location.replace(t);else{var u=j.indexOf(U.location.key);-1!==u&&(j[u]=o.key),_({action:"REPLACE",location:o})}else window.location.replace(t)}}))},go:z,goBack:function(){z(-1)},goForward:function(){z(1)},block:function(e){void 0===e&&(e=!1);var t=C.setPrompt(e);return L||(D(1),L=!0),function(){return L&&(L=!1,D(-1)),t()}},listen:function(e){var t=C.appendListener(e);return D(1),function(){D(-1),t()}}};return U}var C={hashbang:{encodePath:function(e){return"!"===e.charAt(0)?e:"!/"+v(e)},decodePath:function(e){return"!"===e.charAt(0)?e.substr(1):e}},noslash:{encodePath:v,decodePath:h},slash:{encodePath:h,decodePath:h}};function _(e){var t=e.indexOf("#");return-1===t?e:e.slice(0,t)}function P(){var e=window.location.href,t=e.indexOf("#");return-1===t?"":e.substring(t+1)}function O(e){window.location.replace(_(window.location.href)+"#"+e)}function N(e){void 0===e&&(e={}),x||m(!1);var t=window.history,n=(window.navigator.userAgent.indexOf("Firefox"),e),r=n.getUserConfirmation,o=void 0===r?k:r,a=n.hashType,i=void 0===a?"slash":a,l=e.basename?g(h(e.basename)):"",u=C[i],c=u.encodePath,f=u.decodePath;function d(){var e=f(P());return l&&(e=y(e,l)),w(e)}var p=E();function v(e){s(U,e),U.length=t.length,p.notifyListeners(U.location,U.action)}var T=!1,S=null;function N(){var e,t,n=P(),r=c(n);if(n!==r)O(r);else{var a=d(),i=U.location;if(!T&&(t=a,(e=i).pathname===t.pathname&&e.search===t.search&&e.hash===t.hash))return;if(S===b(a))return;S=null,function(e){if(T)T=!1,v();else{p.confirmTransitionTo(e,"POP",o,(function(t){t?v({action:"POP",location:e}):function(e){var t=U.location,n=I.lastIndexOf(b(t));-1===n&&(n=0);var r=I.lastIndexOf(b(e));-1===r&&(r=0);var o=n-r;o&&(T=!0,z(o))}(e)}))}}(a)}}var R=P(),M=c(R);R!==M&&O(M);var j=d(),I=[b(j)];function z(e){t.go(e)}var F=0;function D(e){1===(F+=e)&&1===e?window.addEventListener("hashchange",N):0===F&&window.removeEventListener("hashchange",N)}var L=!1;var U={length:t.length,action:"POP",location:j,createHref:function(e){var t=document.querySelector("base"),n="";return t&&t.getAttribute("href")&&(n=_(window.location.href)),n+"#"+c(l+b(e))},push:function(e,t){var n=w(e,void 0,void 0,U.location);p.confirmTransitionTo(n,"PUSH",o,(function(e){if(e){var t=b(n),r=c(l+t);if(P()!==r){S=t,function(e){window.location.hash=e}(r);var o=I.lastIndexOf(b(U.location)),a=I.slice(0,o+1);a.push(t),I=a,v({action:"PUSH",location:n})}else v()}}))},replace:function(e,t){var n=w(e,void 0,void 0,U.location);p.confirmTransitionTo(n,"REPLACE",o,(function(e){if(e){var t=b(n),r=c(l+t);P()!==r&&(S=t,O(r));var o=I.indexOf(b(U.location));-1!==o&&(I[o]=t),v({action:"REPLACE",location:n})}}))},go:z,goBack:function(){z(-1)},goForward:function(){z(1)},block:function(e){void 0===e&&(e=!1);var t=p.setPrompt(e);return L||(D(1),L=!0),function(){return L&&(L=!1,D(-1)),t()}},listen:function(e){var t=p.appendListener(e);return D(1),function(){D(-1),t()}}};return U}function R(e,t,n){return Math.min(Math.max(e,t),n)}function M(e){void 0===e&&(e={});var t=e,n=t.getUserConfirmation,r=t.initialEntries,o=void 0===r?["/"]:r,a=t.initialIndex,i=void 0===a?0:a,l=t.keyLength,u=void 0===l?6:l,c=E();function f(e){s(y,e),y.length=y.entries.length,c.notifyListeners(y.location,y.action)}function d(){return Math.random().toString(36).substr(2,u)}var p=R(i,0,o.length-1),m=o.map((function(e){return w(e,void 0,"string"==typeof e?d():e.key||d())})),h=b;function v(e){var t=R(y.index+e,0,y.entries.length-1),r=y.entries[t];c.confirmTransitionTo(r,"POP",n,(function(e){e?f({action:"POP",location:r,index:t}):f()}))}var y={length:m.length,action:"POP",location:m[p],index:p,entries:m,createHref:h,push:function(e,t){var r=w(e,t,d(),y.location);c.confirmTransitionTo(r,"PUSH",n,(function(e){if(e){var t=y.index+1,n=y.entries.slice(0);n.length>t?n.splice(t,n.length-t,r):n.push(r),f({action:"PUSH",location:r,index:t,entries:n})}}))},replace:function(e,t){var r=w(e,t,d(),y.location);c.confirmTransitionTo(r,"REPLACE",n,(function(e){e&&(y.entries[y.index]=r,f({action:"REPLACE",location:r}))}))},go:v,goBack:function(){v(-1)},goForward:function(){v(1)},canGo:function(e){var t=y.index+e;return t>=0&&t<y.entries.length},block:function(e){return void 0===e&&(e=!1),c.setPrompt(e)},listen:function(e){return c.appendListener(e)}};return y}var j=n(8),I=n.n(j),z=n(13),F=n.n(z);function D(e){var t=[];return{on:function(e){t.push(e)},off:function(e){t=t.filter((function(t){return t!==e}))},get:function(){return e},set:function(n,r){e=n,t.forEach((function(t){return t(e,r)}))}}}var L=o.a.createContext||function(e,t){var n,o,a="__create-react-context-"+F()()+"__",i=function(e){function n(){var t;return(t=e.apply(this,arguments)||this).emitter=D(t.props.value),t}I()(n,e);var r=n.prototype;return r.getChildContext=function(){var e;return(e={})[a]=this.emitter,e},r.componentWillReceiveProps=function(e){if(this.props.value!==e.value){var n,r=this.props.value,o=e.value;((a=r)===(i=o)?0!==a||1/a==1/i:a!=a&&i!=i)?n=0:(n="function"==typeof t?t(r,o):1073741823,0!==(n|=0)&&this.emitter.set(e.value,n))}var a,i},r.render=function(){return this.props.children},n}(r.Component);i.childContextTypes=((n={})[a]=c.a.object.isRequired,n);var l=function(t){function n(){var e;return(e=t.apply(this,arguments)||this).state={value:e.getValue()},e.onUpdate=function(t,n){0!=((0|e.observedBits)&n)&&e.setState({value:e.getValue()})},e}I()(n,t);var r=n.prototype;return r.componentWillReceiveProps=function(e){var t=e.observedBits;this.observedBits=null==t?1073741823:t},r.componentDidMount=function(){this.context[a]&&this.context[a].on(this.onUpdate);var e=this.props.observedBits;this.observedBits=null==e?1073741823:e},r.componentWillUnmount=function(){this.context[a]&&this.context[a].off(this.onUpdate)},r.getValue=function(){return this.context[a]?this.context[a].get():e},r.render=function(){return(e=this.props.children,Array.isArray(e)?e[0]:e)(this.state.value);var e},n}(r.Component);return l.contextTypes=((o={})[a]=c.a.object,o),{Provider:i,Consumer:l}},U=n(9),A=n.n(U),$=n(5);function W(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}var B=n(4),H=n.n(B),V=function(e){var t=L();return t.displayName=e,t}("Router"),q=function(e){function t(t){var n;return(n=e.call(this,t)||this).state={location:t.history.location},n._isMounted=!1,n._pendingLocation=null,t.staticContext||(n.unlisten=t.history.listen((function(e){n._isMounted?n.setState({location:e}):n._pendingLocation=e}))),n}l(t,e),t.computeRootMatch=function(e){return{path:"/",url:"/",params:{},isExact:"/"===e}};var n=t.prototype;return n.componentDidMount=function(){this._isMounted=!0,this._pendingLocation&&this.setState({location:this._pendingLocation})},n.componentWillUnmount=function(){this.unlisten&&this.unlisten()},n.render=function(){return o.a.createElement(V.Provider,{children:this.props.children||null,value:{history:this.props.history,location:this.state.location,match:t.computeRootMatch(this.state.location.pathname),staticContext:this.props.staticContext}})},t}(o.a.Component);o.a.Component;o.a.Component;var K={},Q=0;function Y(e,t){void 0===t&&(t={}),("string"==typeof t||Array.isArray(t))&&(t={path:t});var n=t,r=n.path,o=n.exact,a=void 0!==o&&o,i=n.strict,l=void 0!==i&&i,u=n.sensitive,c=void 0!==u&&u;return[].concat(r).reduce((function(t,n){if(!n&&""!==n)return null;if(t)return t;var r=function(e,t){var n=""+t.end+t.strict+t.sensitive,r=K[n]||(K[n]={});if(r[e])return r[e];var o=[],a={regexp:A()(e,o,t),keys:o};return Q<1e4&&(r[e]=a,Q++),a}(n,{end:a,strict:l,sensitive:c}),o=r.regexp,i=r.keys,u=o.exec(e);if(!u)return null;var s=u[0],f=u.slice(1),d=e===s;return a&&!d?null:{path:n,url:"/"===n&&""===s?"/":s,isExact:d,params:i.reduce((function(e,t,n){return e[t.name]=f[n],e}),{})}}),null)}var G=function(e){function t(){return e.apply(this,arguments)||this}return l(t,e),t.prototype.render=function(){var e=this;return o.a.createElement(V.Consumer,null,(function(t){t||m(!1);var n=e.props.location||t.location,r=s({},t,{location:n,match:e.props.computedMatch?e.props.computedMatch:e.props.path?Y(n.pathname,e.props):t.match}),a=e.props,i=a.children,l=a.component,u=a.render;return Array.isArray(i)&&0===i.length&&(i=null),o.a.createElement(V.Provider,{value:r},r.match?i?"function"==typeof i?i(r):i:l?o.a.createElement(l,r):u?u(r):null:"function"==typeof i?i(r):null)}))},t}(o.a.Component);function X(e){return"/"===e.charAt(0)?e:"/"+e}function J(e,t){if(!e)return t;var n=X(e);return 0!==t.pathname.indexOf(n)?t:s({},t,{pathname:t.pathname.substr(n.length)})}function Z(e){return"string"==typeof e?e:b(e)}function ee(e){return function(){m(!1)}}function te(){}o.a.Component;var ne=function(e){function t(){return e.apply(this,arguments)||this}return l(t,e),t.prototype.render=function(){var e=this;return o.a.createElement(V.Consumer,null,(function(t){t||m(!1);var n,r,a=e.props.location||t.location;return o.a.Children.forEach(e.props.children,(function(e){if(null==r&&o.a.isValidElement(e)){n=e;var i=e.props.path||e.props.from;r=i?Y(a.pathname,s({},e.props,{path:i})):t.match}})),r?o.a.cloneElement(n,{location:a,computedMatch:r}):null}))},t}(o.a.Component);var re=o.a.useContext;function oe(){return re(V).history}var ae=function(e){function t(){for(var t,n=arguments.length,r=new Array(n),o=0;o<n;o++)r[o]=arguments[o];return(t=e.call.apply(e,[this].concat(r))||this).history=S(t.props),t}return l(t,e),t.prototype.render=function(){return o.a.createElement(q,{history:this.history,children:this.props.children})},t}(o.a.Component);o.a.Component;var ie=function(e,t){return"function"==typeof e?e(t):e},le=function(e,t){return"string"==typeof e?w(e,null,null,t):e},ue=function(e){return e},ce=o.a.forwardRef;void 0===ce&&(ce=ue);var se=ce((function(e,t){var n=e.innerRef,r=e.navigate,a=e.onClick,i=W(e,["innerRef","navigate","onClick"]),l=i.target,u=s({},i,{onClick:function(e){try{a&&a(e)}catch(t){throw e.preventDefault(),t}e.defaultPrevented||0!==e.button||l&&"_self"!==l||function(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}(e)||(e.preventDefault(),r())}});return u.ref=ue!==ce&&t||n,o.a.createElement("a",u)}));var fe=ce((function(e,t){var n=e.component,r=void 0===n?se:n,a=e.replace,i=e.to,l=e.innerRef,u=W(e,["component","replace","to","innerRef"]);return o.a.createElement(V.Consumer,null,(function(e){e||m(!1);var n=e.history,c=le(ie(i,e.location),e.location),f=c?n.createHref(c):"",d=s({},u,{href:f,navigate:function(){var t=ie(i,e.location);(a?n.replace:n.push)(t)}});return ue!==ce?d.ref=t||l:d.innerRef=l,o.a.createElement(r,d)}))})),de=function(e){return e},pe=o.a.forwardRef;void 0===pe&&(pe=de);var me=pe((function(e,t){var n=e["aria-current"],r=void 0===n?"page":n,a=e.activeClassName,i=void 0===a?"active":a,l=e.activeStyle,u=e.className,c=e.exact,f=e.isActive,d=e.location,p=e.strict,h=e.style,v=e.to,y=e.innerRef,g=W(e,["aria-current","activeClassName","activeStyle","className","exact","isActive","location","strict","style","to","innerRef"]);return o.a.createElement(V.Consumer,null,(function(e){e||m(!1);var n=d||e.location,a=le(ie(v,n),n),b=a.pathname,w=b&&b.replace(/([.+*?=^!:${}()[\]|/\\])/g,"\\$1"),E=w?Y(n.pathname,{path:w,exact:c,strict:p}):null,x=!!(f?f(E,n):E),k=x?function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.filter((function(e){return e})).join(" ")}(u,i):u,T=x?s({},h,{},l):h,S=s({"aria-current":x&&r||null,className:k,style:T,to:a},g);return de!==pe?S.ref=t||y:S.innerRef=y,o.a.createElement(fe,S)}))})),he=o.a.createContext(null);var ve=function(e){e()},ye={notify:function(){}};function ge(){var e=ve,t=[],n=[];return{clear:function(){n=null,t=null},notify:function(){var r=t=n;e((function(){for(var e=0;e<r.length;e++)r[e]()}))},get:function(){return n},subscribe:function(e){var r=!0;return n===t&&(n=t.slice()),n.push(e),function(){r&&null!==t&&(r=!1,n===t&&(n=t.slice()),n.splice(n.indexOf(e),1))}}}}var be=function(){function e(e,t){this.store=e,this.parentSub=t,this.unsubscribe=null,this.listeners=ye,this.handleChangeWrapper=this.handleChangeWrapper.bind(this)}var t=e.prototype;return t.addNestedSub=function(e){return this.trySubscribe(),this.listeners.subscribe(e)},t.notifyNestedSubs=function(){this.listeners.notify()},t.handleChangeWrapper=function(){this.onStateChange&&this.onStateChange()},t.isSubscribed=function(){return Boolean(this.unsubscribe)},t.trySubscribe=function(){this.unsubscribe||(this.unsubscribe=this.parentSub?this.parentSub.addNestedSub(this.handleChangeWrapper):this.store.subscribe(this.handleChangeWrapper),this.listeners=ge())},t.tryUnsubscribe=function(){this.unsubscribe&&(this.unsubscribe(),this.unsubscribe=null,this.listeners.clear(),this.listeners=ye)},e}();function we(e){var t=e.store,n=e.context,a=e.children,i=Object(r.useMemo)((function(){var e=new be(t);return e.onStateChange=e.notifyNestedSubs,{store:t,subscription:e}}),[t]),l=Object(r.useMemo)((function(){return t.getState()}),[t]);Object(r.useEffect)((function(){var e=i.subscription;return e.trySubscribe(),l!==t.getState()&&e.notifyNestedSubs(),function(){e.tryUnsubscribe(),e.onStateChange=null}}),[i,l]);var u=n||he;return o.a.createElement(u.Provider,{value:i},a)}we.propTypes={store:c.a.shape({subscribe:c.a.func.isRequired,dispatch:c.a.func.isRequired,getState:c.a.func.isRequired}),context:c.a.object,children:c.a.any};var Ee=we,xe=n(2),ke=n.n(xe),Te="undefined"!=typeof window&&void 0!==window.document&&void 0!==window.document.createElement?r.useLayoutEffect:r.useEffect,Se=[],Ce=[null,null];function _e(e,t){var n=e[1];return[t.payload,n+1]}var Pe=function(){return[null,0]};function Oe(e,t){void 0===t&&(t={});var n=t,a=n.getDisplayName,i=void 0===a?function(e){return"ConnectAdvanced("+e+")"}:a,l=n.methodName,u=void 0===l?"connectAdvanced":l,c=n.renderCountProp,f=void 0===c?void 0:c,d=n.shouldHandleStateChanges,p=void 0===d||d,m=n.storeKey,h=void 0===m?"store":m,v=n.withRef,y=void 0!==v&&v,g=n.forwardRef,b=void 0!==g&&g,w=n.context,E=void 0===w?he:w,x=W(n,["getDisplayName","methodName","renderCountProp","shouldHandleStateChanges","storeKey","withRef","forwardRef","context"]);ke()(void 0===f,"renderCountProp is removed. render counting is built into the latest React Dev Tools profiling extension"),ke()(!y,"withRef is removed. To access the wrapped instance, use a ref on the connected component");ke()("store"===h,"storeKey has been removed and does not do anything. To use a custom Redux store for specific components, create a custom React context with React.createContext(), and pass the context object to React Redux's Provider and specific components like: <Provider context={MyContext}><ConnectedComponent context={MyContext} /></Provider>. You may also pass a {context : MyContext} option to connect");var k=E;return function(t){var n=t.displayName||t.name||"Component",a=i(n),l=s({},x,{getDisplayName:i,methodName:u,renderCountProp:f,shouldHandleStateChanges:p,storeKey:h,displayName:a,wrappedComponentName:n,WrappedComponent:t}),c=x.pure;var d=c?r.useMemo:function(e){return e()};function m(n){var i=Object(r.useMemo)((function(){var e=n.forwardedRef,t=W(n,["forwardedRef"]);return[n.context,e,t]}),[n]),u=i[0],c=i[1],f=i[2],m=Object(r.useMemo)((function(){return u&&u.Consumer&&Object($.isContextConsumer)(o.a.createElement(u.Consumer,null))?u:k}),[u,k]),h=Object(r.useContext)(m),v=Boolean(n.store)&&Boolean(n.store.getState)&&Boolean(n.store.dispatch),y=Boolean(h)&&Boolean(h.store);ke()(v||y,'Could not find "store" in the context of "'+a+'". Either wrap the root component in a <Provider>, or pass a custom React context provider to <Provider> and the corresponding React context consumer to '+a+" in connect options.");var g=v?n.store:h.store,b=Object(r.useMemo)((function(){return function(t){return e(t.dispatch,l)}(g)}),[g]),w=Object(r.useMemo)((function(){if(!p)return Ce;var e=new be(g,v?null:h.subscription),t=e.notifyNestedSubs.bind(e);return[e,t]}),[g,v,h]),E=w[0],x=w[1],T=Object(r.useMemo)((function(){return v?h:s({},h,{subscription:E})}),[v,h,E]),S=Object(r.useReducer)(_e,Se,Pe),C=S[0][0],_=S[1];if(C&&C.error)throw C.error;var P=Object(r.useRef)(),O=Object(r.useRef)(f),N=Object(r.useRef)(),R=Object(r.useRef)(!1),M=d((function(){return N.current&&f===O.current?N.current:b(g.getState(),f)}),[g,C,f]);Te((function(){O.current=f,P.current=M,R.current=!1,N.current&&(N.current=null,x())})),Te((function(){if(p){var e=!1,t=null,n=function(){if(!e){var n,r,o=g.getState();try{n=b(o,O.current)}catch(e){r=e,t=e}r||(t=null),n===P.current?R.current||x():(P.current=n,N.current=n,R.current=!0,_({type:"STORE_UPDATED",payload:{error:r}}))}};E.onStateChange=n,E.trySubscribe(),n();return function(){if(e=!0,E.tryUnsubscribe(),E.onStateChange=null,t)throw t}}}),[g,E,b]);var j=Object(r.useMemo)((function(){return o.a.createElement(t,s({},M,{ref:c}))}),[c,t,M]);return Object(r.useMemo)((function(){return p?o.a.createElement(m.Provider,{value:T},j):j}),[m,j,T])}var v=c?o.a.memo(m):m;if(v.WrappedComponent=t,v.displayName=a,b){var y=o.a.forwardRef((function(e,t){return o.a.createElement(v,s({},e,{forwardedRef:t}))}));return y.displayName=a,y.WrappedComponent=t,H()(y,t)}return H()(v,t)}}var Ne=Object.prototype.hasOwnProperty;function Re(e,t){return e===t?0!==e||0!==t||1/e==1/t:e!=e&&t!=t}function Me(e,t){if(Re(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(var o=0;o<n.length;o++)if(!Ne.call(t,n[o])||!Re(e[n[o]],t[n[o]]))return!1;return!0}var je=n(7),Ie=function(){return Math.random().toString(36).substring(7).split("").join(".")},ze={INIT:"@@redux/INIT"+Ie(),REPLACE:"@@redux/REPLACE"+Ie(),PROBE_UNKNOWN_ACTION:function(){return"@@redux/PROBE_UNKNOWN_ACTION"+Ie()}};function Fe(e){if("object"!=typeof e||null===e)return!1;for(var t=e;null!==Object.getPrototypeOf(t);)t=Object.getPrototypeOf(t);return Object.getPrototypeOf(e)===t}function De(e,t){return function(){return t(e.apply(this,arguments))}}function Le(e){return function(t,n){var r=e(t,n);function o(){return r}return o.dependsOnOwnProps=!1,o}}function Ue(e){return null!==e.dependsOnOwnProps&&void 0!==e.dependsOnOwnProps?Boolean(e.dependsOnOwnProps):1!==e.length}function Ae(e,t){return function(t,n){n.displayName;var r=function(e,t){return r.dependsOnOwnProps?r.mapToProps(e,t):r.mapToProps(e)};return r.dependsOnOwnProps=!0,r.mapToProps=function(t,n){r.mapToProps=e,r.dependsOnOwnProps=Ue(e);var o=r(t,n);return"function"==typeof o&&(r.mapToProps=o,r.dependsOnOwnProps=Ue(o),o=r(t,n)),o},r}}var $e=[function(e){return"function"==typeof e?Ae(e):void 0},function(e){return e?void 0:Le((function(e){return{dispatch:e}}))},function(e){return e&&"object"==typeof e?Le((function(t){return function(e,t){if("function"==typeof e)return De(e,t);if("object"!=typeof e||null===e)throw new Error("bindActionCreators expected an object or a function, instead received "+(null===e?"null":typeof e)+'. Did you write "import ActionCreators from" instead of "import * as ActionCreators from"?');var n={};for(var r in e){var o=e[r];"function"==typeof o&&(n[r]=De(o,t))}return n}(e,t)})):void 0}];var We=[function(e){return"function"==typeof e?Ae(e):void 0},function(e){return e?void 0:Le((function(){return{}}))}];function Be(e,t,n){return s({},n,{},e,{},t)}var He=[function(e){return"function"==typeof e?function(e){return function(t,n){n.displayName;var r,o=n.pure,a=n.areMergedPropsEqual,i=!1;return function(t,n,l){var u=e(t,n,l);return i?o&&a(u,r)||(r=u):(i=!0,r=u),r}}}(e):void 0},function(e){return e?void 0:function(){return Be}}];function Ve(e,t,n,r){return function(o,a){return n(e(o,a),t(r,a),a)}}function qe(e,t,n,r,o){var a,i,l,u,c,s=o.areStatesEqual,f=o.areOwnPropsEqual,d=o.areStatePropsEqual,p=!1;function m(o,p){var m,h,v=!f(p,i),y=!s(o,a);return a=o,i=p,v&&y?(l=e(a,i),t.dependsOnOwnProps&&(u=t(r,i)),c=n(l,u,i)):v?(e.dependsOnOwnProps&&(l=e(a,i)),t.dependsOnOwnProps&&(u=t(r,i)),c=n(l,u,i)):y?(m=e(a,i),h=!d(m,l),l=m,h&&(c=n(l,u,i)),c):c}return function(o,s){return p?m(o,s):(l=e(a=o,i=s),u=t(r,i),c=n(l,u,i),p=!0,c)}}function Ke(e,t){var n=t.initMapStateToProps,r=t.initMapDispatchToProps,o=t.initMergeProps,a=W(t,["initMapStateToProps","initMapDispatchToProps","initMergeProps"]),i=n(e,a),l=r(e,a),u=o(e,a);return(a.pure?qe:Ve)(i,l,u,e,a)}function Qe(e,t,n){for(var r=t.length-1;r>=0;r--){var o=t[r](e);if(o)return o}return function(t,r){throw new Error("Invalid value of type "+typeof e+" for "+n+" argument when connecting component "+r.wrappedComponentName+".")}}function Ye(e,t){return e===t}var Ge,Xe,Je,Ze,et,tt,nt,rt,ot,at,it,lt,ut=(Je=(Xe=void 0===Ge?{}:Ge).connectHOC,Ze=void 0===Je?Oe:Je,et=Xe.mapStateToPropsFactories,tt=void 0===et?We:et,nt=Xe.mapDispatchToPropsFactories,rt=void 0===nt?$e:nt,ot=Xe.mergePropsFactories,at=void 0===ot?He:ot,it=Xe.selectorFactory,lt=void 0===it?Ke:it,function(e,t,n,r){void 0===r&&(r={});var o=r,a=o.pure,i=void 0===a||a,l=o.areStatesEqual,u=void 0===l?Ye:l,c=o.areOwnPropsEqual,f=void 0===c?Me:c,d=o.areStatePropsEqual,p=void 0===d?Me:d,m=o.areMergedPropsEqual,h=void 0===m?Me:m,v=W(o,["pure","areStatesEqual","areOwnPropsEqual","areStatePropsEqual","areMergedPropsEqual"]),y=Qe(e,tt,"mapStateToProps"),g=Qe(t,rt,"mapDispatchToProps"),b=Qe(n,at,"mergeProps");return Ze(lt,s({methodName:"connect",getDisplayName:function(e){return"Connect("+e+")"},shouldHandleStateChanges:Boolean(e),initMapStateToProps:y,initMapDispatchToProps:g,initMergeProps:b,pure:i,areStatesEqual:u,areOwnPropsEqual:f,areStatePropsEqual:p,areMergedPropsEqual:h},v))});function ct(){var e=Object(r.useContext)(he);return ke()(e,"could not find react-redux context value; please ensure the component is wrapped in a <Provider>"),e}function st(e){void 0===e&&(e=he);var t=e===he?ct:function(){return Object(r.useContext)(e)};return function(){return t().store}}var ft=st();!function(e){void 0===e&&(e=he);var t=e===he?ft:st(e)}();var dt=function(e,t){return e===t};var pt;!function(e){void 0===e&&(e=he);var t=e===he?ct:function(){return Object(r.useContext)(e)}}();pt=a.unstable_batchedUpdates,ve=pt;const mt={userId:"",routines:[],fetching:!1};var ht=function e(t,n,r){var o;if("function"==typeof n&&"function"==typeof r||"function"==typeof r&&"function"==typeof arguments[3])throw new Error("It looks like you are passing several store enhancers to createStore(). This is not supported. Instead, compose them together to a single function.");if("function"==typeof n&&void 0===r&&(r=n,n=void 0),void 0!==r){if("function"!=typeof r)throw new Error("Expected the enhancer to be a function.");return r(e)(t,n)}if("function"!=typeof t)throw new Error("Expected the reducer to be a function.");var a=t,i=n,l=[],u=l,c=!1;function s(){u===l&&(u=l.slice())}function f(){if(c)throw new Error("You may not call store.getState() while the reducer is executing. The reducer has already received the state as an argument. Pass it down from the top reducer instead of reading it from the store.");return i}function d(e){if("function"!=typeof e)throw new Error("Expected the listener to be a function.");if(c)throw new Error("You may not call store.subscribe() while the reducer is executing. If you would like to be notified after the store has been updated, subscribe from a component and invoke store.getState() in the callback to access the latest state. See https://redux.js.org/api-reference/store#subscribelistener for more details.");var t=!0;return s(),u.push(e),function(){if(t){if(c)throw new Error("You may not unsubscribe from a store listener while the reducer is executing. See https://redux.js.org/api-reference/store#subscribelistener for more details.");t=!1,s();var n=u.indexOf(e);u.splice(n,1),l=null}}}function p(e){if(!Fe(e))throw new Error("Actions must be plain objects. Use custom middleware for async actions.");if(void 0===e.type)throw new Error('Actions may not have an undefined "type" property. Have you misspelled a constant?');if(c)throw new Error("Reducers may not dispatch actions.");try{c=!0,i=a(i,e)}finally{c=!1}for(var t=l=u,n=0;n<t.length;n++){(0,t[n])()}return e}function m(e){if("function"!=typeof e)throw new Error("Expected the nextReducer to be a function.");a=e,p({type:ze.REPLACE})}function h(){var e,t=d;return(e={subscribe:function(e){if("object"!=typeof e||null===e)throw new TypeError("Expected the observer to be an object.");function n(){e.next&&e.next(f())}return n(),{unsubscribe:t(n)}}})[je.a]=function(){return this},e}return p({type:ze.INIT}),(o={dispatch:p,subscribe:d,getState:f,replaceReducer:m})[je.a]=h,o}((e=mt,t)=>{switch(console.log(t.type),console.log(t.payload),t.type){case"LOGIN_ACTION":return{...e,userId:t.payload};case"ROUTINES_FETCHED":return{...e,routines:t.payload};case"ADD_NEW_ROUTINE":return{...e,routines:[...e.routines,t.payload]};case"DELETE_ROUTINE":return{...e,routines:e.routines.filter(e=>e._id!==t.payload)};case"START_END_FETCHING":return{...e,fetching:t.payload}}return e});n(22);const vt=e=>({type:"ROUTINES_FETCHED",payload:e}),yt=e=>({type:"START_END_FETCHING",payload:e}),gt={basic:"black",error:"#a83232",warning:"#FBD626",success:"#48AC2D"},bt=o.a.memo((function({text:e,placeNumber:t,id:n,type:a,deleteToast:i}){const l=Object(r.useRef)(),u=Object(r.useRef)(t);return u.current=t,Object(r.useEffect)(()=>{requestAnimationFrame(()=>{l.current.style.opacity=1}),setTimeout(()=>{l.current.addEventListener("transitionend",(function e(){l.current.removeEventListener("transitionend",e),i(n)})),requestAnimationFrame(()=>{l.current.style.transform=`translate(-50%, ${100*u.current-100}%)`,l.current.style.opacity=0})},3500)},[n,i]),Object(r.useEffect)(()=>{requestAnimationFrame(()=>{l.current.style.transform=`translate(-50%, calc(${100*t}% + ${20*(t+1)}px))`})},[t]),o.a.createElement("div",{ref:l,style:{position:"fixed",top:0,left:"50%",padding:"10px 20px",backgroundColor:"white",border:"solid 4px "+gt[a],boxShadow:"0 10px 10px rgba(0,0,0,.3)",transform:"translate(-50%, -100%)",opacity:0,zIndex:999,transition:"all 500ms ease-in-out"}},e)}));function wt({toasts:e,deleteToast:t}){return e.map((e,n)=>o.a.createElement(bt,{key:e.id,text:e.text,placeNumber:n,id:e.id,type:e.type,deleteToast:t}))}const Et=document.createElement("div");document.body.appendChild(Et);let xt=0,kt=[];function Tt(e){kt=kt.filter(t=>t.id!==e),i.a.render(o.a.createElement(wt,{toasts:kt,deleteToast:Tt}),Et)}function St(e,t="basic"){const n={text:e,id:xt++,type:t};kt.push(n),i.a.render(o.a.createElement(wt,{toasts:kt,deleteToast:Tt}),Et)}var Ct=function({toggleFn:e=(()=>{}),active:t=!1,preLabel:n="",postLabel:r=""}){return o.a.createElement("div",{className:"toggle"},o.a.createElement("p",{className:"toggle__label"},n),o.a.createElement("button",{type:"button",className:"toggle__button",onClick:function(){e()}},o.a.createElement("div",{className:"toggle__rail"},o.a.createElement("div",{className:`toggle__switch ${t?"toggle__switch_active":""}`}))),o.a.createElement("p",{className:"toggle__label"},r))};var _t=ut(null,{loginAction:e=>({type:"LOGIN_ACTION",payload:e}),startEndFetching:yt})((function({loginAction:e,startEndFetching:t}){const[n,a]=Object(r.useState)(""),[i,l]=Object(r.useState)(""),[u,c]=Object(r.useState)(!1);let s=oe();async function f(r){t(!0);try{const o=await fetch(r,{method:"POST",headers:{"Content-type":"application/json"},body:JSON.stringify({login:n,password:i})}),a=await o.json();t(!1),a.message&&St(a.message.text,a.message.type),a.userId&&o.ok&&(e(a.userId),s.push("/"))}catch(e){t(!1),St("Some Network problems...","error")}}return o.a.createElement(o.a.Fragment,null,o.a.createElement("form",{className:"login-form",onSubmit:function(e){e.preventDefault(),f(u?"/auth/register":"/auth/login")}},o.a.createElement("input",{className:"login-form__input",type:"text",placeholder:"Login",value:n,onChange:function(e){a(e.target.value)}}),o.a.createElement("input",{className:"login-form__input",type:"password",placeholder:"Password",value:i,onChange:function(e){l(e.target.value)}}),o.a.createElement(Ct,{preLabel:"Login",postLabel:"Register",active:u,toggleFn:function(){c(!u)}}),o.a.createElement("button",{className:"std-button login-form__button",type:"submit"},"Submit")))}));function Pt(){const e=new Date;return e.setHours(0),e.setMinutes(0),e.setSeconds(0),e.setMilliseconds(0),e.toString()}function Ot(e){const t=new Date(e.created);function n(t,n,r,o){const a=new Date,i=[];for(;o.getTime()<=a.getTime();)e.done.find(e=>new Date(e).getTime()===o.getTime())?i.push({date:o.toString(),done:!0}):i.push({date:o.toString(),done:!1}),t(n()+r);return i}if("1m"===e.value)return n(t.setMonth.bind(t),t.getMonth.bind(t),1,t);const r=parseInt(e.value);if(Number.isNaN(r))throw new Error("Wrong Routine Value");return n(t.setDate.bind(t),t.getDate.bind(t),r,t)}async function Nt(e){ht.dispatch(yt(!0));try{const t=await fetch("/routines"),n=await t.json();ht.dispatch(yt(!1)),n.message&&St(n.message.text,n.message.type),n.routines&&e(n.routines)}catch(e){ht.dispatch(yt(!1)),St("Some Network problems...","error")}}var Rt=ut(({routines:e})=>({routines:e}),{routinesFetched:vt})((function({routinesFetched:e,routines:t}){return Object(r.useEffect)(()=>{Nt(e)},[]),o.a.createElement("div",{className:"main-screen"},o.a.createElement("h1",{className:"std-title"},"All Routines:"),o.a.createElement("hr",null),t.length?o.a.createElement("ul",{className:"std-list"},t.map(e=>o.a.createElement("li",{className:"std-list__element",key:e._id},o.a.createElement(fe,{to:`/routine/${e._id}`,className:"std-styled-link"},e.title)))):o.a.createElement("p",{className:"main-screen__no-routines"},"There is no Routines",o.a.createElement("span",null," (you can ",o.a.createElement(fe,{to:"/add",className:"std-styled-link"},"add some"),")")),o.a.createElement("hr",null),o.a.createElement("button",{className:"std-button main-screen__refresh-button",onClick:()=>Nt(e)},"Refresh"))}));var Mt=ut(({routines:e})=>({routines:e}),{routinesFetched:vt})((function({routines:e,routinesFetched:t}){Object(r.useEffect)(()=>{Nt(t)},[]);const n=e.map(e=>{const t=Ot(e);return new Date(e.done[e.done.length-1]).getTime()!==new Date(Pt()).getTime()&&(new Date(t[t.length-1].date).getTime()===new Date(Pt()).getTime()&&{title:e.title,id:e._id})}).filter(e=>!1!==e);return o.a.createElement("div",{className:"fail-screen"},o.a.createElement("h1",{className:"std-title"},"Today's routine:"),o.a.createElement("hr",null),o.a.createElement("ul",{className:"std-list"},n.length?n.map(e=>o.a.createElement("li",{key:e.id,className:"std-list__element fail-screen__list-element"},o.a.createElement("button",{className:"std-button fail-screen__done-button",onClick:()=>async function(e){try{const n=await fetch("/routines/done",{method:"POST",headers:{"Content-type":"application/json"},body:JSON.stringify({routineId:e})}),r=await n.json();r.message&&St(r.message.text,r.message.type),r.routine&&Nt(t)}catch(e){console.log(e),St("Some Network Problems","error")}}(e.id)},"Done"),o.a.createElement(fe,{to:"/routine/"+e.id,className:"std-styled-link"},e.title))):o.a.createElement("p",{className:"fail-screen__all-is-done"},"All is Done")))}));var jt=function(){return o.a.createElement("nav",{className:"navigation"},o.a.createElement(me,{to:"/login",activeClassName:"navigation__active-link"},"Login Page"),o.a.createElement(me,{to:"/",activeClassName:"navigation__active-link",exact:!0},"Main Page"),o.a.createElement(me,{to:"/fail",activeClassName:"navigation__active-link"},"Fail Page"),o.a.createElement(me,{to:"/add",activeClassName:"navigation__active-link"},"Add Page"))};var It=ut(null,{addNewRoutine:e=>({type:"ADD_NEW_ROUTINE",payload:e})})((function({addNewRoutine:e}){const[t,n]=Object(r.useState)("1"),[a,i]=Object(r.useState)(""),[l,u]=Object(r.useState)("");function c(e){n(e.target.value)}return o.a.createElement("form",{onSubmit:async function(r){r.preventDefault();const o={title:l,value:"custom"===t?a:t};try{const t=await fetch("/routines/add",{method:"POST",headers:{"Content-type":"application/json"},body:JSON.stringify(o)}),r=await t.json();r.message&&St(r.message.text,r.message.type),t.ok&&e(r.routine),n("1"),i(""),u("")}catch(e){console.log(e),St("Some Network Problems","error")}},className:"add-page"},o.a.createElement("h1",{className:"std-title"},"Add new Routine"),o.a.createElement("hr",null),o.a.createElement("input",{type:"text",className:"add-page__input",placeholder:"Routine title...",autoFocus:!0,value:l,onChange:e=>u(e.target.value)}),o.a.createElement("fieldset",{className:"add-page__fieldset"},o.a.createElement("legend",null,"Repeat"),o.a.createElement("div",null,o.a.createElement("input",{type:"radio",name:"repeat",value:"1",id:"repeat1",checked:"1"===t,onChange:c}),o.a.createElement("label",{htmlFor:"repeat1"},"Every Day")),o.a.createElement("div",null,o.a.createElement("input",{type:"radio",name:"repeat",value:"7",id:"repeat2",checked:"7"===t,onChange:c}),o.a.createElement("label",{htmlFor:"repeat2"},"Every Week")),o.a.createElement("div",null,o.a.createElement("input",{type:"radio",name:"repeat",value:"14",id:"repeat3",checked:"14"===t,onChange:c}),o.a.createElement("label",{htmlFor:"repeat3"},"Every 2 Weeks")),o.a.createElement("div",null,o.a.createElement("input",{type:"radio",name:"repeat",value:"1m",id:"repeat4",checked:"1m"===t,onChange:c}),o.a.createElement("label",{htmlFor:"repeat4"},"Every Month")),o.a.createElement("div",null,o.a.createElement("input",{type:"radio",name:"repeat",value:"custom",id:"repeat5",checked:"custom"===t,onChange:c}),o.a.createElement("label",{htmlFor:"repeat5"},"Custom"),"custom"===t?o.a.createElement("input",{type:"text",placeholder:"Numbers of Day...",autoFocus:!0,value:a,onChange:e=>i(e.target.value)}):null)),o.a.createElement("button",{type:"submit",className:"std-button add-screen__submit-button"},"Add"))}));function zt({done:e,date:t}){return o.a.createElement("div",{className:"std-markers__item",style:{backgroundColor:e?"#82ff69":"#ff7a7a"},title:t})}var Ft=ut(({routines:e})=>({routines:e}),{deleteRoutine:e=>({type:"DELETE_ROUTINE",payload:e})})((function({routines:e,deleteRoutine:t}){const{id:n}=(r=re(V).match)?r.params:{};var r;const a=oe(),i=e.find(e=>e._id===n),l=new Date(i.created),u=Ot(i);return o.a.createElement("div",{className:"routine"},o.a.createElement("div",{className:"std-markers routine__markers"},u.map((e,t)=>o.a.createElement(zt,{key:t,done:e.done,date:e.date}))),o.a.createElement("hr",null),o.a.createElement("h1",{className:"std-title routine__title"},i.title),o.a.createElement("hr",null),o.a.createElement("p",null,"Created: ",`${l.getDate()}.${l.getMonth()+1}.${l.getFullYear()}`),o.a.createElement("p",null,"Done: ",o.a.createElement("span",{className:"routine__done"},u.reduce((e,t)=>t.done?++e:e,0))," times"),o.a.createElement("p",null,"Fail: ",o.a.createElement("span",{className:"routine__fail"},u.reduce((e,t)=>t.done?e:++e,0))," times"),o.a.createElement("hr",null),o.a.createElement("button",{className:"std-button routine__delete-button",onClick:async function(){const e=await async function(e){ht.dispatch(yt(!0));try{const t=await fetch("/routines",{method:"DELETE",headers:{"Content-type":"application/json"},body:JSON.stringify({routineId:e})}),n=await t.json();if(ht.dispatch(yt(!1)),n.message&&St(n.message.text,n.message.type),n.routineId)return n.routineId}catch(e){ht.dispatch(yt(!1)),St("Some Network problems...","error")}}(n);e&&(a.push("/"),t(e))}},"Delete"))}));var Dt=ut(({fetching:e})=>({fetching:e}),null)((function({fetching:e}){return o.a.createElement("div",{style:{width:100,height:35,fontSize:20,position:"fixed",display:e?"flex":"none",backgroundColor:"black",color:"white",right:10,top:10,justifyContent:"center",alignItems:"center"}},"Loading...")}));i.a.render(o.a.createElement(Ee,{store:ht},o.a.createElement(ae,null,o.a.createElement((function(){return o.a.createElement(o.a.Fragment,null,o.a.createElement(Dt,null),o.a.createElement(jt,null),o.a.createElement(ne,null,o.a.createElement(G,{path:"/login"},o.a.createElement(_t,null)),o.a.createElement(G,{path:"/fail"},o.a.createElement(Mt,null)),o.a.createElement(G,{path:"/add"},o.a.createElement(It,null)),o.a.createElement(G,{path:"/routine/:id"},o.a.createElement(Ft,null)),o.a.createElement(G,{path:"/"},o.a.createElement(Rt,null))))}),null))),document.getElementById("root"))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,